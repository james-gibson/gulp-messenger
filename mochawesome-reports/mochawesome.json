{
  "reportTitle": "gulp-messenger",
  "stats": {
    "suites": 6,
    "tests": 12,
    "passes": 12,
    "pending": 0,
    "failures": 0,
    "start": "2015-10-03T03:37:09.065Z",
    "end": "2015-10-03T03:37:09.141Z",
    "duration": 76,
    "testsRegistered": 12,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "success",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "title": "",
    "suites": [
      {
        "title": "Messenger (Console / Logger) for Browser and Server, including `gulp` pipeline support",
        "suites": [],
        "tests": [
          {
            "title": "should interpolate string",
            "fullTitle": "Messenger (Console / Logger) for Browser and Server, including `gulp` pipeline support should interpolate string",
            "timedOut": false,
            "duration": 13,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "msg.Info(user);<br>msg.Success(<span class=\"hljs-string\">'Hello there &lt;%= fname %&gt; &lt;%= lname %&gt;:'</span>, user);<br>msg.Success(<span class=\"hljs-string\">'These are our kids &lt;%= kids %&gt;'</span>, user);<br>done();",
            "isRoot": false,
            "uuid": "27cda7ed-ff39-4c86-91ad-7f73f0c6b021",
            "parentUUID": "1dd8407f-c213-4d24-bbb4-98c99841b294",
            "skipped": false
          },
          {
            "title": "should test all messenger routines",
            "fullTitle": "Messenger (Console / Logger) for Browser and Server, including `gulp` pipeline support should test all messenger routines",
            "timedOut": false,
            "duration": 6,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "msg.Log(<span class=\"hljs-string\">'log'</span>);<br>\t\tmsg.Info(<span class=\"hljs-string\">'info'</span>);<br>\t\tmsg.Error(<span class=\"hljs-string\">'error'</span>);<br>\t\tmsg.Success(<span class=\"hljs-string\">'success'</span>);<br>\t\tmsg.Warning(<span class=\"hljs-string\">'warning'</span>);<br>\t\tmsg.Warn(<span class=\"hljs-string\">\"using `warn` shorthand\"</span>);<br>\t\tmsg.Note(chalk.gray(<span class=\"hljs-string\">'note, color supplied by `Chalk` instance'</span>));<br>\t\tmsg.Time(<span class=\"hljs-string\">'time'</span>);<br>\t\tmsg.Debug(<span class=\"hljs-string\">'debug'</span>);<br>\t\tmsg.Header(<span class=\"hljs-string\">'This should be underline'</span>);<br>\t\tmsg.Log(chalk.red.underline(<span class=\"hljs-string\">'You can perform any text customization with simple log and `chalk` library'</span>));<br>\t\tmsg.Info(<span class=\"hljs-string\">'*'</span>,<span class=\"hljs-string\">'Bordered Output'</span>,<span class=\"hljs-string\">'='</span>);<br>\t\tmsg.Warning(<span class=\"hljs-string\">'Testing interpolation by &lt;%=fname %&gt; &lt;%=lname %&gt;'</span>, {fname: <span class=\"hljs-string\">'Mike'</span>, lname: <span class=\"hljs-string\">'Erickson'</span>});<br>\t\tmsg.Info({fname: <span class=\"hljs-string\">'Mike'</span>, lname: <span class=\"hljs-string\">'Erickson'</span>});<br>\t\tmsg.Line();<br>\t\texpect(<span class=\"hljs-literal\">true</span>).to.be.equal(<span class=\"hljs-literal\">true</span>);<br>\t\tdone();",
            "isRoot": false,
            "uuid": "34fae4b3-8c4f-486e-90ed-f0a3ef9cd3cc",
            "parentUUID": "1dd8407f-c213-4d24-bbb4-98c99841b294",
            "skipped": false
          },
          {
            "title": "should test all logging routines",
            "fullTitle": "Messenger (Console / Logger) for Browser and Server, including `gulp` pipeline support should test all logging routines",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(<span class=\"hljs-literal\">true</span>).to.be.equal(<span class=\"hljs-literal\">true</span>);<br>done();",
            "isRoot": false,
            "uuid": "0954a84e-38e0-449e-9fa6-329a722b3677",
            "parentUUID": "1dd8407f-c213-4d24-bbb4-98c99841b294",
            "skipped": false
          },
          {
            "title": "should test `gulp` methods",
            "fullTitle": "Messenger (Console / Logger) for Browser and Server, including `gulp` pipeline support should test `gulp` methods",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(<span class=\"hljs-literal\">true</span>).to.be.equal(<span class=\"hljs-literal\">true</span>);<br>done();",
            "isRoot": false,
            "uuid": "9c4f7450-7e7f-41c9-9657-ffe87194b739",
            "parentUUID": "1dd8407f-c213-4d24-bbb4-98c99841b294",
            "skipped": false
          },
          {
            "title": "should support all optional params",
            "fullTitle": "Messenger (Console / Logger) for Browser and Server, including `gulp` pipeline support should support all optional params",
            "timedOut": false,
            "duration": 2,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "msg.Info(chalk.magenta(<span class=\"hljs-string\">'Note:  These are not working correctly yet...'</span>));<br>\t\tmsg.Line(<span class=\"hljs-string\">'#'</span>);<br>\t\tmsg.Line(<span class=\"hljs-string\">'-'</span>,<span class=\"hljs-number\">40</span>);<br>\t\tdone();",
            "isRoot": false,
            "uuid": "c1a34ee0-e50d-45af-8ddf-0f8f6beea88e",
            "parentUUID": "1dd8407f-c213-4d24-bbb4-98c99841b294",
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/spec/MessengerSpec.js",
        "uuid": "1dd8407f-c213-4d24-bbb4-98c99841b294",
        "fullFile": "/Users/mikee/Documents/Projects/gulp-messenger/spec/MessengerSpec.js",
        "passes": [
          {
            "title": "should interpolate string",
            "fullTitle": "Messenger (Console / Logger) for Browser and Server, including `gulp` pipeline support should interpolate string",
            "timedOut": false,
            "duration": 13,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "msg.Info(user);<br>msg.Success(<span class=\"hljs-string\">'Hello there &lt;%= fname %&gt; &lt;%= lname %&gt;:'</span>, user);<br>msg.Success(<span class=\"hljs-string\">'These are our kids &lt;%= kids %&gt;'</span>, user);<br>done();",
            "isRoot": false,
            "uuid": "27cda7ed-ff39-4c86-91ad-7f73f0c6b021",
            "parentUUID": "1dd8407f-c213-4d24-bbb4-98c99841b294",
            "skipped": false
          },
          {
            "title": "should test all messenger routines",
            "fullTitle": "Messenger (Console / Logger) for Browser and Server, including `gulp` pipeline support should test all messenger routines",
            "timedOut": false,
            "duration": 6,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "msg.Log(<span class=\"hljs-string\">'log'</span>);<br>\t\tmsg.Info(<span class=\"hljs-string\">'info'</span>);<br>\t\tmsg.Error(<span class=\"hljs-string\">'error'</span>);<br>\t\tmsg.Success(<span class=\"hljs-string\">'success'</span>);<br>\t\tmsg.Warning(<span class=\"hljs-string\">'warning'</span>);<br>\t\tmsg.Warn(<span class=\"hljs-string\">\"using `warn` shorthand\"</span>);<br>\t\tmsg.Note(chalk.gray(<span class=\"hljs-string\">'note, color supplied by `Chalk` instance'</span>));<br>\t\tmsg.Time(<span class=\"hljs-string\">'time'</span>);<br>\t\tmsg.Debug(<span class=\"hljs-string\">'debug'</span>);<br>\t\tmsg.Header(<span class=\"hljs-string\">'This should be underline'</span>);<br>\t\tmsg.Log(chalk.red.underline(<span class=\"hljs-string\">'You can perform any text customization with simple log and `chalk` library'</span>));<br>\t\tmsg.Info(<span class=\"hljs-string\">'*'</span>,<span class=\"hljs-string\">'Bordered Output'</span>,<span class=\"hljs-string\">'='</span>);<br>\t\tmsg.Warning(<span class=\"hljs-string\">'Testing interpolation by &lt;%=fname %&gt; &lt;%=lname %&gt;'</span>, {fname: <span class=\"hljs-string\">'Mike'</span>, lname: <span class=\"hljs-string\">'Erickson'</span>});<br>\t\tmsg.Info({fname: <span class=\"hljs-string\">'Mike'</span>, lname: <span class=\"hljs-string\">'Erickson'</span>});<br>\t\tmsg.Line();<br>\t\texpect(<span class=\"hljs-literal\">true</span>).to.be.equal(<span class=\"hljs-literal\">true</span>);<br>\t\tdone();",
            "isRoot": false,
            "uuid": "34fae4b3-8c4f-486e-90ed-f0a3ef9cd3cc",
            "parentUUID": "1dd8407f-c213-4d24-bbb4-98c99841b294",
            "skipped": false
          },
          {
            "title": "should test all logging routines",
            "fullTitle": "Messenger (Console / Logger) for Browser and Server, including `gulp` pipeline support should test all logging routines",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(<span class=\"hljs-literal\">true</span>).to.be.equal(<span class=\"hljs-literal\">true</span>);<br>done();",
            "isRoot": false,
            "uuid": "0954a84e-38e0-449e-9fa6-329a722b3677",
            "parentUUID": "1dd8407f-c213-4d24-bbb4-98c99841b294",
            "skipped": false
          },
          {
            "title": "should test `gulp` methods",
            "fullTitle": "Messenger (Console / Logger) for Browser and Server, including `gulp` pipeline support should test `gulp` methods",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(<span class=\"hljs-literal\">true</span>).to.be.equal(<span class=\"hljs-literal\">true</span>);<br>done();",
            "isRoot": false,
            "uuid": "9c4f7450-7e7f-41c9-9657-ffe87194b739",
            "parentUUID": "1dd8407f-c213-4d24-bbb4-98c99841b294",
            "skipped": false
          },
          {
            "title": "should support all optional params",
            "fullTitle": "Messenger (Console / Logger) for Browser and Server, including `gulp` pipeline support should support all optional params",
            "timedOut": false,
            "duration": 2,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "msg.Info(chalk.magenta(<span class=\"hljs-string\">'Note:  These are not working correctly yet...'</span>));<br>\t\tmsg.Line(<span class=\"hljs-string\">'#'</span>);<br>\t\tmsg.Line(<span class=\"hljs-string\">'-'</span>,<span class=\"hljs-number\">40</span>);<br>\t\tdone();",
            "isRoot": false,
            "uuid": "c1a34ee0-e50d-45af-8ddf-0f8f6beea88e",
            "parentUUID": "1dd8407f-c213-4d24-bbb4-98c99841b294",
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 5,
        "totalPasses": 5,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 21
      },
      {
        "title": "Messenger Line Test",
        "suites": [],
        "tests": [
          {
            "title": "should print lines before and after",
            "fullTitle": "Messenger Line Test should print lines before and after",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "msg.Warn(<span class=\"hljs-string\">'='</span>, <span class=\"hljs-string\">'Testing `Warn` message'</span>, <span class=\"hljs-string\">'*'</span>);<br>msg.Warning(<span class=\"hljs-string\">'='</span>, <span class=\"hljs-string\">'This is from `Warning` routine'</span>, <span class=\"hljs-string\">'*'</span>);<br>expect(<span class=\"hljs-literal\">true</span>).to.be.equal(<span class=\"hljs-literal\">true</span>);<br>done();",
            "isRoot": false,
            "uuid": "5bb249d4-3a73-41b0-a647-31cfd6e9d049",
            "parentUUID": "d9778bcd-7fbe-4196-b2d5-209177311207",
            "skipped": false
          },
          {
            "title": "should print lines before and after",
            "fullTitle": "Messenger Line Test should print lines before and after",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "msg.Error(<span class=\"hljs-string\">'='</span>, <span class=\"hljs-string\">'Now trying `Error containing `=` '</span>);<br>expect(<span class=\"hljs-literal\">true</span>).to.be.equal(<span class=\"hljs-literal\">true</span>);<br>done();",
            "isRoot": false,
            "uuid": "0c7195e1-d4a1-49e1-b9df-4e022a2e4dc0",
            "parentUUID": "d9778bcd-7fbe-4196-b2d5-209177311207",
            "skipped": false
          },
          {
            "title": "should print lines before and after",
            "fullTitle": "Messenger Line Test should print lines before and after",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "msg.Success(<span class=\"hljs-string\">''</span>, <span class=\"hljs-string\">'A `Success` line after this message containing `x` '</span>, <span class=\"hljs-string\">'x'</span>);<br>expect(<span class=\"hljs-literal\">true</span>).to.be.equal(<span class=\"hljs-literal\">true</span>);<br>done();",
            "isRoot": false,
            "uuid": "6e0dd138-297c-4fb3-a404-469a0e53a810",
            "parentUUID": "d9778bcd-7fbe-4196-b2d5-209177311207",
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/spec/MessengerSpec.js",
        "uuid": "d9778bcd-7fbe-4196-b2d5-209177311207",
        "fullFile": "/Users/mikee/Documents/Projects/gulp-messenger/spec/MessengerSpec.js",
        "passes": [
          {
            "title": "should print lines before and after",
            "fullTitle": "Messenger Line Test should print lines before and after",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "msg.Warn(<span class=\"hljs-string\">'='</span>, <span class=\"hljs-string\">'Testing `Warn` message'</span>, <span class=\"hljs-string\">'*'</span>);<br>msg.Warning(<span class=\"hljs-string\">'='</span>, <span class=\"hljs-string\">'This is from `Warning` routine'</span>, <span class=\"hljs-string\">'*'</span>);<br>expect(<span class=\"hljs-literal\">true</span>).to.be.equal(<span class=\"hljs-literal\">true</span>);<br>done();",
            "isRoot": false,
            "uuid": "5bb249d4-3a73-41b0-a647-31cfd6e9d049",
            "parentUUID": "d9778bcd-7fbe-4196-b2d5-209177311207",
            "skipped": false
          },
          {
            "title": "should print lines before and after",
            "fullTitle": "Messenger Line Test should print lines before and after",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "msg.Error(<span class=\"hljs-string\">'='</span>, <span class=\"hljs-string\">'Now trying `Error containing `=` '</span>);<br>expect(<span class=\"hljs-literal\">true</span>).to.be.equal(<span class=\"hljs-literal\">true</span>);<br>done();",
            "isRoot": false,
            "uuid": "0c7195e1-d4a1-49e1-b9df-4e022a2e4dc0",
            "parentUUID": "d9778bcd-7fbe-4196-b2d5-209177311207",
            "skipped": false
          },
          {
            "title": "should print lines before and after",
            "fullTitle": "Messenger Line Test should print lines before and after",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "msg.Success(<span class=\"hljs-string\">''</span>, <span class=\"hljs-string\">'A `Success` line after this message containing `x` '</span>, <span class=\"hljs-string\">'x'</span>);<br>expect(<span class=\"hljs-literal\">true</span>).to.be.equal(<span class=\"hljs-literal\">true</span>);<br>done();",
            "isRoot": false,
            "uuid": "6e0dd138-297c-4fb3-a404-469a0e53a810",
            "parentUUID": "d9778bcd-7fbe-4196-b2d5-209177311207",
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 3,
        "totalPasses": 3,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 2
      },
      {
        "title": "Test Using Console Override",
        "suites": [],
        "tests": [
          {
            "title": "should work with all messenger methods",
            "fullTitle": "Test Using Console Override should work with all messenger methods",
            "timedOut": false,
            "duration": 5,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "msg.log(<span class=\"hljs-string\">'log'</span>);<br>\t\tmsg.info(<span class=\"hljs-string\">'info'</span>);<br>\t\tmsg.error(<span class=\"hljs-string\">'error'</span>);<br>\t\tmsg.success(<span class=\"hljs-string\">'success'</span>);<br>\t\tmsg.warning(<span class=\"hljs-string\">'warning'</span>);<br>\t\tmsg.warn(<span class=\"hljs-string\">\"using `warn` shorthand\"</span>);<br>\t\tmsg.note(chalk.gray(<span class=\"hljs-string\">'note, color supplied by `Chalk` instance'</span>));<br>\t\tmsg.time(<span class=\"hljs-string\">'time'</span>);<br>\t\tmsg.debug(<span class=\"hljs-string\">'debug'</span>);<br>\t\tmsg.header(<span class=\"hljs-string\">'This should be underline'</span>);<br>\t\tmsg.log(chalk.red.underline(<span class=\"hljs-string\">'You can perform any text customization with simple log and `chalk` library'</span>));<br>\t\tmsg.info(<span class=\"hljs-string\">'*'</span>,<span class=\"hljs-string\">'Bordered Output'</span>,<span class=\"hljs-string\">'='</span>);<br>\t\tmsg.warning(<span class=\"hljs-string\">'Testing interpolation by &lt;%=fname %&gt; &lt;%=lname %&gt;'</span>, {fname: <span class=\"hljs-string\">'Mike'</span>, lname: <span class=\"hljs-string\">'Erickson'</span>});<br>\t\tmsg.info({fname: <span class=\"hljs-string\">'Mike'</span>, lname: <span class=\"hljs-string\">'Erickson'</span>});<br>\t\tmsg.line();<br>\t\texpect(<span class=\"hljs-literal\">true</span>).to.be.equal(<span class=\"hljs-literal\">true</span>);<br>\t\tdone();",
            "isRoot": false,
            "uuid": "7b01a3df-f451-432e-aadd-7e8234d39270",
            "parentUUID": "38f3ac12-d170-41cb-ac5e-653670ee19d8",
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/spec/MessengerSpec.js",
        "uuid": "38f3ac12-d170-41cb-ac5e-653670ee19d8",
        "fullFile": "/Users/mikee/Documents/Projects/gulp-messenger/spec/MessengerSpec.js",
        "passes": [
          {
            "title": "should work with all messenger methods",
            "fullTitle": "Test Using Console Override should work with all messenger methods",
            "timedOut": false,
            "duration": 5,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "msg.log(<span class=\"hljs-string\">'log'</span>);<br>\t\tmsg.info(<span class=\"hljs-string\">'info'</span>);<br>\t\tmsg.error(<span class=\"hljs-string\">'error'</span>);<br>\t\tmsg.success(<span class=\"hljs-string\">'success'</span>);<br>\t\tmsg.warning(<span class=\"hljs-string\">'warning'</span>);<br>\t\tmsg.warn(<span class=\"hljs-string\">\"using `warn` shorthand\"</span>);<br>\t\tmsg.note(chalk.gray(<span class=\"hljs-string\">'note, color supplied by `Chalk` instance'</span>));<br>\t\tmsg.time(<span class=\"hljs-string\">'time'</span>);<br>\t\tmsg.debug(<span class=\"hljs-string\">'debug'</span>);<br>\t\tmsg.header(<span class=\"hljs-string\">'This should be underline'</span>);<br>\t\tmsg.log(chalk.red.underline(<span class=\"hljs-string\">'You can perform any text customization with simple log and `chalk` library'</span>));<br>\t\tmsg.info(<span class=\"hljs-string\">'*'</span>,<span class=\"hljs-string\">'Bordered Output'</span>,<span class=\"hljs-string\">'='</span>);<br>\t\tmsg.warning(<span class=\"hljs-string\">'Testing interpolation by &lt;%=fname %&gt; &lt;%=lname %&gt;'</span>, {fname: <span class=\"hljs-string\">'Mike'</span>, lname: <span class=\"hljs-string\">'Erickson'</span>});<br>\t\tmsg.info({fname: <span class=\"hljs-string\">'Mike'</span>, lname: <span class=\"hljs-string\">'Erickson'</span>});<br>\t\tmsg.line();<br>\t\texpect(<span class=\"hljs-literal\">true</span>).to.be.equal(<span class=\"hljs-literal\">true</span>);<br>\t\tdone();",
            "isRoot": false,
            "uuid": "7b01a3df-f451-432e-aadd-7e8234d39270",
            "parentUUID": "38f3ac12-d170-41cb-ac5e-653670ee19d8",
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 1,
        "totalPasses": 1,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 5
      },
      {
        "title": "Array",
        "suites": [
          {
            "title": "#indexOf()",
            "suites": [],
            "tests": [
              {
                "title": "should return -1 when the value is not present",
                "fullTitle": "Array #indexOf() should return -1 when the value is not present",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "assert.equal(-1, [1,2,3].indexOf(5));<br>assert.equal(-1, [1,2,3].indexOf(0));",
                "isRoot": false,
                "uuid": "b4cbaa8c-2339-4977-8492-a1c01f5e31c5",
                "parentUUID": "a08e7c19-95f5-472e-91da-f2ca01c09410",
                "skipped": false
              },
              {
                "title": "should return index when value is present",
                "fullTitle": "Array #indexOf() should return index when value is present",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "assert.equal(1, [1,2,3].indexOf(2));<br>assert.equal(2, [1,2,3].indexOf(3));",
                "isRoot": false,
                "uuid": "395d4684-7981-41bf-b75f-c27b9846e7e7",
                "parentUUID": "a08e7c19-95f5-472e-91da-f2ca01c09410",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/spec/TestSpec.js",
            "uuid": "a08e7c19-95f5-472e-91da-f2ca01c09410",
            "fullFile": "/Users/mikee/Documents/Projects/gulp-messenger/spec/TestSpec.js",
            "passes": [
              {
                "title": "should return -1 when the value is not present",
                "fullTitle": "Array #indexOf() should return -1 when the value is not present",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "assert.equal(-1, [1,2,3].indexOf(5));<br>assert.equal(-1, [1,2,3].indexOf(0));",
                "isRoot": false,
                "uuid": "b4cbaa8c-2339-4977-8492-a1c01f5e31c5",
                "parentUUID": "a08e7c19-95f5-472e-91da-f2ca01c09410",
                "skipped": false
              },
              {
                "title": "should return index when value is present",
                "fullTitle": "Array #indexOf() should return index when value is present",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "assert.equal(1, [1,2,3].indexOf(2));<br>assert.equal(2, [1,2,3].indexOf(3));",
                "isRoot": false,
                "uuid": "395d4684-7981-41bf-b75f-c27b9846e7e7",
                "parentUUID": "a08e7c19-95f5-472e-91da-f2ca01c09410",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/spec/TestSpec.js",
        "uuid": "825db449-76f1-47f8-a59e-c3266235330a",
        "fullFile": "/Users/mikee/Documents/Projects/gulp-messenger/spec/TestSpec.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "Test Using Console Override",
        "suites": [],
        "tests": [
          {
            "title": "should work with all messenger methods",
            "fullTitle": "Test Using Console Override should work with all messenger methods",
            "timedOut": false,
            "duration": 5,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'log'</span>);<br>\t\t<span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'test my conbsole'</span>);<br>\t\t<span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'test my conbsole'</span>);<br>\t\t<span class=\"hljs-built_in\">console</span>.info(<span class=\"hljs-string\">'info'</span>);<br>\t\t<span class=\"hljs-built_in\">console</span>.error(<span class=\"hljs-string\">'error'</span>);<br>\t\t<span class=\"hljs-built_in\">console</span>.success(<span class=\"hljs-string\">'success'</span>);<br>\t\t<span class=\"hljs-built_in\">console</span>.warning(<span class=\"hljs-string\">'warning'</span>);<br>\t\t<span class=\"hljs-built_in\">console</span>.warn(<span class=\"hljs-string\">\"using `warn` shorthand\"</span>);<br>\t\t<span class=\"hljs-built_in\">console</span>.note(chalk.gray(<span class=\"hljs-string\">'note, color supplied by `Chalk` instance'</span>));<br>\t\t<span class=\"hljs-built_in\">console</span>.time(<span class=\"hljs-string\">'time'</span>);<br>\t\t<span class=\"hljs-built_in\">console</span>.debug(<span class=\"hljs-string\">'debug'</span>);<br>\t\t<span class=\"hljs-built_in\">console</span>.header(<span class=\"hljs-string\">'This should be underline'</span>);<br>\t\t<span class=\"hljs-built_in\">console</span>.log(chalk.red.underline(<span class=\"hljs-string\">'You can perform any text customization with simple log and `chalk` library'</span>));<br>\t\t<span class=\"hljs-built_in\">console</span>.info(<span class=\"hljs-string\">'*'</span>,<span class=\"hljs-string\">'Bordered Output'</span>,<span class=\"hljs-string\">'='</span>);<br>\t\t<span class=\"hljs-built_in\">console</span>.warning(<span class=\"hljs-string\">'Testing interpolation by &lt;%=fname %&gt; &lt;%=lname %&gt;'</span>, {fname: <span class=\"hljs-string\">'Mike'</span>, lname: <span class=\"hljs-string\">'Erickson'</span>});<br>\t\t<span class=\"hljs-built_in\">console</span>.info({fname: <span class=\"hljs-string\">'Mike'</span>, lname: <span class=\"hljs-string\">'Erickson'</span>});<br>\t\t<span class=\"hljs-built_in\">console</span>.line();<br>\t\texpect(<span class=\"hljs-literal\">true</span>).to.be.equal(<span class=\"hljs-literal\">true</span>);<br>\t\tdone();",
            "isRoot": false,
            "uuid": "3802b8d1-8373-4fae-bb11-38cd1cd1c47a",
            "parentUUID": "685e220d-c556-4a6a-8e9c-230ab01205aa",
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/spec/consoleSpec.js",
        "uuid": "685e220d-c556-4a6a-8e9c-230ab01205aa",
        "fullFile": "/Users/mikee/Documents/Projects/gulp-messenger/spec/consoleSpec.js",
        "passes": [
          {
            "title": "should work with all messenger methods",
            "fullTitle": "Test Using Console Override should work with all messenger methods",
            "timedOut": false,
            "duration": 5,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'log'</span>);<br>\t\t<span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'test my conbsole'</span>);<br>\t\t<span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'test my conbsole'</span>);<br>\t\t<span class=\"hljs-built_in\">console</span>.info(<span class=\"hljs-string\">'info'</span>);<br>\t\t<span class=\"hljs-built_in\">console</span>.error(<span class=\"hljs-string\">'error'</span>);<br>\t\t<span class=\"hljs-built_in\">console</span>.success(<span class=\"hljs-string\">'success'</span>);<br>\t\t<span class=\"hljs-built_in\">console</span>.warning(<span class=\"hljs-string\">'warning'</span>);<br>\t\t<span class=\"hljs-built_in\">console</span>.warn(<span class=\"hljs-string\">\"using `warn` shorthand\"</span>);<br>\t\t<span class=\"hljs-built_in\">console</span>.note(chalk.gray(<span class=\"hljs-string\">'note, color supplied by `Chalk` instance'</span>));<br>\t\t<span class=\"hljs-built_in\">console</span>.time(<span class=\"hljs-string\">'time'</span>);<br>\t\t<span class=\"hljs-built_in\">console</span>.debug(<span class=\"hljs-string\">'debug'</span>);<br>\t\t<span class=\"hljs-built_in\">console</span>.header(<span class=\"hljs-string\">'This should be underline'</span>);<br>\t\t<span class=\"hljs-built_in\">console</span>.log(chalk.red.underline(<span class=\"hljs-string\">'You can perform any text customization with simple log and `chalk` library'</span>));<br>\t\t<span class=\"hljs-built_in\">console</span>.info(<span class=\"hljs-string\">'*'</span>,<span class=\"hljs-string\">'Bordered Output'</span>,<span class=\"hljs-string\">'='</span>);<br>\t\t<span class=\"hljs-built_in\">console</span>.warning(<span class=\"hljs-string\">'Testing interpolation by &lt;%=fname %&gt; &lt;%=lname %&gt;'</span>, {fname: <span class=\"hljs-string\">'Mike'</span>, lname: <span class=\"hljs-string\">'Erickson'</span>});<br>\t\t<span class=\"hljs-built_in\">console</span>.info({fname: <span class=\"hljs-string\">'Mike'</span>, lname: <span class=\"hljs-string\">'Erickson'</span>});<br>\t\t<span class=\"hljs-built_in\">console</span>.line();<br>\t\texpect(<span class=\"hljs-literal\">true</span>).to.be.equal(<span class=\"hljs-literal\">true</span>);<br>\t\tdone();",
            "isRoot": false,
            "uuid": "3802b8d1-8373-4fae-bb11-38cd1cd1c47a",
            "parentUUID": "685e220d-c556-4a6a-8e9c-230ab01205aa",
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 1,
        "totalPasses": 1,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 5
      }
    ],
    "tests": [],
    "pending": [],
    "root": true,
    "_timeout": 2000,
    "uuid": "f5645bda-2b9a-4b12-96a4-5d6e7d385ba1",
    "fullFile": "",
    "file": "",
    "passes": [],
    "failures": [],
    "skipped": [],
    "hasTests": false,
    "hasSuites": true,
    "totalTests": 0,
    "totalPasses": 0,
    "totalFailures": 0,
    "totalPending": 0,
    "totalSkipped": 0,
    "hasPasses": false,
    "hasFailures": false,
    "hasPending": false,
    "hasSkipped": false,
    "duration": 0,
    "rootEmpty": true
  },
  "allTests": [
    {
      "title": "should interpolate string",
      "fullTitle": "Messenger (Console / Logger) for Browser and Server, including `gulp` pipeline support should interpolate string",
      "timedOut": false,
      "duration": 13,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "msg.Info(user);<br>msg.Success(<span class=\"hljs-string\">'Hello there &lt;%= fname %&gt; &lt;%= lname %&gt;:'</span>, user);<br>msg.Success(<span class=\"hljs-string\">'These are our kids &lt;%= kids %&gt;'</span>, user);<br>done();",
      "isRoot": false,
      "uuid": "0eaa0812-90c7-414d-bd39-188c5889c1d2",
      "parentUUID": "1dd8407f-c213-4d24-bbb4-98c99841b294",
      "skipped": false
    },
    {
      "title": "should test all messenger routines",
      "fullTitle": "Messenger (Console / Logger) for Browser and Server, including `gulp` pipeline support should test all messenger routines",
      "timedOut": false,
      "duration": 6,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "msg.Log(<span class=\"hljs-string\">'log'</span>);<br>\t\tmsg.Info(<span class=\"hljs-string\">'info'</span>);<br>\t\tmsg.Error(<span class=\"hljs-string\">'error'</span>);<br>\t\tmsg.Success(<span class=\"hljs-string\">'success'</span>);<br>\t\tmsg.Warning(<span class=\"hljs-string\">'warning'</span>);<br>\t\tmsg.Warn(<span class=\"hljs-string\">\"using `warn` shorthand\"</span>);<br>\t\tmsg.Note(chalk.gray(<span class=\"hljs-string\">'note, color supplied by `Chalk` instance'</span>));<br>\t\tmsg.Time(<span class=\"hljs-string\">'time'</span>);<br>\t\tmsg.Debug(<span class=\"hljs-string\">'debug'</span>);<br>\t\tmsg.Header(<span class=\"hljs-string\">'This should be underline'</span>);<br>\t\tmsg.Log(chalk.red.underline(<span class=\"hljs-string\">'You can perform any text customization with simple log and `chalk` library'</span>));<br>\t\tmsg.Info(<span class=\"hljs-string\">'*'</span>,<span class=\"hljs-string\">'Bordered Output'</span>,<span class=\"hljs-string\">'='</span>);<br>\t\tmsg.Warning(<span class=\"hljs-string\">'Testing interpolation by &lt;%=fname %&gt; &lt;%=lname %&gt;'</span>, {fname: <span class=\"hljs-string\">'Mike'</span>, lname: <span class=\"hljs-string\">'Erickson'</span>});<br>\t\tmsg.Info({fname: <span class=\"hljs-string\">'Mike'</span>, lname: <span class=\"hljs-string\">'Erickson'</span>});<br>\t\tmsg.Line();<br>\t\texpect(<span class=\"hljs-literal\">true</span>).to.be.equal(<span class=\"hljs-literal\">true</span>);<br>\t\tdone();",
      "isRoot": false,
      "uuid": "cef53089-f7fe-4385-b70d-534c233acc15",
      "parentUUID": "1dd8407f-c213-4d24-bbb4-98c99841b294",
      "skipped": false
    },
    {
      "title": "should test all logging routines",
      "fullTitle": "Messenger (Console / Logger) for Browser and Server, including `gulp` pipeline support should test all logging routines",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect(<span class=\"hljs-literal\">true</span>).to.be.equal(<span class=\"hljs-literal\">true</span>);<br>done();",
      "isRoot": false,
      "uuid": "3c9094eb-6709-4755-9c1c-76564a817494",
      "parentUUID": "1dd8407f-c213-4d24-bbb4-98c99841b294",
      "skipped": false
    },
    {
      "title": "should test `gulp` methods",
      "fullTitle": "Messenger (Console / Logger) for Browser and Server, including `gulp` pipeline support should test `gulp` methods",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect(<span class=\"hljs-literal\">true</span>).to.be.equal(<span class=\"hljs-literal\">true</span>);<br>done();",
      "isRoot": false,
      "uuid": "7db70f84-33db-435c-acff-054df2fe91ab",
      "parentUUID": "1dd8407f-c213-4d24-bbb4-98c99841b294",
      "skipped": false
    },
    {
      "title": "should support all optional params",
      "fullTitle": "Messenger (Console / Logger) for Browser and Server, including `gulp` pipeline support should support all optional params",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "msg.Info(chalk.magenta(<span class=\"hljs-string\">'Note:  These are not working correctly yet...'</span>));<br>\t\tmsg.Line(<span class=\"hljs-string\">'#'</span>);<br>\t\tmsg.Line(<span class=\"hljs-string\">'-'</span>,<span class=\"hljs-number\">40</span>);<br>\t\tdone();",
      "isRoot": false,
      "uuid": "57416a4e-804c-404c-9c85-dde1e39dedf4",
      "parentUUID": "1dd8407f-c213-4d24-bbb4-98c99841b294",
      "skipped": false
    },
    {
      "title": "should print lines before and after",
      "fullTitle": "Messenger Line Test should print lines before and after",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "msg.Warn(<span class=\"hljs-string\">'='</span>, <span class=\"hljs-string\">'Testing `Warn` message'</span>, <span class=\"hljs-string\">'*'</span>);<br>msg.Warning(<span class=\"hljs-string\">'='</span>, <span class=\"hljs-string\">'This is from `Warning` routine'</span>, <span class=\"hljs-string\">'*'</span>);<br>expect(<span class=\"hljs-literal\">true</span>).to.be.equal(<span class=\"hljs-literal\">true</span>);<br>done();",
      "isRoot": false,
      "uuid": "55bdc6c7-edd0-40e0-826c-0366ade2aeba",
      "parentUUID": "d9778bcd-7fbe-4196-b2d5-209177311207",
      "skipped": false
    },
    {
      "title": "should print lines before and after",
      "fullTitle": "Messenger Line Test should print lines before and after",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "msg.Error(<span class=\"hljs-string\">'='</span>, <span class=\"hljs-string\">'Now trying `Error containing `=` '</span>);<br>expect(<span class=\"hljs-literal\">true</span>).to.be.equal(<span class=\"hljs-literal\">true</span>);<br>done();",
      "isRoot": false,
      "uuid": "e2855f1a-9089-4c8b-96b7-e60a1ffaeb11",
      "parentUUID": "d9778bcd-7fbe-4196-b2d5-209177311207",
      "skipped": false
    },
    {
      "title": "should print lines before and after",
      "fullTitle": "Messenger Line Test should print lines before and after",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "msg.Success(<span class=\"hljs-string\">''</span>, <span class=\"hljs-string\">'A `Success` line after this message containing `x` '</span>, <span class=\"hljs-string\">'x'</span>);<br>expect(<span class=\"hljs-literal\">true</span>).to.be.equal(<span class=\"hljs-literal\">true</span>);<br>done();",
      "isRoot": false,
      "uuid": "466e15fa-ce27-4399-b371-cdffdf6899f2",
      "parentUUID": "d9778bcd-7fbe-4196-b2d5-209177311207",
      "skipped": false
    },
    {
      "title": "should work with all messenger methods",
      "fullTitle": "Test Using Console Override should work with all messenger methods",
      "timedOut": false,
      "duration": 5,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "msg.log(<span class=\"hljs-string\">'log'</span>);<br>\t\tmsg.info(<span class=\"hljs-string\">'info'</span>);<br>\t\tmsg.error(<span class=\"hljs-string\">'error'</span>);<br>\t\tmsg.success(<span class=\"hljs-string\">'success'</span>);<br>\t\tmsg.warning(<span class=\"hljs-string\">'warning'</span>);<br>\t\tmsg.warn(<span class=\"hljs-string\">\"using `warn` shorthand\"</span>);<br>\t\tmsg.note(chalk.gray(<span class=\"hljs-string\">'note, color supplied by `Chalk` instance'</span>));<br>\t\tmsg.time(<span class=\"hljs-string\">'time'</span>);<br>\t\tmsg.debug(<span class=\"hljs-string\">'debug'</span>);<br>\t\tmsg.header(<span class=\"hljs-string\">'This should be underline'</span>);<br>\t\tmsg.log(chalk.red.underline(<span class=\"hljs-string\">'You can perform any text customization with simple log and `chalk` library'</span>));<br>\t\tmsg.info(<span class=\"hljs-string\">'*'</span>,<span class=\"hljs-string\">'Bordered Output'</span>,<span class=\"hljs-string\">'='</span>);<br>\t\tmsg.warning(<span class=\"hljs-string\">'Testing interpolation by &lt;%=fname %&gt; &lt;%=lname %&gt;'</span>, {fname: <span class=\"hljs-string\">'Mike'</span>, lname: <span class=\"hljs-string\">'Erickson'</span>});<br>\t\tmsg.info({fname: <span class=\"hljs-string\">'Mike'</span>, lname: <span class=\"hljs-string\">'Erickson'</span>});<br>\t\tmsg.line();<br>\t\texpect(<span class=\"hljs-literal\">true</span>).to.be.equal(<span class=\"hljs-literal\">true</span>);<br>\t\tdone();",
      "isRoot": false,
      "uuid": "9ab34ba2-5285-4f8f-b233-ef8a77b97215",
      "parentUUID": "38f3ac12-d170-41cb-ac5e-653670ee19d8",
      "skipped": false
    },
    {
      "title": "should return -1 when the value is not present",
      "fullTitle": "#indexOf() should return -1 when the value is not present",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "assert.equal(-1, [1,2,3].indexOf(5));<br>assert.equal(-1, [1,2,3].indexOf(0));",
      "isRoot": false,
      "uuid": "1c1fefe4-1beb-490d-9faf-be5fd6fcc4fc",
      "parentUUID": "a08e7c19-95f5-472e-91da-f2ca01c09410",
      "skipped": false
    },
    {
      "title": "should return index when value is present",
      "fullTitle": "#indexOf() should return index when value is present",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "assert.equal(1, [1,2,3].indexOf(2));<br>assert.equal(2, [1,2,3].indexOf(3));",
      "isRoot": false,
      "uuid": "d776f53c-cf3c-4f52-b1a3-ee2926f021fc",
      "parentUUID": "a08e7c19-95f5-472e-91da-f2ca01c09410",
      "skipped": false
    },
    {
      "title": "should work with all messenger methods",
      "fullTitle": "Test Using Console Override should work with all messenger methods",
      "timedOut": false,
      "duration": 5,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'log'</span>);<br>\t\t<span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'test my conbsole'</span>);<br>\t\t<span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'test my conbsole'</span>);<br>\t\t<span class=\"hljs-built_in\">console</span>.info(<span class=\"hljs-string\">'info'</span>);<br>\t\t<span class=\"hljs-built_in\">console</span>.error(<span class=\"hljs-string\">'error'</span>);<br>\t\t<span class=\"hljs-built_in\">console</span>.success(<span class=\"hljs-string\">'success'</span>);<br>\t\t<span class=\"hljs-built_in\">console</span>.warning(<span class=\"hljs-string\">'warning'</span>);<br>\t\t<span class=\"hljs-built_in\">console</span>.warn(<span class=\"hljs-string\">\"using `warn` shorthand\"</span>);<br>\t\t<span class=\"hljs-built_in\">console</span>.note(chalk.gray(<span class=\"hljs-string\">'note, color supplied by `Chalk` instance'</span>));<br>\t\t<span class=\"hljs-built_in\">console</span>.time(<span class=\"hljs-string\">'time'</span>);<br>\t\t<span class=\"hljs-built_in\">console</span>.debug(<span class=\"hljs-string\">'debug'</span>);<br>\t\t<span class=\"hljs-built_in\">console</span>.header(<span class=\"hljs-string\">'This should be underline'</span>);<br>\t\t<span class=\"hljs-built_in\">console</span>.log(chalk.red.underline(<span class=\"hljs-string\">'You can perform any text customization with simple log and `chalk` library'</span>));<br>\t\t<span class=\"hljs-built_in\">console</span>.info(<span class=\"hljs-string\">'*'</span>,<span class=\"hljs-string\">'Bordered Output'</span>,<span class=\"hljs-string\">'='</span>);<br>\t\t<span class=\"hljs-built_in\">console</span>.warning(<span class=\"hljs-string\">'Testing interpolation by &lt;%=fname %&gt; &lt;%=lname %&gt;'</span>, {fname: <span class=\"hljs-string\">'Mike'</span>, lname: <span class=\"hljs-string\">'Erickson'</span>});<br>\t\t<span class=\"hljs-built_in\">console</span>.info({fname: <span class=\"hljs-string\">'Mike'</span>, lname: <span class=\"hljs-string\">'Erickson'</span>});<br>\t\t<span class=\"hljs-built_in\">console</span>.line();<br>\t\texpect(<span class=\"hljs-literal\">true</span>).to.be.equal(<span class=\"hljs-literal\">true</span>);<br>\t\tdone();",
      "isRoot": false,
      "uuid": "103c31bb-082a-4dca-aadf-ee5cef3fbe70",
      "parentUUID": "685e220d-c556-4a6a-8e9c-230ab01205aa",
      "skipped": false
    }
  ],
  "allHooks": [
    {
      "title": "\"before each\" hook",
      "async": 0,
      "sync": true,
      "_timeout": 2000,
      "_slow": 75,
      "_enableTimeouts": true,
      "timedOut": false,
      "_trace": {},
      "type": "hook",
      "parent": {
        "title": "Messenger (Console / Logger) for Browser and Server, including `gulp` pipeline support",
        "suites": [],
        "tests": [
          {
            "title": "should interpolate string",
            "fullTitle": "Messenger (Console / Logger) for Browser and Server, including `gulp` pipeline support should interpolate string",
            "timedOut": false,
            "duration": 13,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "msg.Info(user);<br>msg.Success(<span class=\"hljs-string\">'Hello there &lt;%= fname %&gt; &lt;%= lname %&gt;:'</span>, user);<br>msg.Success(<span class=\"hljs-string\">'These are our kids &lt;%= kids %&gt;'</span>, user);<br>done();",
            "isRoot": false,
            "uuid": "27cda7ed-ff39-4c86-91ad-7f73f0c6b021",
            "parentUUID": "1dd8407f-c213-4d24-bbb4-98c99841b294",
            "skipped": false
          },
          {
            "title": "should test all messenger routines",
            "fullTitle": "Messenger (Console / Logger) for Browser and Server, including `gulp` pipeline support should test all messenger routines",
            "timedOut": false,
            "duration": 6,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "msg.Log(<span class=\"hljs-string\">'log'</span>);<br>\t\tmsg.Info(<span class=\"hljs-string\">'info'</span>);<br>\t\tmsg.Error(<span class=\"hljs-string\">'error'</span>);<br>\t\tmsg.Success(<span class=\"hljs-string\">'success'</span>);<br>\t\tmsg.Warning(<span class=\"hljs-string\">'warning'</span>);<br>\t\tmsg.Warn(<span class=\"hljs-string\">\"using `warn` shorthand\"</span>);<br>\t\tmsg.Note(chalk.gray(<span class=\"hljs-string\">'note, color supplied by `Chalk` instance'</span>));<br>\t\tmsg.Time(<span class=\"hljs-string\">'time'</span>);<br>\t\tmsg.Debug(<span class=\"hljs-string\">'debug'</span>);<br>\t\tmsg.Header(<span class=\"hljs-string\">'This should be underline'</span>);<br>\t\tmsg.Log(chalk.red.underline(<span class=\"hljs-string\">'You can perform any text customization with simple log and `chalk` library'</span>));<br>\t\tmsg.Info(<span class=\"hljs-string\">'*'</span>,<span class=\"hljs-string\">'Bordered Output'</span>,<span class=\"hljs-string\">'='</span>);<br>\t\tmsg.Warning(<span class=\"hljs-string\">'Testing interpolation by &lt;%=fname %&gt; &lt;%=lname %&gt;'</span>, {fname: <span class=\"hljs-string\">'Mike'</span>, lname: <span class=\"hljs-string\">'Erickson'</span>});<br>\t\tmsg.Info({fname: <span class=\"hljs-string\">'Mike'</span>, lname: <span class=\"hljs-string\">'Erickson'</span>});<br>\t\tmsg.Line();<br>\t\texpect(<span class=\"hljs-literal\">true</span>).to.be.equal(<span class=\"hljs-literal\">true</span>);<br>\t\tdone();",
            "isRoot": false,
            "uuid": "34fae4b3-8c4f-486e-90ed-f0a3ef9cd3cc",
            "parentUUID": "1dd8407f-c213-4d24-bbb4-98c99841b294",
            "skipped": false
          },
          {
            "title": "should test all logging routines",
            "fullTitle": "Messenger (Console / Logger) for Browser and Server, including `gulp` pipeline support should test all logging routines",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(<span class=\"hljs-literal\">true</span>).to.be.equal(<span class=\"hljs-literal\">true</span>);<br>done();",
            "isRoot": false,
            "uuid": "0954a84e-38e0-449e-9fa6-329a722b3677",
            "parentUUID": "1dd8407f-c213-4d24-bbb4-98c99841b294",
            "skipped": false
          },
          {
            "title": "should test `gulp` methods",
            "fullTitle": "Messenger (Console / Logger) for Browser and Server, including `gulp` pipeline support should test `gulp` methods",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(<span class=\"hljs-literal\">true</span>).to.be.equal(<span class=\"hljs-literal\">true</span>);<br>done();",
            "isRoot": false,
            "uuid": "9c4f7450-7e7f-41c9-9657-ffe87194b739",
            "parentUUID": "1dd8407f-c213-4d24-bbb4-98c99841b294",
            "skipped": false
          },
          {
            "title": "should support all optional params",
            "fullTitle": "Messenger (Console / Logger) for Browser and Server, including `gulp` pipeline support should support all optional params",
            "timedOut": false,
            "duration": 2,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "msg.Info(chalk.magenta(<span class=\"hljs-string\">'Note:  These are not working correctly yet...'</span>));<br>\t\tmsg.Line(<span class=\"hljs-string\">'#'</span>);<br>\t\tmsg.Line(<span class=\"hljs-string\">'-'</span>,<span class=\"hljs-number\">40</span>);<br>\t\tdone();",
            "isRoot": false,
            "uuid": "c1a34ee0-e50d-45af-8ddf-0f8f6beea88e",
            "parentUUID": "1dd8407f-c213-4d24-bbb4-98c99841b294",
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/spec/MessengerSpec.js",
        "uuid": "1dd8407f-c213-4d24-bbb4-98c99841b294",
        "fullFile": "/Users/mikee/Documents/Projects/gulp-messenger/spec/MessengerSpec.js",
        "passes": [
          {
            "title": "should interpolate string",
            "fullTitle": "Messenger (Console / Logger) for Browser and Server, including `gulp` pipeline support should interpolate string",
            "timedOut": false,
            "duration": 13,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "msg.Info(user);<br>msg.Success(<span class=\"hljs-string\">'Hello there &lt;%= fname %&gt; &lt;%= lname %&gt;:'</span>, user);<br>msg.Success(<span class=\"hljs-string\">'These are our kids &lt;%= kids %&gt;'</span>, user);<br>done();",
            "isRoot": false,
            "uuid": "27cda7ed-ff39-4c86-91ad-7f73f0c6b021",
            "parentUUID": "1dd8407f-c213-4d24-bbb4-98c99841b294",
            "skipped": false
          },
          {
            "title": "should test all messenger routines",
            "fullTitle": "Messenger (Console / Logger) for Browser and Server, including `gulp` pipeline support should test all messenger routines",
            "timedOut": false,
            "duration": 6,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "msg.Log(<span class=\"hljs-string\">'log'</span>);<br>\t\tmsg.Info(<span class=\"hljs-string\">'info'</span>);<br>\t\tmsg.Error(<span class=\"hljs-string\">'error'</span>);<br>\t\tmsg.Success(<span class=\"hljs-string\">'success'</span>);<br>\t\tmsg.Warning(<span class=\"hljs-string\">'warning'</span>);<br>\t\tmsg.Warn(<span class=\"hljs-string\">\"using `warn` shorthand\"</span>);<br>\t\tmsg.Note(chalk.gray(<span class=\"hljs-string\">'note, color supplied by `Chalk` instance'</span>));<br>\t\tmsg.Time(<span class=\"hljs-string\">'time'</span>);<br>\t\tmsg.Debug(<span class=\"hljs-string\">'debug'</span>);<br>\t\tmsg.Header(<span class=\"hljs-string\">'This should be underline'</span>);<br>\t\tmsg.Log(chalk.red.underline(<span class=\"hljs-string\">'You can perform any text customization with simple log and `chalk` library'</span>));<br>\t\tmsg.Info(<span class=\"hljs-string\">'*'</span>,<span class=\"hljs-string\">'Bordered Output'</span>,<span class=\"hljs-string\">'='</span>);<br>\t\tmsg.Warning(<span class=\"hljs-string\">'Testing interpolation by &lt;%=fname %&gt; &lt;%=lname %&gt;'</span>, {fname: <span class=\"hljs-string\">'Mike'</span>, lname: <span class=\"hljs-string\">'Erickson'</span>});<br>\t\tmsg.Info({fname: <span class=\"hljs-string\">'Mike'</span>, lname: <span class=\"hljs-string\">'Erickson'</span>});<br>\t\tmsg.Line();<br>\t\texpect(<span class=\"hljs-literal\">true</span>).to.be.equal(<span class=\"hljs-literal\">true</span>);<br>\t\tdone();",
            "isRoot": false,
            "uuid": "34fae4b3-8c4f-486e-90ed-f0a3ef9cd3cc",
            "parentUUID": "1dd8407f-c213-4d24-bbb4-98c99841b294",
            "skipped": false
          },
          {
            "title": "should test all logging routines",
            "fullTitle": "Messenger (Console / Logger) for Browser and Server, including `gulp` pipeline support should test all logging routines",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(<span class=\"hljs-literal\">true</span>).to.be.equal(<span class=\"hljs-literal\">true</span>);<br>done();",
            "isRoot": false,
            "uuid": "0954a84e-38e0-449e-9fa6-329a722b3677",
            "parentUUID": "1dd8407f-c213-4d24-bbb4-98c99841b294",
            "skipped": false
          },
          {
            "title": "should test `gulp` methods",
            "fullTitle": "Messenger (Console / Logger) for Browser and Server, including `gulp` pipeline support should test `gulp` methods",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(<span class=\"hljs-literal\">true</span>).to.be.equal(<span class=\"hljs-literal\">true</span>);<br>done();",
            "isRoot": false,
            "uuid": "9c4f7450-7e7f-41c9-9657-ffe87194b739",
            "parentUUID": "1dd8407f-c213-4d24-bbb4-98c99841b294",
            "skipped": false
          },
          {
            "title": "should support all optional params",
            "fullTitle": "Messenger (Console / Logger) for Browser and Server, including `gulp` pipeline support should support all optional params",
            "timedOut": false,
            "duration": 2,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "msg.Info(chalk.magenta(<span class=\"hljs-string\">'Note:  These are not working correctly yet...'</span>));<br>\t\tmsg.Line(<span class=\"hljs-string\">'#'</span>);<br>\t\tmsg.Line(<span class=\"hljs-string\">'-'</span>,<span class=\"hljs-number\">40</span>);<br>\t\tdone();",
            "isRoot": false,
            "uuid": "c1a34ee0-e50d-45af-8ddf-0f8f6beea88e",
            "parentUUID": "1dd8407f-c213-4d24-bbb4-98c99841b294",
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 5,
        "totalPasses": 5,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 21
      },
      "ctx": {
        "_runnable": {
          "title": "should support all optional params",
          "async": 1,
          "sync": false,
          "_timeout": 2000,
          "_slow": 75,
          "_enableTimeouts": true,
          "timedOut": false,
          "_trace": {},
          "pending": false,
          "type": "test",
          "file": "/Users/mikee/Documents/Projects/gulp-messenger/spec/MessengerSpec.js",
          "parent": {
            "title": "Messenger (Console / Logger) for Browser and Server, including `gulp` pipeline support",
            "suites": [],
            "tests": [
              {
                "title": "should interpolate string",
                "fullTitle": "Messenger (Console / Logger) for Browser and Server, including `gulp` pipeline support should interpolate string",
                "timedOut": false,
                "duration": 13,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "msg.Info(user);<br>msg.Success(<span class=\"hljs-string\">'Hello there &lt;%= fname %&gt; &lt;%= lname %&gt;:'</span>, user);<br>msg.Success(<span class=\"hljs-string\">'These are our kids &lt;%= kids %&gt;'</span>, user);<br>done();",
                "isRoot": false,
                "uuid": "27cda7ed-ff39-4c86-91ad-7f73f0c6b021",
                "parentUUID": "1dd8407f-c213-4d24-bbb4-98c99841b294",
                "skipped": false
              },
              {
                "title": "should test all messenger routines",
                "fullTitle": "Messenger (Console / Logger) for Browser and Server, including `gulp` pipeline support should test all messenger routines",
                "timedOut": false,
                "duration": 6,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "msg.Log(<span class=\"hljs-string\">'log'</span>);<br>\t\tmsg.Info(<span class=\"hljs-string\">'info'</span>);<br>\t\tmsg.Error(<span class=\"hljs-string\">'error'</span>);<br>\t\tmsg.Success(<span class=\"hljs-string\">'success'</span>);<br>\t\tmsg.Warning(<span class=\"hljs-string\">'warning'</span>);<br>\t\tmsg.Warn(<span class=\"hljs-string\">\"using `warn` shorthand\"</span>);<br>\t\tmsg.Note(chalk.gray(<span class=\"hljs-string\">'note, color supplied by `Chalk` instance'</span>));<br>\t\tmsg.Time(<span class=\"hljs-string\">'time'</span>);<br>\t\tmsg.Debug(<span class=\"hljs-string\">'debug'</span>);<br>\t\tmsg.Header(<span class=\"hljs-string\">'This should be underline'</span>);<br>\t\tmsg.Log(chalk.red.underline(<span class=\"hljs-string\">'You can perform any text customization with simple log and `chalk` library'</span>));<br>\t\tmsg.Info(<span class=\"hljs-string\">'*'</span>,<span class=\"hljs-string\">'Bordered Output'</span>,<span class=\"hljs-string\">'='</span>);<br>\t\tmsg.Warning(<span class=\"hljs-string\">'Testing interpolation by &lt;%=fname %&gt; &lt;%=lname %&gt;'</span>, {fname: <span class=\"hljs-string\">'Mike'</span>, lname: <span class=\"hljs-string\">'Erickson'</span>});<br>\t\tmsg.Info({fname: <span class=\"hljs-string\">'Mike'</span>, lname: <span class=\"hljs-string\">'Erickson'</span>});<br>\t\tmsg.Line();<br>\t\texpect(<span class=\"hljs-literal\">true</span>).to.be.equal(<span class=\"hljs-literal\">true</span>);<br>\t\tdone();",
                "isRoot": false,
                "uuid": "34fae4b3-8c4f-486e-90ed-f0a3ef9cd3cc",
                "parentUUID": "1dd8407f-c213-4d24-bbb4-98c99841b294",
                "skipped": false
              },
              {
                "title": "should test all logging routines",
                "fullTitle": "Messenger (Console / Logger) for Browser and Server, including `gulp` pipeline support should test all logging routines",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect(<span class=\"hljs-literal\">true</span>).to.be.equal(<span class=\"hljs-literal\">true</span>);<br>done();",
                "isRoot": false,
                "uuid": "0954a84e-38e0-449e-9fa6-329a722b3677",
                "parentUUID": "1dd8407f-c213-4d24-bbb4-98c99841b294",
                "skipped": false
              },
              {
                "title": "should test `gulp` methods",
                "fullTitle": "Messenger (Console / Logger) for Browser and Server, including `gulp` pipeline support should test `gulp` methods",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect(<span class=\"hljs-literal\">true</span>).to.be.equal(<span class=\"hljs-literal\">true</span>);<br>done();",
                "isRoot": false,
                "uuid": "9c4f7450-7e7f-41c9-9657-ffe87194b739",
                "parentUUID": "1dd8407f-c213-4d24-bbb4-98c99841b294",
                "skipped": false
              },
              {
                "title": "should support all optional params",
                "fullTitle": "Messenger (Console / Logger) for Browser and Server, including `gulp` pipeline support should support all optional params",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "msg.Info(chalk.magenta(<span class=\"hljs-string\">'Note:  These are not working correctly yet...'</span>));<br>\t\tmsg.Line(<span class=\"hljs-string\">'#'</span>);<br>\t\tmsg.Line(<span class=\"hljs-string\">'-'</span>,<span class=\"hljs-number\">40</span>);<br>\t\tdone();",
                "isRoot": false,
                "uuid": "c1a34ee0-e50d-45af-8ddf-0f8f6beea88e",
                "parentUUID": "1dd8407f-c213-4d24-bbb4-98c99841b294",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/spec/MessengerSpec.js",
            "uuid": "1dd8407f-c213-4d24-bbb4-98c99841b294",
            "fullFile": "/Users/mikee/Documents/Projects/gulp-messenger/spec/MessengerSpec.js",
            "passes": [
              {
                "title": "should interpolate string",
                "fullTitle": "Messenger (Console / Logger) for Browser and Server, including `gulp` pipeline support should interpolate string",
                "timedOut": false,
                "duration": 13,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "msg.Info(user);<br>msg.Success(<span class=\"hljs-string\">'Hello there &lt;%= fname %&gt; &lt;%= lname %&gt;:'</span>, user);<br>msg.Success(<span class=\"hljs-string\">'These are our kids &lt;%= kids %&gt;'</span>, user);<br>done();",
                "isRoot": false,
                "uuid": "27cda7ed-ff39-4c86-91ad-7f73f0c6b021",
                "parentUUID": "1dd8407f-c213-4d24-bbb4-98c99841b294",
                "skipped": false
              },
              {
                "title": "should test all messenger routines",
                "fullTitle": "Messenger (Console / Logger) for Browser and Server, including `gulp` pipeline support should test all messenger routines",
                "timedOut": false,
                "duration": 6,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "msg.Log(<span class=\"hljs-string\">'log'</span>);<br>\t\tmsg.Info(<span class=\"hljs-string\">'info'</span>);<br>\t\tmsg.Error(<span class=\"hljs-string\">'error'</span>);<br>\t\tmsg.Success(<span class=\"hljs-string\">'success'</span>);<br>\t\tmsg.Warning(<span class=\"hljs-string\">'warning'</span>);<br>\t\tmsg.Warn(<span class=\"hljs-string\">\"using `warn` shorthand\"</span>);<br>\t\tmsg.Note(chalk.gray(<span class=\"hljs-string\">'note, color supplied by `Chalk` instance'</span>));<br>\t\tmsg.Time(<span class=\"hljs-string\">'time'</span>);<br>\t\tmsg.Debug(<span class=\"hljs-string\">'debug'</span>);<br>\t\tmsg.Header(<span class=\"hljs-string\">'This should be underline'</span>);<br>\t\tmsg.Log(chalk.red.underline(<span class=\"hljs-string\">'You can perform any text customization with simple log and `chalk` library'</span>));<br>\t\tmsg.Info(<span class=\"hljs-string\">'*'</span>,<span class=\"hljs-string\">'Bordered Output'</span>,<span class=\"hljs-string\">'='</span>);<br>\t\tmsg.Warning(<span class=\"hljs-string\">'Testing interpolation by &lt;%=fname %&gt; &lt;%=lname %&gt;'</span>, {fname: <span class=\"hljs-string\">'Mike'</span>, lname: <span class=\"hljs-string\">'Erickson'</span>});<br>\t\tmsg.Info({fname: <span class=\"hljs-string\">'Mike'</span>, lname: <span class=\"hljs-string\">'Erickson'</span>});<br>\t\tmsg.Line();<br>\t\texpect(<span class=\"hljs-literal\">true</span>).to.be.equal(<span class=\"hljs-literal\">true</span>);<br>\t\tdone();",
                "isRoot": false,
                "uuid": "34fae4b3-8c4f-486e-90ed-f0a3ef9cd3cc",
                "parentUUID": "1dd8407f-c213-4d24-bbb4-98c99841b294",
                "skipped": false
              },
              {
                "title": "should test all logging routines",
                "fullTitle": "Messenger (Console / Logger) for Browser and Server, including `gulp` pipeline support should test all logging routines",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect(<span class=\"hljs-literal\">true</span>).to.be.equal(<span class=\"hljs-literal\">true</span>);<br>done();",
                "isRoot": false,
                "uuid": "0954a84e-38e0-449e-9fa6-329a722b3677",
                "parentUUID": "1dd8407f-c213-4d24-bbb4-98c99841b294",
                "skipped": false
              },
              {
                "title": "should test `gulp` methods",
                "fullTitle": "Messenger (Console / Logger) for Browser and Server, including `gulp` pipeline support should test `gulp` methods",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect(<span class=\"hljs-literal\">true</span>).to.be.equal(<span class=\"hljs-literal\">true</span>);<br>done();",
                "isRoot": false,
                "uuid": "9c4f7450-7e7f-41c9-9657-ffe87194b739",
                "parentUUID": "1dd8407f-c213-4d24-bbb4-98c99841b294",
                "skipped": false
              },
              {
                "title": "should support all optional params",
                "fullTitle": "Messenger (Console / Logger) for Browser and Server, including `gulp` pipeline support should support all optional params",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "msg.Info(chalk.magenta(<span class=\"hljs-string\">'Note:  These are not working correctly yet...'</span>));<br>\t\tmsg.Line(<span class=\"hljs-string\">'#'</span>);<br>\t\tmsg.Line(<span class=\"hljs-string\">'-'</span>,<span class=\"hljs-number\">40</span>);<br>\t\tdone();",
                "isRoot": false,
                "uuid": "c1a34ee0-e50d-45af-8ddf-0f8f6beea88e",
                "parentUUID": "1dd8407f-c213-4d24-bbb4-98c99841b294",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 5,
            "totalPasses": 5,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 21
          },
          "ctx": "[Circular ~.allHooks.0.ctx]",
          "_events": {},
          "timer": {
            "0": null,
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 23992211,
            "_onTimeout": null,
            "_repeat": false,
            "domain": {
              "domain": null,
              "_events": {},
              "members": []
            }
          },
          "duration": 2,
          "state": "passed",
          "speed": "fast"
        },
        "test": {
          "title": "should support all optional params",
          "async": 1,
          "sync": false,
          "_timeout": 2000,
          "_slow": 75,
          "_enableTimeouts": true,
          "timedOut": false,
          "_trace": {},
          "pending": false,
          "type": "test",
          "file": "/Users/mikee/Documents/Projects/gulp-messenger/spec/MessengerSpec.js",
          "parent": {
            "title": "Messenger (Console / Logger) for Browser and Server, including `gulp` pipeline support",
            "suites": [],
            "tests": [
              {
                "title": "should interpolate string",
                "fullTitle": "Messenger (Console / Logger) for Browser and Server, including `gulp` pipeline support should interpolate string",
                "timedOut": false,
                "duration": 13,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "msg.Info(user);<br>msg.Success(<span class=\"hljs-string\">'Hello there &lt;%= fname %&gt; &lt;%= lname %&gt;:'</span>, user);<br>msg.Success(<span class=\"hljs-string\">'These are our kids &lt;%= kids %&gt;'</span>, user);<br>done();",
                "isRoot": false,
                "uuid": "27cda7ed-ff39-4c86-91ad-7f73f0c6b021",
                "parentUUID": "1dd8407f-c213-4d24-bbb4-98c99841b294",
                "skipped": false
              },
              {
                "title": "should test all messenger routines",
                "fullTitle": "Messenger (Console / Logger) for Browser and Server, including `gulp` pipeline support should test all messenger routines",
                "timedOut": false,
                "duration": 6,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "msg.Log(<span class=\"hljs-string\">'log'</span>);<br>\t\tmsg.Info(<span class=\"hljs-string\">'info'</span>);<br>\t\tmsg.Error(<span class=\"hljs-string\">'error'</span>);<br>\t\tmsg.Success(<span class=\"hljs-string\">'success'</span>);<br>\t\tmsg.Warning(<span class=\"hljs-string\">'warning'</span>);<br>\t\tmsg.Warn(<span class=\"hljs-string\">\"using `warn` shorthand\"</span>);<br>\t\tmsg.Note(chalk.gray(<span class=\"hljs-string\">'note, color supplied by `Chalk` instance'</span>));<br>\t\tmsg.Time(<span class=\"hljs-string\">'time'</span>);<br>\t\tmsg.Debug(<span class=\"hljs-string\">'debug'</span>);<br>\t\tmsg.Header(<span class=\"hljs-string\">'This should be underline'</span>);<br>\t\tmsg.Log(chalk.red.underline(<span class=\"hljs-string\">'You can perform any text customization with simple log and `chalk` library'</span>));<br>\t\tmsg.Info(<span class=\"hljs-string\">'*'</span>,<span class=\"hljs-string\">'Bordered Output'</span>,<span class=\"hljs-string\">'='</span>);<br>\t\tmsg.Warning(<span class=\"hljs-string\">'Testing interpolation by &lt;%=fname %&gt; &lt;%=lname %&gt;'</span>, {fname: <span class=\"hljs-string\">'Mike'</span>, lname: <span class=\"hljs-string\">'Erickson'</span>});<br>\t\tmsg.Info({fname: <span class=\"hljs-string\">'Mike'</span>, lname: <span class=\"hljs-string\">'Erickson'</span>});<br>\t\tmsg.Line();<br>\t\texpect(<span class=\"hljs-literal\">true</span>).to.be.equal(<span class=\"hljs-literal\">true</span>);<br>\t\tdone();",
                "isRoot": false,
                "uuid": "34fae4b3-8c4f-486e-90ed-f0a3ef9cd3cc",
                "parentUUID": "1dd8407f-c213-4d24-bbb4-98c99841b294",
                "skipped": false
              },
              {
                "title": "should test all logging routines",
                "fullTitle": "Messenger (Console / Logger) for Browser and Server, including `gulp` pipeline support should test all logging routines",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect(<span class=\"hljs-literal\">true</span>).to.be.equal(<span class=\"hljs-literal\">true</span>);<br>done();",
                "isRoot": false,
                "uuid": "0954a84e-38e0-449e-9fa6-329a722b3677",
                "parentUUID": "1dd8407f-c213-4d24-bbb4-98c99841b294",
                "skipped": false
              },
              {
                "title": "should test `gulp` methods",
                "fullTitle": "Messenger (Console / Logger) for Browser and Server, including `gulp` pipeline support should test `gulp` methods",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect(<span class=\"hljs-literal\">true</span>).to.be.equal(<span class=\"hljs-literal\">true</span>);<br>done();",
                "isRoot": false,
                "uuid": "9c4f7450-7e7f-41c9-9657-ffe87194b739",
                "parentUUID": "1dd8407f-c213-4d24-bbb4-98c99841b294",
                "skipped": false
              },
              {
                "title": "should support all optional params",
                "fullTitle": "Messenger (Console / Logger) for Browser and Server, including `gulp` pipeline support should support all optional params",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "msg.Info(chalk.magenta(<span class=\"hljs-string\">'Note:  These are not working correctly yet...'</span>));<br>\t\tmsg.Line(<span class=\"hljs-string\">'#'</span>);<br>\t\tmsg.Line(<span class=\"hljs-string\">'-'</span>,<span class=\"hljs-number\">40</span>);<br>\t\tdone();",
                "isRoot": false,
                "uuid": "c1a34ee0-e50d-45af-8ddf-0f8f6beea88e",
                "parentUUID": "1dd8407f-c213-4d24-bbb4-98c99841b294",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/spec/MessengerSpec.js",
            "uuid": "1dd8407f-c213-4d24-bbb4-98c99841b294",
            "fullFile": "/Users/mikee/Documents/Projects/gulp-messenger/spec/MessengerSpec.js",
            "passes": [
              {
                "title": "should interpolate string",
                "fullTitle": "Messenger (Console / Logger) for Browser and Server, including `gulp` pipeline support should interpolate string",
                "timedOut": false,
                "duration": 13,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "msg.Info(user);<br>msg.Success(<span class=\"hljs-string\">'Hello there &lt;%= fname %&gt; &lt;%= lname %&gt;:'</span>, user);<br>msg.Success(<span class=\"hljs-string\">'These are our kids &lt;%= kids %&gt;'</span>, user);<br>done();",
                "isRoot": false,
                "uuid": "27cda7ed-ff39-4c86-91ad-7f73f0c6b021",
                "parentUUID": "1dd8407f-c213-4d24-bbb4-98c99841b294",
                "skipped": false
              },
              {
                "title": "should test all messenger routines",
                "fullTitle": "Messenger (Console / Logger) for Browser and Server, including `gulp` pipeline support should test all messenger routines",
                "timedOut": false,
                "duration": 6,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "msg.Log(<span class=\"hljs-string\">'log'</span>);<br>\t\tmsg.Info(<span class=\"hljs-string\">'info'</span>);<br>\t\tmsg.Error(<span class=\"hljs-string\">'error'</span>);<br>\t\tmsg.Success(<span class=\"hljs-string\">'success'</span>);<br>\t\tmsg.Warning(<span class=\"hljs-string\">'warning'</span>);<br>\t\tmsg.Warn(<span class=\"hljs-string\">\"using `warn` shorthand\"</span>);<br>\t\tmsg.Note(chalk.gray(<span class=\"hljs-string\">'note, color supplied by `Chalk` instance'</span>));<br>\t\tmsg.Time(<span class=\"hljs-string\">'time'</span>);<br>\t\tmsg.Debug(<span class=\"hljs-string\">'debug'</span>);<br>\t\tmsg.Header(<span class=\"hljs-string\">'This should be underline'</span>);<br>\t\tmsg.Log(chalk.red.underline(<span class=\"hljs-string\">'You can perform any text customization with simple log and `chalk` library'</span>));<br>\t\tmsg.Info(<span class=\"hljs-string\">'*'</span>,<span class=\"hljs-string\">'Bordered Output'</span>,<span class=\"hljs-string\">'='</span>);<br>\t\tmsg.Warning(<span class=\"hljs-string\">'Testing interpolation by &lt;%=fname %&gt; &lt;%=lname %&gt;'</span>, {fname: <span class=\"hljs-string\">'Mike'</span>, lname: <span class=\"hljs-string\">'Erickson'</span>});<br>\t\tmsg.Info({fname: <span class=\"hljs-string\">'Mike'</span>, lname: <span class=\"hljs-string\">'Erickson'</span>});<br>\t\tmsg.Line();<br>\t\texpect(<span class=\"hljs-literal\">true</span>).to.be.equal(<span class=\"hljs-literal\">true</span>);<br>\t\tdone();",
                "isRoot": false,
                "uuid": "34fae4b3-8c4f-486e-90ed-f0a3ef9cd3cc",
                "parentUUID": "1dd8407f-c213-4d24-bbb4-98c99841b294",
                "skipped": false
              },
              {
                "title": "should test all logging routines",
                "fullTitle": "Messenger (Console / Logger) for Browser and Server, including `gulp` pipeline support should test all logging routines",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect(<span class=\"hljs-literal\">true</span>).to.be.equal(<span class=\"hljs-literal\">true</span>);<br>done();",
                "isRoot": false,
                "uuid": "0954a84e-38e0-449e-9fa6-329a722b3677",
                "parentUUID": "1dd8407f-c213-4d24-bbb4-98c99841b294",
                "skipped": false
              },
              {
                "title": "should test `gulp` methods",
                "fullTitle": "Messenger (Console / Logger) for Browser and Server, including `gulp` pipeline support should test `gulp` methods",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect(<span class=\"hljs-literal\">true</span>).to.be.equal(<span class=\"hljs-literal\">true</span>);<br>done();",
                "isRoot": false,
                "uuid": "9c4f7450-7e7f-41c9-9657-ffe87194b739",
                "parentUUID": "1dd8407f-c213-4d24-bbb4-98c99841b294",
                "skipped": false
              },
              {
                "title": "should support all optional params",
                "fullTitle": "Messenger (Console / Logger) for Browser and Server, including `gulp` pipeline support should support all optional params",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "msg.Info(chalk.magenta(<span class=\"hljs-string\">'Note:  These are not working correctly yet...'</span>));<br>\t\tmsg.Line(<span class=\"hljs-string\">'#'</span>);<br>\t\tmsg.Line(<span class=\"hljs-string\">'-'</span>,<span class=\"hljs-number\">40</span>);<br>\t\tdone();",
                "isRoot": false,
                "uuid": "c1a34ee0-e50d-45af-8ddf-0f8f6beea88e",
                "parentUUID": "1dd8407f-c213-4d24-bbb4-98c99841b294",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 5,
            "totalPasses": 5,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 21
          },
          "ctx": "[Circular ~.allHooks.0.ctx]",
          "_events": {},
          "timer": {
            "0": null,
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 23992211,
            "_onTimeout": null,
            "_repeat": false,
            "domain": {
              "domain": null,
              "_events": {},
              "members": []
            }
          },
          "duration": 2,
          "state": "passed",
          "speed": "fast"
        }
      },
      "_events": {},
      "duration": 0,
      "_error": null
    },
    {
      "title": "\"before each\" hook",
      "async": 0,
      "sync": true,
      "_timeout": 2000,
      "_slow": 75,
      "_enableTimeouts": true,
      "timedOut": false,
      "_trace": {},
      "type": "hook",
      "parent": {
        "title": "Messenger (Console / Logger) for Browser and Server, including `gulp` pipeline support",
        "suites": [],
        "tests": [
          {
            "title": "should interpolate string",
            "fullTitle": "Messenger (Console / Logger) for Browser and Server, including `gulp` pipeline support should interpolate string",
            "timedOut": false,
            "duration": 13,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "msg.Info(user);<br>msg.Success(<span class=\"hljs-string\">'Hello there &lt;%= fname %&gt; &lt;%= lname %&gt;:'</span>, user);<br>msg.Success(<span class=\"hljs-string\">'These are our kids &lt;%= kids %&gt;'</span>, user);<br>done();",
            "isRoot": false,
            "uuid": "27cda7ed-ff39-4c86-91ad-7f73f0c6b021",
            "parentUUID": "1dd8407f-c213-4d24-bbb4-98c99841b294",
            "skipped": false
          },
          {
            "title": "should test all messenger routines",
            "fullTitle": "Messenger (Console / Logger) for Browser and Server, including `gulp` pipeline support should test all messenger routines",
            "timedOut": false,
            "duration": 6,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "msg.Log(<span class=\"hljs-string\">'log'</span>);<br>\t\tmsg.Info(<span class=\"hljs-string\">'info'</span>);<br>\t\tmsg.Error(<span class=\"hljs-string\">'error'</span>);<br>\t\tmsg.Success(<span class=\"hljs-string\">'success'</span>);<br>\t\tmsg.Warning(<span class=\"hljs-string\">'warning'</span>);<br>\t\tmsg.Warn(<span class=\"hljs-string\">\"using `warn` shorthand\"</span>);<br>\t\tmsg.Note(chalk.gray(<span class=\"hljs-string\">'note, color supplied by `Chalk` instance'</span>));<br>\t\tmsg.Time(<span class=\"hljs-string\">'time'</span>);<br>\t\tmsg.Debug(<span class=\"hljs-string\">'debug'</span>);<br>\t\tmsg.Header(<span class=\"hljs-string\">'This should be underline'</span>);<br>\t\tmsg.Log(chalk.red.underline(<span class=\"hljs-string\">'You can perform any text customization with simple log and `chalk` library'</span>));<br>\t\tmsg.Info(<span class=\"hljs-string\">'*'</span>,<span class=\"hljs-string\">'Bordered Output'</span>,<span class=\"hljs-string\">'='</span>);<br>\t\tmsg.Warning(<span class=\"hljs-string\">'Testing interpolation by &lt;%=fname %&gt; &lt;%=lname %&gt;'</span>, {fname: <span class=\"hljs-string\">'Mike'</span>, lname: <span class=\"hljs-string\">'Erickson'</span>});<br>\t\tmsg.Info({fname: <span class=\"hljs-string\">'Mike'</span>, lname: <span class=\"hljs-string\">'Erickson'</span>});<br>\t\tmsg.Line();<br>\t\texpect(<span class=\"hljs-literal\">true</span>).to.be.equal(<span class=\"hljs-literal\">true</span>);<br>\t\tdone();",
            "isRoot": false,
            "uuid": "34fae4b3-8c4f-486e-90ed-f0a3ef9cd3cc",
            "parentUUID": "1dd8407f-c213-4d24-bbb4-98c99841b294",
            "skipped": false
          },
          {
            "title": "should test all logging routines",
            "fullTitle": "Messenger (Console / Logger) for Browser and Server, including `gulp` pipeline support should test all logging routines",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(<span class=\"hljs-literal\">true</span>).to.be.equal(<span class=\"hljs-literal\">true</span>);<br>done();",
            "isRoot": false,
            "uuid": "0954a84e-38e0-449e-9fa6-329a722b3677",
            "parentUUID": "1dd8407f-c213-4d24-bbb4-98c99841b294",
            "skipped": false
          },
          {
            "title": "should test `gulp` methods",
            "fullTitle": "Messenger (Console / Logger) for Browser and Server, including `gulp` pipeline support should test `gulp` methods",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(<span class=\"hljs-literal\">true</span>).to.be.equal(<span class=\"hljs-literal\">true</span>);<br>done();",
            "isRoot": false,
            "uuid": "9c4f7450-7e7f-41c9-9657-ffe87194b739",
            "parentUUID": "1dd8407f-c213-4d24-bbb4-98c99841b294",
            "skipped": false
          },
          {
            "title": "should support all optional params",
            "fullTitle": "Messenger (Console / Logger) for Browser and Server, including `gulp` pipeline support should support all optional params",
            "timedOut": false,
            "duration": 2,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "msg.Info(chalk.magenta(<span class=\"hljs-string\">'Note:  These are not working correctly yet...'</span>));<br>\t\tmsg.Line(<span class=\"hljs-string\">'#'</span>);<br>\t\tmsg.Line(<span class=\"hljs-string\">'-'</span>,<span class=\"hljs-number\">40</span>);<br>\t\tdone();",
            "isRoot": false,
            "uuid": "c1a34ee0-e50d-45af-8ddf-0f8f6beea88e",
            "parentUUID": "1dd8407f-c213-4d24-bbb4-98c99841b294",
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/spec/MessengerSpec.js",
        "uuid": "1dd8407f-c213-4d24-bbb4-98c99841b294",
        "fullFile": "/Users/mikee/Documents/Projects/gulp-messenger/spec/MessengerSpec.js",
        "passes": [
          {
            "title": "should interpolate string",
            "fullTitle": "Messenger (Console / Logger) for Browser and Server, including `gulp` pipeline support should interpolate string",
            "timedOut": false,
            "duration": 13,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "msg.Info(user);<br>msg.Success(<span class=\"hljs-string\">'Hello there &lt;%= fname %&gt; &lt;%= lname %&gt;:'</span>, user);<br>msg.Success(<span class=\"hljs-string\">'These are our kids &lt;%= kids %&gt;'</span>, user);<br>done();",
            "isRoot": false,
            "uuid": "27cda7ed-ff39-4c86-91ad-7f73f0c6b021",
            "parentUUID": "1dd8407f-c213-4d24-bbb4-98c99841b294",
            "skipped": false
          },
          {
            "title": "should test all messenger routines",
            "fullTitle": "Messenger (Console / Logger) for Browser and Server, including `gulp` pipeline support should test all messenger routines",
            "timedOut": false,
            "duration": 6,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "msg.Log(<span class=\"hljs-string\">'log'</span>);<br>\t\tmsg.Info(<span class=\"hljs-string\">'info'</span>);<br>\t\tmsg.Error(<span class=\"hljs-string\">'error'</span>);<br>\t\tmsg.Success(<span class=\"hljs-string\">'success'</span>);<br>\t\tmsg.Warning(<span class=\"hljs-string\">'warning'</span>);<br>\t\tmsg.Warn(<span class=\"hljs-string\">\"using `warn` shorthand\"</span>);<br>\t\tmsg.Note(chalk.gray(<span class=\"hljs-string\">'note, color supplied by `Chalk` instance'</span>));<br>\t\tmsg.Time(<span class=\"hljs-string\">'time'</span>);<br>\t\tmsg.Debug(<span class=\"hljs-string\">'debug'</span>);<br>\t\tmsg.Header(<span class=\"hljs-string\">'This should be underline'</span>);<br>\t\tmsg.Log(chalk.red.underline(<span class=\"hljs-string\">'You can perform any text customization with simple log and `chalk` library'</span>));<br>\t\tmsg.Info(<span class=\"hljs-string\">'*'</span>,<span class=\"hljs-string\">'Bordered Output'</span>,<span class=\"hljs-string\">'='</span>);<br>\t\tmsg.Warning(<span class=\"hljs-string\">'Testing interpolation by &lt;%=fname %&gt; &lt;%=lname %&gt;'</span>, {fname: <span class=\"hljs-string\">'Mike'</span>, lname: <span class=\"hljs-string\">'Erickson'</span>});<br>\t\tmsg.Info({fname: <span class=\"hljs-string\">'Mike'</span>, lname: <span class=\"hljs-string\">'Erickson'</span>});<br>\t\tmsg.Line();<br>\t\texpect(<span class=\"hljs-literal\">true</span>).to.be.equal(<span class=\"hljs-literal\">true</span>);<br>\t\tdone();",
            "isRoot": false,
            "uuid": "34fae4b3-8c4f-486e-90ed-f0a3ef9cd3cc",
            "parentUUID": "1dd8407f-c213-4d24-bbb4-98c99841b294",
            "skipped": false
          },
          {
            "title": "should test all logging routines",
            "fullTitle": "Messenger (Console / Logger) for Browser and Server, including `gulp` pipeline support should test all logging routines",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(<span class=\"hljs-literal\">true</span>).to.be.equal(<span class=\"hljs-literal\">true</span>);<br>done();",
            "isRoot": false,
            "uuid": "0954a84e-38e0-449e-9fa6-329a722b3677",
            "parentUUID": "1dd8407f-c213-4d24-bbb4-98c99841b294",
            "skipped": false
          },
          {
            "title": "should test `gulp` methods",
            "fullTitle": "Messenger (Console / Logger) for Browser and Server, including `gulp` pipeline support should test `gulp` methods",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(<span class=\"hljs-literal\">true</span>).to.be.equal(<span class=\"hljs-literal\">true</span>);<br>done();",
            "isRoot": false,
            "uuid": "9c4f7450-7e7f-41c9-9657-ffe87194b739",
            "parentUUID": "1dd8407f-c213-4d24-bbb4-98c99841b294",
            "skipped": false
          },
          {
            "title": "should support all optional params",
            "fullTitle": "Messenger (Console / Logger) for Browser and Server, including `gulp` pipeline support should support all optional params",
            "timedOut": false,
            "duration": 2,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "msg.Info(chalk.magenta(<span class=\"hljs-string\">'Note:  These are not working correctly yet...'</span>));<br>\t\tmsg.Line(<span class=\"hljs-string\">'#'</span>);<br>\t\tmsg.Line(<span class=\"hljs-string\">'-'</span>,<span class=\"hljs-number\">40</span>);<br>\t\tdone();",
            "isRoot": false,
            "uuid": "c1a34ee0-e50d-45af-8ddf-0f8f6beea88e",
            "parentUUID": "1dd8407f-c213-4d24-bbb4-98c99841b294",
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 5,
        "totalPasses": 5,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 21
      },
      "ctx": {
        "_runnable": {
          "title": "should support all optional params",
          "async": 1,
          "sync": false,
          "_timeout": 2000,
          "_slow": 75,
          "_enableTimeouts": true,
          "timedOut": false,
          "_trace": {},
          "pending": false,
          "type": "test",
          "file": "/Users/mikee/Documents/Projects/gulp-messenger/spec/MessengerSpec.js",
          "parent": {
            "title": "Messenger (Console / Logger) for Browser and Server, including `gulp` pipeline support",
            "suites": [],
            "tests": [
              {
                "title": "should interpolate string",
                "fullTitle": "Messenger (Console / Logger) for Browser and Server, including `gulp` pipeline support should interpolate string",
                "timedOut": false,
                "duration": 13,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "msg.Info(user);<br>msg.Success(<span class=\"hljs-string\">'Hello there &lt;%= fname %&gt; &lt;%= lname %&gt;:'</span>, user);<br>msg.Success(<span class=\"hljs-string\">'These are our kids &lt;%= kids %&gt;'</span>, user);<br>done();",
                "isRoot": false,
                "uuid": "27cda7ed-ff39-4c86-91ad-7f73f0c6b021",
                "parentUUID": "1dd8407f-c213-4d24-bbb4-98c99841b294",
                "skipped": false
              },
              {
                "title": "should test all messenger routines",
                "fullTitle": "Messenger (Console / Logger) for Browser and Server, including `gulp` pipeline support should test all messenger routines",
                "timedOut": false,
                "duration": 6,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "msg.Log(<span class=\"hljs-string\">'log'</span>);<br>\t\tmsg.Info(<span class=\"hljs-string\">'info'</span>);<br>\t\tmsg.Error(<span class=\"hljs-string\">'error'</span>);<br>\t\tmsg.Success(<span class=\"hljs-string\">'success'</span>);<br>\t\tmsg.Warning(<span class=\"hljs-string\">'warning'</span>);<br>\t\tmsg.Warn(<span class=\"hljs-string\">\"using `warn` shorthand\"</span>);<br>\t\tmsg.Note(chalk.gray(<span class=\"hljs-string\">'note, color supplied by `Chalk` instance'</span>));<br>\t\tmsg.Time(<span class=\"hljs-string\">'time'</span>);<br>\t\tmsg.Debug(<span class=\"hljs-string\">'debug'</span>);<br>\t\tmsg.Header(<span class=\"hljs-string\">'This should be underline'</span>);<br>\t\tmsg.Log(chalk.red.underline(<span class=\"hljs-string\">'You can perform any text customization with simple log and `chalk` library'</span>));<br>\t\tmsg.Info(<span class=\"hljs-string\">'*'</span>,<span class=\"hljs-string\">'Bordered Output'</span>,<span class=\"hljs-string\">'='</span>);<br>\t\tmsg.Warning(<span class=\"hljs-string\">'Testing interpolation by &lt;%=fname %&gt; &lt;%=lname %&gt;'</span>, {fname: <span class=\"hljs-string\">'Mike'</span>, lname: <span class=\"hljs-string\">'Erickson'</span>});<br>\t\tmsg.Info({fname: <span class=\"hljs-string\">'Mike'</span>, lname: <span class=\"hljs-string\">'Erickson'</span>});<br>\t\tmsg.Line();<br>\t\texpect(<span class=\"hljs-literal\">true</span>).to.be.equal(<span class=\"hljs-literal\">true</span>);<br>\t\tdone();",
                "isRoot": false,
                "uuid": "34fae4b3-8c4f-486e-90ed-f0a3ef9cd3cc",
                "parentUUID": "1dd8407f-c213-4d24-bbb4-98c99841b294",
                "skipped": false
              },
              {
                "title": "should test all logging routines",
                "fullTitle": "Messenger (Console / Logger) for Browser and Server, including `gulp` pipeline support should test all logging routines",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect(<span class=\"hljs-literal\">true</span>).to.be.equal(<span class=\"hljs-literal\">true</span>);<br>done();",
                "isRoot": false,
                "uuid": "0954a84e-38e0-449e-9fa6-329a722b3677",
                "parentUUID": "1dd8407f-c213-4d24-bbb4-98c99841b294",
                "skipped": false
              },
              {
                "title": "should test `gulp` methods",
                "fullTitle": "Messenger (Console / Logger) for Browser and Server, including `gulp` pipeline support should test `gulp` methods",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect(<span class=\"hljs-literal\">true</span>).to.be.equal(<span class=\"hljs-literal\">true</span>);<br>done();",
                "isRoot": false,
                "uuid": "9c4f7450-7e7f-41c9-9657-ffe87194b739",
                "parentUUID": "1dd8407f-c213-4d24-bbb4-98c99841b294",
                "skipped": false
              },
              {
                "title": "should support all optional params",
                "fullTitle": "Messenger (Console / Logger) for Browser and Server, including `gulp` pipeline support should support all optional params",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "msg.Info(chalk.magenta(<span class=\"hljs-string\">'Note:  These are not working correctly yet...'</span>));<br>\t\tmsg.Line(<span class=\"hljs-string\">'#'</span>);<br>\t\tmsg.Line(<span class=\"hljs-string\">'-'</span>,<span class=\"hljs-number\">40</span>);<br>\t\tdone();",
                "isRoot": false,
                "uuid": "c1a34ee0-e50d-45af-8ddf-0f8f6beea88e",
                "parentUUID": "1dd8407f-c213-4d24-bbb4-98c99841b294",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/spec/MessengerSpec.js",
            "uuid": "1dd8407f-c213-4d24-bbb4-98c99841b294",
            "fullFile": "/Users/mikee/Documents/Projects/gulp-messenger/spec/MessengerSpec.js",
            "passes": [
              {
                "title": "should interpolate string",
                "fullTitle": "Messenger (Console / Logger) for Browser and Server, including `gulp` pipeline support should interpolate string",
                "timedOut": false,
                "duration": 13,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "msg.Info(user);<br>msg.Success(<span class=\"hljs-string\">'Hello there &lt;%= fname %&gt; &lt;%= lname %&gt;:'</span>, user);<br>msg.Success(<span class=\"hljs-string\">'These are our kids &lt;%= kids %&gt;'</span>, user);<br>done();",
                "isRoot": false,
                "uuid": "27cda7ed-ff39-4c86-91ad-7f73f0c6b021",
                "parentUUID": "1dd8407f-c213-4d24-bbb4-98c99841b294",
                "skipped": false
              },
              {
                "title": "should test all messenger routines",
                "fullTitle": "Messenger (Console / Logger) for Browser and Server, including `gulp` pipeline support should test all messenger routines",
                "timedOut": false,
                "duration": 6,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "msg.Log(<span class=\"hljs-string\">'log'</span>);<br>\t\tmsg.Info(<span class=\"hljs-string\">'info'</span>);<br>\t\tmsg.Error(<span class=\"hljs-string\">'error'</span>);<br>\t\tmsg.Success(<span class=\"hljs-string\">'success'</span>);<br>\t\tmsg.Warning(<span class=\"hljs-string\">'warning'</span>);<br>\t\tmsg.Warn(<span class=\"hljs-string\">\"using `warn` shorthand\"</span>);<br>\t\tmsg.Note(chalk.gray(<span class=\"hljs-string\">'note, color supplied by `Chalk` instance'</span>));<br>\t\tmsg.Time(<span class=\"hljs-string\">'time'</span>);<br>\t\tmsg.Debug(<span class=\"hljs-string\">'debug'</span>);<br>\t\tmsg.Header(<span class=\"hljs-string\">'This should be underline'</span>);<br>\t\tmsg.Log(chalk.red.underline(<span class=\"hljs-string\">'You can perform any text customization with simple log and `chalk` library'</span>));<br>\t\tmsg.Info(<span class=\"hljs-string\">'*'</span>,<span class=\"hljs-string\">'Bordered Output'</span>,<span class=\"hljs-string\">'='</span>);<br>\t\tmsg.Warning(<span class=\"hljs-string\">'Testing interpolation by &lt;%=fname %&gt; &lt;%=lname %&gt;'</span>, {fname: <span class=\"hljs-string\">'Mike'</span>, lname: <span class=\"hljs-string\">'Erickson'</span>});<br>\t\tmsg.Info({fname: <span class=\"hljs-string\">'Mike'</span>, lname: <span class=\"hljs-string\">'Erickson'</span>});<br>\t\tmsg.Line();<br>\t\texpect(<span class=\"hljs-literal\">true</span>).to.be.equal(<span class=\"hljs-literal\">true</span>);<br>\t\tdone();",
                "isRoot": false,
                "uuid": "34fae4b3-8c4f-486e-90ed-f0a3ef9cd3cc",
                "parentUUID": "1dd8407f-c213-4d24-bbb4-98c99841b294",
                "skipped": false
              },
              {
                "title": "should test all logging routines",
                "fullTitle": "Messenger (Console / Logger) for Browser and Server, including `gulp` pipeline support should test all logging routines",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect(<span class=\"hljs-literal\">true</span>).to.be.equal(<span class=\"hljs-literal\">true</span>);<br>done();",
                "isRoot": false,
                "uuid": "0954a84e-38e0-449e-9fa6-329a722b3677",
                "parentUUID": "1dd8407f-c213-4d24-bbb4-98c99841b294",
                "skipped": false
              },
              {
                "title": "should test `gulp` methods",
                "fullTitle": "Messenger (Console / Logger) for Browser and Server, including `gulp` pipeline support should test `gulp` methods",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect(<span class=\"hljs-literal\">true</span>).to.be.equal(<span class=\"hljs-literal\">true</span>);<br>done();",
                "isRoot": false,
                "uuid": "9c4f7450-7e7f-41c9-9657-ffe87194b739",
                "parentUUID": "1dd8407f-c213-4d24-bbb4-98c99841b294",
                "skipped": false
              },
              {
                "title": "should support all optional params",
                "fullTitle": "Messenger (Console / Logger) for Browser and Server, including `gulp` pipeline support should support all optional params",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "msg.Info(chalk.magenta(<span class=\"hljs-string\">'Note:  These are not working correctly yet...'</span>));<br>\t\tmsg.Line(<span class=\"hljs-string\">'#'</span>);<br>\t\tmsg.Line(<span class=\"hljs-string\">'-'</span>,<span class=\"hljs-number\">40</span>);<br>\t\tdone();",
                "isRoot": false,
                "uuid": "c1a34ee0-e50d-45af-8ddf-0f8f6beea88e",
                "parentUUID": "1dd8407f-c213-4d24-bbb4-98c99841b294",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 5,
            "totalPasses": 5,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 21
          },
          "ctx": "[Circular ~.allHooks.1.ctx]",
          "_events": {},
          "timer": {
            "0": null,
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 23992211,
            "_onTimeout": null,
            "_repeat": false,
            "domain": {
              "domain": null,
              "_events": {},
              "members": []
            }
          },
          "duration": 2,
          "state": "passed",
          "speed": "fast"
        },
        "test": {
          "title": "should support all optional params",
          "async": 1,
          "sync": false,
          "_timeout": 2000,
          "_slow": 75,
          "_enableTimeouts": true,
          "timedOut": false,
          "_trace": {},
          "pending": false,
          "type": "test",
          "file": "/Users/mikee/Documents/Projects/gulp-messenger/spec/MessengerSpec.js",
          "parent": {
            "title": "Messenger (Console / Logger) for Browser and Server, including `gulp` pipeline support",
            "suites": [],
            "tests": [
              {
                "title": "should interpolate string",
                "fullTitle": "Messenger (Console / Logger) for Browser and Server, including `gulp` pipeline support should interpolate string",
                "timedOut": false,
                "duration": 13,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "msg.Info(user);<br>msg.Success(<span class=\"hljs-string\">'Hello there &lt;%= fname %&gt; &lt;%= lname %&gt;:'</span>, user);<br>msg.Success(<span class=\"hljs-string\">'These are our kids &lt;%= kids %&gt;'</span>, user);<br>done();",
                "isRoot": false,
                "uuid": "27cda7ed-ff39-4c86-91ad-7f73f0c6b021",
                "parentUUID": "1dd8407f-c213-4d24-bbb4-98c99841b294",
                "skipped": false
              },
              {
                "title": "should test all messenger routines",
                "fullTitle": "Messenger (Console / Logger) for Browser and Server, including `gulp` pipeline support should test all messenger routines",
                "timedOut": false,
                "duration": 6,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "msg.Log(<span class=\"hljs-string\">'log'</span>);<br>\t\tmsg.Info(<span class=\"hljs-string\">'info'</span>);<br>\t\tmsg.Error(<span class=\"hljs-string\">'error'</span>);<br>\t\tmsg.Success(<span class=\"hljs-string\">'success'</span>);<br>\t\tmsg.Warning(<span class=\"hljs-string\">'warning'</span>);<br>\t\tmsg.Warn(<span class=\"hljs-string\">\"using `warn` shorthand\"</span>);<br>\t\tmsg.Note(chalk.gray(<span class=\"hljs-string\">'note, color supplied by `Chalk` instance'</span>));<br>\t\tmsg.Time(<span class=\"hljs-string\">'time'</span>);<br>\t\tmsg.Debug(<span class=\"hljs-string\">'debug'</span>);<br>\t\tmsg.Header(<span class=\"hljs-string\">'This should be underline'</span>);<br>\t\tmsg.Log(chalk.red.underline(<span class=\"hljs-string\">'You can perform any text customization with simple log and `chalk` library'</span>));<br>\t\tmsg.Info(<span class=\"hljs-string\">'*'</span>,<span class=\"hljs-string\">'Bordered Output'</span>,<span class=\"hljs-string\">'='</span>);<br>\t\tmsg.Warning(<span class=\"hljs-string\">'Testing interpolation by &lt;%=fname %&gt; &lt;%=lname %&gt;'</span>, {fname: <span class=\"hljs-string\">'Mike'</span>, lname: <span class=\"hljs-string\">'Erickson'</span>});<br>\t\tmsg.Info({fname: <span class=\"hljs-string\">'Mike'</span>, lname: <span class=\"hljs-string\">'Erickson'</span>});<br>\t\tmsg.Line();<br>\t\texpect(<span class=\"hljs-literal\">true</span>).to.be.equal(<span class=\"hljs-literal\">true</span>);<br>\t\tdone();",
                "isRoot": false,
                "uuid": "34fae4b3-8c4f-486e-90ed-f0a3ef9cd3cc",
                "parentUUID": "1dd8407f-c213-4d24-bbb4-98c99841b294",
                "skipped": false
              },
              {
                "title": "should test all logging routines",
                "fullTitle": "Messenger (Console / Logger) for Browser and Server, including `gulp` pipeline support should test all logging routines",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect(<span class=\"hljs-literal\">true</span>).to.be.equal(<span class=\"hljs-literal\">true</span>);<br>done();",
                "isRoot": false,
                "uuid": "0954a84e-38e0-449e-9fa6-329a722b3677",
                "parentUUID": "1dd8407f-c213-4d24-bbb4-98c99841b294",
                "skipped": false
              },
              {
                "title": "should test `gulp` methods",
                "fullTitle": "Messenger (Console / Logger) for Browser and Server, including `gulp` pipeline support should test `gulp` methods",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect(<span class=\"hljs-literal\">true</span>).to.be.equal(<span class=\"hljs-literal\">true</span>);<br>done();",
                "isRoot": false,
                "uuid": "9c4f7450-7e7f-41c9-9657-ffe87194b739",
                "parentUUID": "1dd8407f-c213-4d24-bbb4-98c99841b294",
                "skipped": false
              },
              {
                "title": "should support all optional params",
                "fullTitle": "Messenger (Console / Logger) for Browser and Server, including `gulp` pipeline support should support all optional params",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "msg.Info(chalk.magenta(<span class=\"hljs-string\">'Note:  These are not working correctly yet...'</span>));<br>\t\tmsg.Line(<span class=\"hljs-string\">'#'</span>);<br>\t\tmsg.Line(<span class=\"hljs-string\">'-'</span>,<span class=\"hljs-number\">40</span>);<br>\t\tdone();",
                "isRoot": false,
                "uuid": "c1a34ee0-e50d-45af-8ddf-0f8f6beea88e",
                "parentUUID": "1dd8407f-c213-4d24-bbb4-98c99841b294",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/spec/MessengerSpec.js",
            "uuid": "1dd8407f-c213-4d24-bbb4-98c99841b294",
            "fullFile": "/Users/mikee/Documents/Projects/gulp-messenger/spec/MessengerSpec.js",
            "passes": [
              {
                "title": "should interpolate string",
                "fullTitle": "Messenger (Console / Logger) for Browser and Server, including `gulp` pipeline support should interpolate string",
                "timedOut": false,
                "duration": 13,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "msg.Info(user);<br>msg.Success(<span class=\"hljs-string\">'Hello there &lt;%= fname %&gt; &lt;%= lname %&gt;:'</span>, user);<br>msg.Success(<span class=\"hljs-string\">'These are our kids &lt;%= kids %&gt;'</span>, user);<br>done();",
                "isRoot": false,
                "uuid": "27cda7ed-ff39-4c86-91ad-7f73f0c6b021",
                "parentUUID": "1dd8407f-c213-4d24-bbb4-98c99841b294",
                "skipped": false
              },
              {
                "title": "should test all messenger routines",
                "fullTitle": "Messenger (Console / Logger) for Browser and Server, including `gulp` pipeline support should test all messenger routines",
                "timedOut": false,
                "duration": 6,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "msg.Log(<span class=\"hljs-string\">'log'</span>);<br>\t\tmsg.Info(<span class=\"hljs-string\">'info'</span>);<br>\t\tmsg.Error(<span class=\"hljs-string\">'error'</span>);<br>\t\tmsg.Success(<span class=\"hljs-string\">'success'</span>);<br>\t\tmsg.Warning(<span class=\"hljs-string\">'warning'</span>);<br>\t\tmsg.Warn(<span class=\"hljs-string\">\"using `warn` shorthand\"</span>);<br>\t\tmsg.Note(chalk.gray(<span class=\"hljs-string\">'note, color supplied by `Chalk` instance'</span>));<br>\t\tmsg.Time(<span class=\"hljs-string\">'time'</span>);<br>\t\tmsg.Debug(<span class=\"hljs-string\">'debug'</span>);<br>\t\tmsg.Header(<span class=\"hljs-string\">'This should be underline'</span>);<br>\t\tmsg.Log(chalk.red.underline(<span class=\"hljs-string\">'You can perform any text customization with simple log and `chalk` library'</span>));<br>\t\tmsg.Info(<span class=\"hljs-string\">'*'</span>,<span class=\"hljs-string\">'Bordered Output'</span>,<span class=\"hljs-string\">'='</span>);<br>\t\tmsg.Warning(<span class=\"hljs-string\">'Testing interpolation by &lt;%=fname %&gt; &lt;%=lname %&gt;'</span>, {fname: <span class=\"hljs-string\">'Mike'</span>, lname: <span class=\"hljs-string\">'Erickson'</span>});<br>\t\tmsg.Info({fname: <span class=\"hljs-string\">'Mike'</span>, lname: <span class=\"hljs-string\">'Erickson'</span>});<br>\t\tmsg.Line();<br>\t\texpect(<span class=\"hljs-literal\">true</span>).to.be.equal(<span class=\"hljs-literal\">true</span>);<br>\t\tdone();",
                "isRoot": false,
                "uuid": "34fae4b3-8c4f-486e-90ed-f0a3ef9cd3cc",
                "parentUUID": "1dd8407f-c213-4d24-bbb4-98c99841b294",
                "skipped": false
              },
              {
                "title": "should test all logging routines",
                "fullTitle": "Messenger (Console / Logger) for Browser and Server, including `gulp` pipeline support should test all logging routines",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect(<span class=\"hljs-literal\">true</span>).to.be.equal(<span class=\"hljs-literal\">true</span>);<br>done();",
                "isRoot": false,
                "uuid": "0954a84e-38e0-449e-9fa6-329a722b3677",
                "parentUUID": "1dd8407f-c213-4d24-bbb4-98c99841b294",
                "skipped": false
              },
              {
                "title": "should test `gulp` methods",
                "fullTitle": "Messenger (Console / Logger) for Browser and Server, including `gulp` pipeline support should test `gulp` methods",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect(<span class=\"hljs-literal\">true</span>).to.be.equal(<span class=\"hljs-literal\">true</span>);<br>done();",
                "isRoot": false,
                "uuid": "9c4f7450-7e7f-41c9-9657-ffe87194b739",
                "parentUUID": "1dd8407f-c213-4d24-bbb4-98c99841b294",
                "skipped": false
              },
              {
                "title": "should support all optional params",
                "fullTitle": "Messenger (Console / Logger) for Browser and Server, including `gulp` pipeline support should support all optional params",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "msg.Info(chalk.magenta(<span class=\"hljs-string\">'Note:  These are not working correctly yet...'</span>));<br>\t\tmsg.Line(<span class=\"hljs-string\">'#'</span>);<br>\t\tmsg.Line(<span class=\"hljs-string\">'-'</span>,<span class=\"hljs-number\">40</span>);<br>\t\tdone();",
                "isRoot": false,
                "uuid": "c1a34ee0-e50d-45af-8ddf-0f8f6beea88e",
                "parentUUID": "1dd8407f-c213-4d24-bbb4-98c99841b294",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 5,
            "totalPasses": 5,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 21
          },
          "ctx": "[Circular ~.allHooks.1.ctx]",
          "_events": {},
          "timer": {
            "0": null,
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 23992211,
            "_onTimeout": null,
            "_repeat": false,
            "domain": {
              "domain": null,
              "_events": {},
              "members": []
            }
          },
          "duration": 2,
          "state": "passed",
          "speed": "fast"
        }
      },
      "_events": {},
      "duration": 0,
      "_error": null
    },
    {
      "title": "\"before each\" hook",
      "async": 0,
      "sync": true,
      "_timeout": 2000,
      "_slow": 75,
      "_enableTimeouts": true,
      "timedOut": false,
      "_trace": {},
      "type": "hook",
      "parent": {
        "title": "Messenger (Console / Logger) for Browser and Server, including `gulp` pipeline support",
        "suites": [],
        "tests": [
          {
            "title": "should interpolate string",
            "fullTitle": "Messenger (Console / Logger) for Browser and Server, including `gulp` pipeline support should interpolate string",
            "timedOut": false,
            "duration": 13,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "msg.Info(user);<br>msg.Success(<span class=\"hljs-string\">'Hello there &lt;%= fname %&gt; &lt;%= lname %&gt;:'</span>, user);<br>msg.Success(<span class=\"hljs-string\">'These are our kids &lt;%= kids %&gt;'</span>, user);<br>done();",
            "isRoot": false,
            "uuid": "27cda7ed-ff39-4c86-91ad-7f73f0c6b021",
            "parentUUID": "1dd8407f-c213-4d24-bbb4-98c99841b294",
            "skipped": false
          },
          {
            "title": "should test all messenger routines",
            "fullTitle": "Messenger (Console / Logger) for Browser and Server, including `gulp` pipeline support should test all messenger routines",
            "timedOut": false,
            "duration": 6,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "msg.Log(<span class=\"hljs-string\">'log'</span>);<br>\t\tmsg.Info(<span class=\"hljs-string\">'info'</span>);<br>\t\tmsg.Error(<span class=\"hljs-string\">'error'</span>);<br>\t\tmsg.Success(<span class=\"hljs-string\">'success'</span>);<br>\t\tmsg.Warning(<span class=\"hljs-string\">'warning'</span>);<br>\t\tmsg.Warn(<span class=\"hljs-string\">\"using `warn` shorthand\"</span>);<br>\t\tmsg.Note(chalk.gray(<span class=\"hljs-string\">'note, color supplied by `Chalk` instance'</span>));<br>\t\tmsg.Time(<span class=\"hljs-string\">'time'</span>);<br>\t\tmsg.Debug(<span class=\"hljs-string\">'debug'</span>);<br>\t\tmsg.Header(<span class=\"hljs-string\">'This should be underline'</span>);<br>\t\tmsg.Log(chalk.red.underline(<span class=\"hljs-string\">'You can perform any text customization with simple log and `chalk` library'</span>));<br>\t\tmsg.Info(<span class=\"hljs-string\">'*'</span>,<span class=\"hljs-string\">'Bordered Output'</span>,<span class=\"hljs-string\">'='</span>);<br>\t\tmsg.Warning(<span class=\"hljs-string\">'Testing interpolation by &lt;%=fname %&gt; &lt;%=lname %&gt;'</span>, {fname: <span class=\"hljs-string\">'Mike'</span>, lname: <span class=\"hljs-string\">'Erickson'</span>});<br>\t\tmsg.Info({fname: <span class=\"hljs-string\">'Mike'</span>, lname: <span class=\"hljs-string\">'Erickson'</span>});<br>\t\tmsg.Line();<br>\t\texpect(<span class=\"hljs-literal\">true</span>).to.be.equal(<span class=\"hljs-literal\">true</span>);<br>\t\tdone();",
            "isRoot": false,
            "uuid": "34fae4b3-8c4f-486e-90ed-f0a3ef9cd3cc",
            "parentUUID": "1dd8407f-c213-4d24-bbb4-98c99841b294",
            "skipped": false
          },
          {
            "title": "should test all logging routines",
            "fullTitle": "Messenger (Console / Logger) for Browser and Server, including `gulp` pipeline support should test all logging routines",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(<span class=\"hljs-literal\">true</span>).to.be.equal(<span class=\"hljs-literal\">true</span>);<br>done();",
            "isRoot": false,
            "uuid": "0954a84e-38e0-449e-9fa6-329a722b3677",
            "parentUUID": "1dd8407f-c213-4d24-bbb4-98c99841b294",
            "skipped": false
          },
          {
            "title": "should test `gulp` methods",
            "fullTitle": "Messenger (Console / Logger) for Browser and Server, including `gulp` pipeline support should test `gulp` methods",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(<span class=\"hljs-literal\">true</span>).to.be.equal(<span class=\"hljs-literal\">true</span>);<br>done();",
            "isRoot": false,
            "uuid": "9c4f7450-7e7f-41c9-9657-ffe87194b739",
            "parentUUID": "1dd8407f-c213-4d24-bbb4-98c99841b294",
            "skipped": false
          },
          {
            "title": "should support all optional params",
            "fullTitle": "Messenger (Console / Logger) for Browser and Server, including `gulp` pipeline support should support all optional params",
            "timedOut": false,
            "duration": 2,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "msg.Info(chalk.magenta(<span class=\"hljs-string\">'Note:  These are not working correctly yet...'</span>));<br>\t\tmsg.Line(<span class=\"hljs-string\">'#'</span>);<br>\t\tmsg.Line(<span class=\"hljs-string\">'-'</span>,<span class=\"hljs-number\">40</span>);<br>\t\tdone();",
            "isRoot": false,
            "uuid": "c1a34ee0-e50d-45af-8ddf-0f8f6beea88e",
            "parentUUID": "1dd8407f-c213-4d24-bbb4-98c99841b294",
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/spec/MessengerSpec.js",
        "uuid": "1dd8407f-c213-4d24-bbb4-98c99841b294",
        "fullFile": "/Users/mikee/Documents/Projects/gulp-messenger/spec/MessengerSpec.js",
        "passes": [
          {
            "title": "should interpolate string",
            "fullTitle": "Messenger (Console / Logger) for Browser and Server, including `gulp` pipeline support should interpolate string",
            "timedOut": false,
            "duration": 13,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "msg.Info(user);<br>msg.Success(<span class=\"hljs-string\">'Hello there &lt;%= fname %&gt; &lt;%= lname %&gt;:'</span>, user);<br>msg.Success(<span class=\"hljs-string\">'These are our kids &lt;%= kids %&gt;'</span>, user);<br>done();",
            "isRoot": false,
            "uuid": "27cda7ed-ff39-4c86-91ad-7f73f0c6b021",
            "parentUUID": "1dd8407f-c213-4d24-bbb4-98c99841b294",
            "skipped": false
          },
          {
            "title": "should test all messenger routines",
            "fullTitle": "Messenger (Console / Logger) for Browser and Server, including `gulp` pipeline support should test all messenger routines",
            "timedOut": false,
            "duration": 6,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "msg.Log(<span class=\"hljs-string\">'log'</span>);<br>\t\tmsg.Info(<span class=\"hljs-string\">'info'</span>);<br>\t\tmsg.Error(<span class=\"hljs-string\">'error'</span>);<br>\t\tmsg.Success(<span class=\"hljs-string\">'success'</span>);<br>\t\tmsg.Warning(<span class=\"hljs-string\">'warning'</span>);<br>\t\tmsg.Warn(<span class=\"hljs-string\">\"using `warn` shorthand\"</span>);<br>\t\tmsg.Note(chalk.gray(<span class=\"hljs-string\">'note, color supplied by `Chalk` instance'</span>));<br>\t\tmsg.Time(<span class=\"hljs-string\">'time'</span>);<br>\t\tmsg.Debug(<span class=\"hljs-string\">'debug'</span>);<br>\t\tmsg.Header(<span class=\"hljs-string\">'This should be underline'</span>);<br>\t\tmsg.Log(chalk.red.underline(<span class=\"hljs-string\">'You can perform any text customization with simple log and `chalk` library'</span>));<br>\t\tmsg.Info(<span class=\"hljs-string\">'*'</span>,<span class=\"hljs-string\">'Bordered Output'</span>,<span class=\"hljs-string\">'='</span>);<br>\t\tmsg.Warning(<span class=\"hljs-string\">'Testing interpolation by &lt;%=fname %&gt; &lt;%=lname %&gt;'</span>, {fname: <span class=\"hljs-string\">'Mike'</span>, lname: <span class=\"hljs-string\">'Erickson'</span>});<br>\t\tmsg.Info({fname: <span class=\"hljs-string\">'Mike'</span>, lname: <span class=\"hljs-string\">'Erickson'</span>});<br>\t\tmsg.Line();<br>\t\texpect(<span class=\"hljs-literal\">true</span>).to.be.equal(<span class=\"hljs-literal\">true</span>);<br>\t\tdone();",
            "isRoot": false,
            "uuid": "34fae4b3-8c4f-486e-90ed-f0a3ef9cd3cc",
            "parentUUID": "1dd8407f-c213-4d24-bbb4-98c99841b294",
            "skipped": false
          },
          {
            "title": "should test all logging routines",
            "fullTitle": "Messenger (Console / Logger) for Browser and Server, including `gulp` pipeline support should test all logging routines",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(<span class=\"hljs-literal\">true</span>).to.be.equal(<span class=\"hljs-literal\">true</span>);<br>done();",
            "isRoot": false,
            "uuid": "0954a84e-38e0-449e-9fa6-329a722b3677",
            "parentUUID": "1dd8407f-c213-4d24-bbb4-98c99841b294",
            "skipped": false
          },
          {
            "title": "should test `gulp` methods",
            "fullTitle": "Messenger (Console / Logger) for Browser and Server, including `gulp` pipeline support should test `gulp` methods",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(<span class=\"hljs-literal\">true</span>).to.be.equal(<span class=\"hljs-literal\">true</span>);<br>done();",
            "isRoot": false,
            "uuid": "9c4f7450-7e7f-41c9-9657-ffe87194b739",
            "parentUUID": "1dd8407f-c213-4d24-bbb4-98c99841b294",
            "skipped": false
          },
          {
            "title": "should support all optional params",
            "fullTitle": "Messenger (Console / Logger) for Browser and Server, including `gulp` pipeline support should support all optional params",
            "timedOut": false,
            "duration": 2,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "msg.Info(chalk.magenta(<span class=\"hljs-string\">'Note:  These are not working correctly yet...'</span>));<br>\t\tmsg.Line(<span class=\"hljs-string\">'#'</span>);<br>\t\tmsg.Line(<span class=\"hljs-string\">'-'</span>,<span class=\"hljs-number\">40</span>);<br>\t\tdone();",
            "isRoot": false,
            "uuid": "c1a34ee0-e50d-45af-8ddf-0f8f6beea88e",
            "parentUUID": "1dd8407f-c213-4d24-bbb4-98c99841b294",
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 5,
        "totalPasses": 5,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 21
      },
      "ctx": {
        "_runnable": {
          "title": "should support all optional params",
          "async": 1,
          "sync": false,
          "_timeout": 2000,
          "_slow": 75,
          "_enableTimeouts": true,
          "timedOut": false,
          "_trace": {},
          "pending": false,
          "type": "test",
          "file": "/Users/mikee/Documents/Projects/gulp-messenger/spec/MessengerSpec.js",
          "parent": {
            "title": "Messenger (Console / Logger) for Browser and Server, including `gulp` pipeline support",
            "suites": [],
            "tests": [
              {
                "title": "should interpolate string",
                "fullTitle": "Messenger (Console / Logger) for Browser and Server, including `gulp` pipeline support should interpolate string",
                "timedOut": false,
                "duration": 13,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "msg.Info(user);<br>msg.Success(<span class=\"hljs-string\">'Hello there &lt;%= fname %&gt; &lt;%= lname %&gt;:'</span>, user);<br>msg.Success(<span class=\"hljs-string\">'These are our kids &lt;%= kids %&gt;'</span>, user);<br>done();",
                "isRoot": false,
                "uuid": "27cda7ed-ff39-4c86-91ad-7f73f0c6b021",
                "parentUUID": "1dd8407f-c213-4d24-bbb4-98c99841b294",
                "skipped": false
              },
              {
                "title": "should test all messenger routines",
                "fullTitle": "Messenger (Console / Logger) for Browser and Server, including `gulp` pipeline support should test all messenger routines",
                "timedOut": false,
                "duration": 6,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "msg.Log(<span class=\"hljs-string\">'log'</span>);<br>\t\tmsg.Info(<span class=\"hljs-string\">'info'</span>);<br>\t\tmsg.Error(<span class=\"hljs-string\">'error'</span>);<br>\t\tmsg.Success(<span class=\"hljs-string\">'success'</span>);<br>\t\tmsg.Warning(<span class=\"hljs-string\">'warning'</span>);<br>\t\tmsg.Warn(<span class=\"hljs-string\">\"using `warn` shorthand\"</span>);<br>\t\tmsg.Note(chalk.gray(<span class=\"hljs-string\">'note, color supplied by `Chalk` instance'</span>));<br>\t\tmsg.Time(<span class=\"hljs-string\">'time'</span>);<br>\t\tmsg.Debug(<span class=\"hljs-string\">'debug'</span>);<br>\t\tmsg.Header(<span class=\"hljs-string\">'This should be underline'</span>);<br>\t\tmsg.Log(chalk.red.underline(<span class=\"hljs-string\">'You can perform any text customization with simple log and `chalk` library'</span>));<br>\t\tmsg.Info(<span class=\"hljs-string\">'*'</span>,<span class=\"hljs-string\">'Bordered Output'</span>,<span class=\"hljs-string\">'='</span>);<br>\t\tmsg.Warning(<span class=\"hljs-string\">'Testing interpolation by &lt;%=fname %&gt; &lt;%=lname %&gt;'</span>, {fname: <span class=\"hljs-string\">'Mike'</span>, lname: <span class=\"hljs-string\">'Erickson'</span>});<br>\t\tmsg.Info({fname: <span class=\"hljs-string\">'Mike'</span>, lname: <span class=\"hljs-string\">'Erickson'</span>});<br>\t\tmsg.Line();<br>\t\texpect(<span class=\"hljs-literal\">true</span>).to.be.equal(<span class=\"hljs-literal\">true</span>);<br>\t\tdone();",
                "isRoot": false,
                "uuid": "34fae4b3-8c4f-486e-90ed-f0a3ef9cd3cc",
                "parentUUID": "1dd8407f-c213-4d24-bbb4-98c99841b294",
                "skipped": false
              },
              {
                "title": "should test all logging routines",
                "fullTitle": "Messenger (Console / Logger) for Browser and Server, including `gulp` pipeline support should test all logging routines",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect(<span class=\"hljs-literal\">true</span>).to.be.equal(<span class=\"hljs-literal\">true</span>);<br>done();",
                "isRoot": false,
                "uuid": "0954a84e-38e0-449e-9fa6-329a722b3677",
                "parentUUID": "1dd8407f-c213-4d24-bbb4-98c99841b294",
                "skipped": false
              },
              {
                "title": "should test `gulp` methods",
                "fullTitle": "Messenger (Console / Logger) for Browser and Server, including `gulp` pipeline support should test `gulp` methods",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect(<span class=\"hljs-literal\">true</span>).to.be.equal(<span class=\"hljs-literal\">true</span>);<br>done();",
                "isRoot": false,
                "uuid": "9c4f7450-7e7f-41c9-9657-ffe87194b739",
                "parentUUID": "1dd8407f-c213-4d24-bbb4-98c99841b294",
                "skipped": false
              },
              {
                "title": "should support all optional params",
                "fullTitle": "Messenger (Console / Logger) for Browser and Server, including `gulp` pipeline support should support all optional params",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "msg.Info(chalk.magenta(<span class=\"hljs-string\">'Note:  These are not working correctly yet...'</span>));<br>\t\tmsg.Line(<span class=\"hljs-string\">'#'</span>);<br>\t\tmsg.Line(<span class=\"hljs-string\">'-'</span>,<span class=\"hljs-number\">40</span>);<br>\t\tdone();",
                "isRoot": false,
                "uuid": "c1a34ee0-e50d-45af-8ddf-0f8f6beea88e",
                "parentUUID": "1dd8407f-c213-4d24-bbb4-98c99841b294",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/spec/MessengerSpec.js",
            "uuid": "1dd8407f-c213-4d24-bbb4-98c99841b294",
            "fullFile": "/Users/mikee/Documents/Projects/gulp-messenger/spec/MessengerSpec.js",
            "passes": [
              {
                "title": "should interpolate string",
                "fullTitle": "Messenger (Console / Logger) for Browser and Server, including `gulp` pipeline support should interpolate string",
                "timedOut": false,
                "duration": 13,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "msg.Info(user);<br>msg.Success(<span class=\"hljs-string\">'Hello there &lt;%= fname %&gt; &lt;%= lname %&gt;:'</span>, user);<br>msg.Success(<span class=\"hljs-string\">'These are our kids &lt;%= kids %&gt;'</span>, user);<br>done();",
                "isRoot": false,
                "uuid": "27cda7ed-ff39-4c86-91ad-7f73f0c6b021",
                "parentUUID": "1dd8407f-c213-4d24-bbb4-98c99841b294",
                "skipped": false
              },
              {
                "title": "should test all messenger routines",
                "fullTitle": "Messenger (Console / Logger) for Browser and Server, including `gulp` pipeline support should test all messenger routines",
                "timedOut": false,
                "duration": 6,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "msg.Log(<span class=\"hljs-string\">'log'</span>);<br>\t\tmsg.Info(<span class=\"hljs-string\">'info'</span>);<br>\t\tmsg.Error(<span class=\"hljs-string\">'error'</span>);<br>\t\tmsg.Success(<span class=\"hljs-string\">'success'</span>);<br>\t\tmsg.Warning(<span class=\"hljs-string\">'warning'</span>);<br>\t\tmsg.Warn(<span class=\"hljs-string\">\"using `warn` shorthand\"</span>);<br>\t\tmsg.Note(chalk.gray(<span class=\"hljs-string\">'note, color supplied by `Chalk` instance'</span>));<br>\t\tmsg.Time(<span class=\"hljs-string\">'time'</span>);<br>\t\tmsg.Debug(<span class=\"hljs-string\">'debug'</span>);<br>\t\tmsg.Header(<span class=\"hljs-string\">'This should be underline'</span>);<br>\t\tmsg.Log(chalk.red.underline(<span class=\"hljs-string\">'You can perform any text customization with simple log and `chalk` library'</span>));<br>\t\tmsg.Info(<span class=\"hljs-string\">'*'</span>,<span class=\"hljs-string\">'Bordered Output'</span>,<span class=\"hljs-string\">'='</span>);<br>\t\tmsg.Warning(<span class=\"hljs-string\">'Testing interpolation by &lt;%=fname %&gt; &lt;%=lname %&gt;'</span>, {fname: <span class=\"hljs-string\">'Mike'</span>, lname: <span class=\"hljs-string\">'Erickson'</span>});<br>\t\tmsg.Info({fname: <span class=\"hljs-string\">'Mike'</span>, lname: <span class=\"hljs-string\">'Erickson'</span>});<br>\t\tmsg.Line();<br>\t\texpect(<span class=\"hljs-literal\">true</span>).to.be.equal(<span class=\"hljs-literal\">true</span>);<br>\t\tdone();",
                "isRoot": false,
                "uuid": "34fae4b3-8c4f-486e-90ed-f0a3ef9cd3cc",
                "parentUUID": "1dd8407f-c213-4d24-bbb4-98c99841b294",
                "skipped": false
              },
              {
                "title": "should test all logging routines",
                "fullTitle": "Messenger (Console / Logger) for Browser and Server, including `gulp` pipeline support should test all logging routines",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect(<span class=\"hljs-literal\">true</span>).to.be.equal(<span class=\"hljs-literal\">true</span>);<br>done();",
                "isRoot": false,
                "uuid": "0954a84e-38e0-449e-9fa6-329a722b3677",
                "parentUUID": "1dd8407f-c213-4d24-bbb4-98c99841b294",
                "skipped": false
              },
              {
                "title": "should test `gulp` methods",
                "fullTitle": "Messenger (Console / Logger) for Browser and Server, including `gulp` pipeline support should test `gulp` methods",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect(<span class=\"hljs-literal\">true</span>).to.be.equal(<span class=\"hljs-literal\">true</span>);<br>done();",
                "isRoot": false,
                "uuid": "9c4f7450-7e7f-41c9-9657-ffe87194b739",
                "parentUUID": "1dd8407f-c213-4d24-bbb4-98c99841b294",
                "skipped": false
              },
              {
                "title": "should support all optional params",
                "fullTitle": "Messenger (Console / Logger) for Browser and Server, including `gulp` pipeline support should support all optional params",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "msg.Info(chalk.magenta(<span class=\"hljs-string\">'Note:  These are not working correctly yet...'</span>));<br>\t\tmsg.Line(<span class=\"hljs-string\">'#'</span>);<br>\t\tmsg.Line(<span class=\"hljs-string\">'-'</span>,<span class=\"hljs-number\">40</span>);<br>\t\tdone();",
                "isRoot": false,
                "uuid": "c1a34ee0-e50d-45af-8ddf-0f8f6beea88e",
                "parentUUID": "1dd8407f-c213-4d24-bbb4-98c99841b294",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 5,
            "totalPasses": 5,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 21
          },
          "ctx": "[Circular ~.allHooks.2.ctx]",
          "_events": {},
          "timer": {
            "0": null,
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 23992211,
            "_onTimeout": null,
            "_repeat": false,
            "domain": {
              "domain": null,
              "_events": {},
              "members": []
            }
          },
          "duration": 2,
          "state": "passed",
          "speed": "fast"
        },
        "test": {
          "title": "should support all optional params",
          "async": 1,
          "sync": false,
          "_timeout": 2000,
          "_slow": 75,
          "_enableTimeouts": true,
          "timedOut": false,
          "_trace": {},
          "pending": false,
          "type": "test",
          "file": "/Users/mikee/Documents/Projects/gulp-messenger/spec/MessengerSpec.js",
          "parent": {
            "title": "Messenger (Console / Logger) for Browser and Server, including `gulp` pipeline support",
            "suites": [],
            "tests": [
              {
                "title": "should interpolate string",
                "fullTitle": "Messenger (Console / Logger) for Browser and Server, including `gulp` pipeline support should interpolate string",
                "timedOut": false,
                "duration": 13,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "msg.Info(user);<br>msg.Success(<span class=\"hljs-string\">'Hello there &lt;%= fname %&gt; &lt;%= lname %&gt;:'</span>, user);<br>msg.Success(<span class=\"hljs-string\">'These are our kids &lt;%= kids %&gt;'</span>, user);<br>done();",
                "isRoot": false,
                "uuid": "27cda7ed-ff39-4c86-91ad-7f73f0c6b021",
                "parentUUID": "1dd8407f-c213-4d24-bbb4-98c99841b294",
                "skipped": false
              },
              {
                "title": "should test all messenger routines",
                "fullTitle": "Messenger (Console / Logger) for Browser and Server, including `gulp` pipeline support should test all messenger routines",
                "timedOut": false,
                "duration": 6,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "msg.Log(<span class=\"hljs-string\">'log'</span>);<br>\t\tmsg.Info(<span class=\"hljs-string\">'info'</span>);<br>\t\tmsg.Error(<span class=\"hljs-string\">'error'</span>);<br>\t\tmsg.Success(<span class=\"hljs-string\">'success'</span>);<br>\t\tmsg.Warning(<span class=\"hljs-string\">'warning'</span>);<br>\t\tmsg.Warn(<span class=\"hljs-string\">\"using `warn` shorthand\"</span>);<br>\t\tmsg.Note(chalk.gray(<span class=\"hljs-string\">'note, color supplied by `Chalk` instance'</span>));<br>\t\tmsg.Time(<span class=\"hljs-string\">'time'</span>);<br>\t\tmsg.Debug(<span class=\"hljs-string\">'debug'</span>);<br>\t\tmsg.Header(<span class=\"hljs-string\">'This should be underline'</span>);<br>\t\tmsg.Log(chalk.red.underline(<span class=\"hljs-string\">'You can perform any text customization with simple log and `chalk` library'</span>));<br>\t\tmsg.Info(<span class=\"hljs-string\">'*'</span>,<span class=\"hljs-string\">'Bordered Output'</span>,<span class=\"hljs-string\">'='</span>);<br>\t\tmsg.Warning(<span class=\"hljs-string\">'Testing interpolation by &lt;%=fname %&gt; &lt;%=lname %&gt;'</span>, {fname: <span class=\"hljs-string\">'Mike'</span>, lname: <span class=\"hljs-string\">'Erickson'</span>});<br>\t\tmsg.Info({fname: <span class=\"hljs-string\">'Mike'</span>, lname: <span class=\"hljs-string\">'Erickson'</span>});<br>\t\tmsg.Line();<br>\t\texpect(<span class=\"hljs-literal\">true</span>).to.be.equal(<span class=\"hljs-literal\">true</span>);<br>\t\tdone();",
                "isRoot": false,
                "uuid": "34fae4b3-8c4f-486e-90ed-f0a3ef9cd3cc",
                "parentUUID": "1dd8407f-c213-4d24-bbb4-98c99841b294",
                "skipped": false
              },
              {
                "title": "should test all logging routines",
                "fullTitle": "Messenger (Console / Logger) for Browser and Server, including `gulp` pipeline support should test all logging routines",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect(<span class=\"hljs-literal\">true</span>).to.be.equal(<span class=\"hljs-literal\">true</span>);<br>done();",
                "isRoot": false,
                "uuid": "0954a84e-38e0-449e-9fa6-329a722b3677",
                "parentUUID": "1dd8407f-c213-4d24-bbb4-98c99841b294",
                "skipped": false
              },
              {
                "title": "should test `gulp` methods",
                "fullTitle": "Messenger (Console / Logger) for Browser and Server, including `gulp` pipeline support should test `gulp` methods",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect(<span class=\"hljs-literal\">true</span>).to.be.equal(<span class=\"hljs-literal\">true</span>);<br>done();",
                "isRoot": false,
                "uuid": "9c4f7450-7e7f-41c9-9657-ffe87194b739",
                "parentUUID": "1dd8407f-c213-4d24-bbb4-98c99841b294",
                "skipped": false
              },
              {
                "title": "should support all optional params",
                "fullTitle": "Messenger (Console / Logger) for Browser and Server, including `gulp` pipeline support should support all optional params",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "msg.Info(chalk.magenta(<span class=\"hljs-string\">'Note:  These are not working correctly yet...'</span>));<br>\t\tmsg.Line(<span class=\"hljs-string\">'#'</span>);<br>\t\tmsg.Line(<span class=\"hljs-string\">'-'</span>,<span class=\"hljs-number\">40</span>);<br>\t\tdone();",
                "isRoot": false,
                "uuid": "c1a34ee0-e50d-45af-8ddf-0f8f6beea88e",
                "parentUUID": "1dd8407f-c213-4d24-bbb4-98c99841b294",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/spec/MessengerSpec.js",
            "uuid": "1dd8407f-c213-4d24-bbb4-98c99841b294",
            "fullFile": "/Users/mikee/Documents/Projects/gulp-messenger/spec/MessengerSpec.js",
            "passes": [
              {
                "title": "should interpolate string",
                "fullTitle": "Messenger (Console / Logger) for Browser and Server, including `gulp` pipeline support should interpolate string",
                "timedOut": false,
                "duration": 13,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "msg.Info(user);<br>msg.Success(<span class=\"hljs-string\">'Hello there &lt;%= fname %&gt; &lt;%= lname %&gt;:'</span>, user);<br>msg.Success(<span class=\"hljs-string\">'These are our kids &lt;%= kids %&gt;'</span>, user);<br>done();",
                "isRoot": false,
                "uuid": "27cda7ed-ff39-4c86-91ad-7f73f0c6b021",
                "parentUUID": "1dd8407f-c213-4d24-bbb4-98c99841b294",
                "skipped": false
              },
              {
                "title": "should test all messenger routines",
                "fullTitle": "Messenger (Console / Logger) for Browser and Server, including `gulp` pipeline support should test all messenger routines",
                "timedOut": false,
                "duration": 6,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "msg.Log(<span class=\"hljs-string\">'log'</span>);<br>\t\tmsg.Info(<span class=\"hljs-string\">'info'</span>);<br>\t\tmsg.Error(<span class=\"hljs-string\">'error'</span>);<br>\t\tmsg.Success(<span class=\"hljs-string\">'success'</span>);<br>\t\tmsg.Warning(<span class=\"hljs-string\">'warning'</span>);<br>\t\tmsg.Warn(<span class=\"hljs-string\">\"using `warn` shorthand\"</span>);<br>\t\tmsg.Note(chalk.gray(<span class=\"hljs-string\">'note, color supplied by `Chalk` instance'</span>));<br>\t\tmsg.Time(<span class=\"hljs-string\">'time'</span>);<br>\t\tmsg.Debug(<span class=\"hljs-string\">'debug'</span>);<br>\t\tmsg.Header(<span class=\"hljs-string\">'This should be underline'</span>);<br>\t\tmsg.Log(chalk.red.underline(<span class=\"hljs-string\">'You can perform any text customization with simple log and `chalk` library'</span>));<br>\t\tmsg.Info(<span class=\"hljs-string\">'*'</span>,<span class=\"hljs-string\">'Bordered Output'</span>,<span class=\"hljs-string\">'='</span>);<br>\t\tmsg.Warning(<span class=\"hljs-string\">'Testing interpolation by &lt;%=fname %&gt; &lt;%=lname %&gt;'</span>, {fname: <span class=\"hljs-string\">'Mike'</span>, lname: <span class=\"hljs-string\">'Erickson'</span>});<br>\t\tmsg.Info({fname: <span class=\"hljs-string\">'Mike'</span>, lname: <span class=\"hljs-string\">'Erickson'</span>});<br>\t\tmsg.Line();<br>\t\texpect(<span class=\"hljs-literal\">true</span>).to.be.equal(<span class=\"hljs-literal\">true</span>);<br>\t\tdone();",
                "isRoot": false,
                "uuid": "34fae4b3-8c4f-486e-90ed-f0a3ef9cd3cc",
                "parentUUID": "1dd8407f-c213-4d24-bbb4-98c99841b294",
                "skipped": false
              },
              {
                "title": "should test all logging routines",
                "fullTitle": "Messenger (Console / Logger) for Browser and Server, including `gulp` pipeline support should test all logging routines",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect(<span class=\"hljs-literal\">true</span>).to.be.equal(<span class=\"hljs-literal\">true</span>);<br>done();",
                "isRoot": false,
                "uuid": "0954a84e-38e0-449e-9fa6-329a722b3677",
                "parentUUID": "1dd8407f-c213-4d24-bbb4-98c99841b294",
                "skipped": false
              },
              {
                "title": "should test `gulp` methods",
                "fullTitle": "Messenger (Console / Logger) for Browser and Server, including `gulp` pipeline support should test `gulp` methods",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect(<span class=\"hljs-literal\">true</span>).to.be.equal(<span class=\"hljs-literal\">true</span>);<br>done();",
                "isRoot": false,
                "uuid": "9c4f7450-7e7f-41c9-9657-ffe87194b739",
                "parentUUID": "1dd8407f-c213-4d24-bbb4-98c99841b294",
                "skipped": false
              },
              {
                "title": "should support all optional params",
                "fullTitle": "Messenger (Console / Logger) for Browser and Server, including `gulp` pipeline support should support all optional params",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "msg.Info(chalk.magenta(<span class=\"hljs-string\">'Note:  These are not working correctly yet...'</span>));<br>\t\tmsg.Line(<span class=\"hljs-string\">'#'</span>);<br>\t\tmsg.Line(<span class=\"hljs-string\">'-'</span>,<span class=\"hljs-number\">40</span>);<br>\t\tdone();",
                "isRoot": false,
                "uuid": "c1a34ee0-e50d-45af-8ddf-0f8f6beea88e",
                "parentUUID": "1dd8407f-c213-4d24-bbb4-98c99841b294",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 5,
            "totalPasses": 5,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 21
          },
          "ctx": "[Circular ~.allHooks.2.ctx]",
          "_events": {},
          "timer": {
            "0": null,
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 23992211,
            "_onTimeout": null,
            "_repeat": false,
            "domain": {
              "domain": null,
              "_events": {},
              "members": []
            }
          },
          "duration": 2,
          "state": "passed",
          "speed": "fast"
        }
      },
      "_events": {},
      "duration": 0,
      "_error": null
    },
    {
      "title": "\"before each\" hook",
      "async": 0,
      "sync": true,
      "_timeout": 2000,
      "_slow": 75,
      "_enableTimeouts": true,
      "timedOut": false,
      "_trace": {},
      "type": "hook",
      "parent": {
        "title": "Messenger (Console / Logger) for Browser and Server, including `gulp` pipeline support",
        "suites": [],
        "tests": [
          {
            "title": "should interpolate string",
            "fullTitle": "Messenger (Console / Logger) for Browser and Server, including `gulp` pipeline support should interpolate string",
            "timedOut": false,
            "duration": 13,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "msg.Info(user);<br>msg.Success(<span class=\"hljs-string\">'Hello there &lt;%= fname %&gt; &lt;%= lname %&gt;:'</span>, user);<br>msg.Success(<span class=\"hljs-string\">'These are our kids &lt;%= kids %&gt;'</span>, user);<br>done();",
            "isRoot": false,
            "uuid": "27cda7ed-ff39-4c86-91ad-7f73f0c6b021",
            "parentUUID": "1dd8407f-c213-4d24-bbb4-98c99841b294",
            "skipped": false
          },
          {
            "title": "should test all messenger routines",
            "fullTitle": "Messenger (Console / Logger) for Browser and Server, including `gulp` pipeline support should test all messenger routines",
            "timedOut": false,
            "duration": 6,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "msg.Log(<span class=\"hljs-string\">'log'</span>);<br>\t\tmsg.Info(<span class=\"hljs-string\">'info'</span>);<br>\t\tmsg.Error(<span class=\"hljs-string\">'error'</span>);<br>\t\tmsg.Success(<span class=\"hljs-string\">'success'</span>);<br>\t\tmsg.Warning(<span class=\"hljs-string\">'warning'</span>);<br>\t\tmsg.Warn(<span class=\"hljs-string\">\"using `warn` shorthand\"</span>);<br>\t\tmsg.Note(chalk.gray(<span class=\"hljs-string\">'note, color supplied by `Chalk` instance'</span>));<br>\t\tmsg.Time(<span class=\"hljs-string\">'time'</span>);<br>\t\tmsg.Debug(<span class=\"hljs-string\">'debug'</span>);<br>\t\tmsg.Header(<span class=\"hljs-string\">'This should be underline'</span>);<br>\t\tmsg.Log(chalk.red.underline(<span class=\"hljs-string\">'You can perform any text customization with simple log and `chalk` library'</span>));<br>\t\tmsg.Info(<span class=\"hljs-string\">'*'</span>,<span class=\"hljs-string\">'Bordered Output'</span>,<span class=\"hljs-string\">'='</span>);<br>\t\tmsg.Warning(<span class=\"hljs-string\">'Testing interpolation by &lt;%=fname %&gt; &lt;%=lname %&gt;'</span>, {fname: <span class=\"hljs-string\">'Mike'</span>, lname: <span class=\"hljs-string\">'Erickson'</span>});<br>\t\tmsg.Info({fname: <span class=\"hljs-string\">'Mike'</span>, lname: <span class=\"hljs-string\">'Erickson'</span>});<br>\t\tmsg.Line();<br>\t\texpect(<span class=\"hljs-literal\">true</span>).to.be.equal(<span class=\"hljs-literal\">true</span>);<br>\t\tdone();",
            "isRoot": false,
            "uuid": "34fae4b3-8c4f-486e-90ed-f0a3ef9cd3cc",
            "parentUUID": "1dd8407f-c213-4d24-bbb4-98c99841b294",
            "skipped": false
          },
          {
            "title": "should test all logging routines",
            "fullTitle": "Messenger (Console / Logger) for Browser and Server, including `gulp` pipeline support should test all logging routines",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(<span class=\"hljs-literal\">true</span>).to.be.equal(<span class=\"hljs-literal\">true</span>);<br>done();",
            "isRoot": false,
            "uuid": "0954a84e-38e0-449e-9fa6-329a722b3677",
            "parentUUID": "1dd8407f-c213-4d24-bbb4-98c99841b294",
            "skipped": false
          },
          {
            "title": "should test `gulp` methods",
            "fullTitle": "Messenger (Console / Logger) for Browser and Server, including `gulp` pipeline support should test `gulp` methods",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(<span class=\"hljs-literal\">true</span>).to.be.equal(<span class=\"hljs-literal\">true</span>);<br>done();",
            "isRoot": false,
            "uuid": "9c4f7450-7e7f-41c9-9657-ffe87194b739",
            "parentUUID": "1dd8407f-c213-4d24-bbb4-98c99841b294",
            "skipped": false
          },
          {
            "title": "should support all optional params",
            "fullTitle": "Messenger (Console / Logger) for Browser and Server, including `gulp` pipeline support should support all optional params",
            "timedOut": false,
            "duration": 2,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "msg.Info(chalk.magenta(<span class=\"hljs-string\">'Note:  These are not working correctly yet...'</span>));<br>\t\tmsg.Line(<span class=\"hljs-string\">'#'</span>);<br>\t\tmsg.Line(<span class=\"hljs-string\">'-'</span>,<span class=\"hljs-number\">40</span>);<br>\t\tdone();",
            "isRoot": false,
            "uuid": "c1a34ee0-e50d-45af-8ddf-0f8f6beea88e",
            "parentUUID": "1dd8407f-c213-4d24-bbb4-98c99841b294",
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/spec/MessengerSpec.js",
        "uuid": "1dd8407f-c213-4d24-bbb4-98c99841b294",
        "fullFile": "/Users/mikee/Documents/Projects/gulp-messenger/spec/MessengerSpec.js",
        "passes": [
          {
            "title": "should interpolate string",
            "fullTitle": "Messenger (Console / Logger) for Browser and Server, including `gulp` pipeline support should interpolate string",
            "timedOut": false,
            "duration": 13,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "msg.Info(user);<br>msg.Success(<span class=\"hljs-string\">'Hello there &lt;%= fname %&gt; &lt;%= lname %&gt;:'</span>, user);<br>msg.Success(<span class=\"hljs-string\">'These are our kids &lt;%= kids %&gt;'</span>, user);<br>done();",
            "isRoot": false,
            "uuid": "27cda7ed-ff39-4c86-91ad-7f73f0c6b021",
            "parentUUID": "1dd8407f-c213-4d24-bbb4-98c99841b294",
            "skipped": false
          },
          {
            "title": "should test all messenger routines",
            "fullTitle": "Messenger (Console / Logger) for Browser and Server, including `gulp` pipeline support should test all messenger routines",
            "timedOut": false,
            "duration": 6,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "msg.Log(<span class=\"hljs-string\">'log'</span>);<br>\t\tmsg.Info(<span class=\"hljs-string\">'info'</span>);<br>\t\tmsg.Error(<span class=\"hljs-string\">'error'</span>);<br>\t\tmsg.Success(<span class=\"hljs-string\">'success'</span>);<br>\t\tmsg.Warning(<span class=\"hljs-string\">'warning'</span>);<br>\t\tmsg.Warn(<span class=\"hljs-string\">\"using `warn` shorthand\"</span>);<br>\t\tmsg.Note(chalk.gray(<span class=\"hljs-string\">'note, color supplied by `Chalk` instance'</span>));<br>\t\tmsg.Time(<span class=\"hljs-string\">'time'</span>);<br>\t\tmsg.Debug(<span class=\"hljs-string\">'debug'</span>);<br>\t\tmsg.Header(<span class=\"hljs-string\">'This should be underline'</span>);<br>\t\tmsg.Log(chalk.red.underline(<span class=\"hljs-string\">'You can perform any text customization with simple log and `chalk` library'</span>));<br>\t\tmsg.Info(<span class=\"hljs-string\">'*'</span>,<span class=\"hljs-string\">'Bordered Output'</span>,<span class=\"hljs-string\">'='</span>);<br>\t\tmsg.Warning(<span class=\"hljs-string\">'Testing interpolation by &lt;%=fname %&gt; &lt;%=lname %&gt;'</span>, {fname: <span class=\"hljs-string\">'Mike'</span>, lname: <span class=\"hljs-string\">'Erickson'</span>});<br>\t\tmsg.Info({fname: <span class=\"hljs-string\">'Mike'</span>, lname: <span class=\"hljs-string\">'Erickson'</span>});<br>\t\tmsg.Line();<br>\t\texpect(<span class=\"hljs-literal\">true</span>).to.be.equal(<span class=\"hljs-literal\">true</span>);<br>\t\tdone();",
            "isRoot": false,
            "uuid": "34fae4b3-8c4f-486e-90ed-f0a3ef9cd3cc",
            "parentUUID": "1dd8407f-c213-4d24-bbb4-98c99841b294",
            "skipped": false
          },
          {
            "title": "should test all logging routines",
            "fullTitle": "Messenger (Console / Logger) for Browser and Server, including `gulp` pipeline support should test all logging routines",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(<span class=\"hljs-literal\">true</span>).to.be.equal(<span class=\"hljs-literal\">true</span>);<br>done();",
            "isRoot": false,
            "uuid": "0954a84e-38e0-449e-9fa6-329a722b3677",
            "parentUUID": "1dd8407f-c213-4d24-bbb4-98c99841b294",
            "skipped": false
          },
          {
            "title": "should test `gulp` methods",
            "fullTitle": "Messenger (Console / Logger) for Browser and Server, including `gulp` pipeline support should test `gulp` methods",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(<span class=\"hljs-literal\">true</span>).to.be.equal(<span class=\"hljs-literal\">true</span>);<br>done();",
            "isRoot": false,
            "uuid": "9c4f7450-7e7f-41c9-9657-ffe87194b739",
            "parentUUID": "1dd8407f-c213-4d24-bbb4-98c99841b294",
            "skipped": false
          },
          {
            "title": "should support all optional params",
            "fullTitle": "Messenger (Console / Logger) for Browser and Server, including `gulp` pipeline support should support all optional params",
            "timedOut": false,
            "duration": 2,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "msg.Info(chalk.magenta(<span class=\"hljs-string\">'Note:  These are not working correctly yet...'</span>));<br>\t\tmsg.Line(<span class=\"hljs-string\">'#'</span>);<br>\t\tmsg.Line(<span class=\"hljs-string\">'-'</span>,<span class=\"hljs-number\">40</span>);<br>\t\tdone();",
            "isRoot": false,
            "uuid": "c1a34ee0-e50d-45af-8ddf-0f8f6beea88e",
            "parentUUID": "1dd8407f-c213-4d24-bbb4-98c99841b294",
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 5,
        "totalPasses": 5,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 21
      },
      "ctx": {
        "_runnable": {
          "title": "should support all optional params",
          "async": 1,
          "sync": false,
          "_timeout": 2000,
          "_slow": 75,
          "_enableTimeouts": true,
          "timedOut": false,
          "_trace": {},
          "pending": false,
          "type": "test",
          "file": "/Users/mikee/Documents/Projects/gulp-messenger/spec/MessengerSpec.js",
          "parent": {
            "title": "Messenger (Console / Logger) for Browser and Server, including `gulp` pipeline support",
            "suites": [],
            "tests": [
              {
                "title": "should interpolate string",
                "fullTitle": "Messenger (Console / Logger) for Browser and Server, including `gulp` pipeline support should interpolate string",
                "timedOut": false,
                "duration": 13,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "msg.Info(user);<br>msg.Success(<span class=\"hljs-string\">'Hello there &lt;%= fname %&gt; &lt;%= lname %&gt;:'</span>, user);<br>msg.Success(<span class=\"hljs-string\">'These are our kids &lt;%= kids %&gt;'</span>, user);<br>done();",
                "isRoot": false,
                "uuid": "27cda7ed-ff39-4c86-91ad-7f73f0c6b021",
                "parentUUID": "1dd8407f-c213-4d24-bbb4-98c99841b294",
                "skipped": false
              },
              {
                "title": "should test all messenger routines",
                "fullTitle": "Messenger (Console / Logger) for Browser and Server, including `gulp` pipeline support should test all messenger routines",
                "timedOut": false,
                "duration": 6,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "msg.Log(<span class=\"hljs-string\">'log'</span>);<br>\t\tmsg.Info(<span class=\"hljs-string\">'info'</span>);<br>\t\tmsg.Error(<span class=\"hljs-string\">'error'</span>);<br>\t\tmsg.Success(<span class=\"hljs-string\">'success'</span>);<br>\t\tmsg.Warning(<span class=\"hljs-string\">'warning'</span>);<br>\t\tmsg.Warn(<span class=\"hljs-string\">\"using `warn` shorthand\"</span>);<br>\t\tmsg.Note(chalk.gray(<span class=\"hljs-string\">'note, color supplied by `Chalk` instance'</span>));<br>\t\tmsg.Time(<span class=\"hljs-string\">'time'</span>);<br>\t\tmsg.Debug(<span class=\"hljs-string\">'debug'</span>);<br>\t\tmsg.Header(<span class=\"hljs-string\">'This should be underline'</span>);<br>\t\tmsg.Log(chalk.red.underline(<span class=\"hljs-string\">'You can perform any text customization with simple log and `chalk` library'</span>));<br>\t\tmsg.Info(<span class=\"hljs-string\">'*'</span>,<span class=\"hljs-string\">'Bordered Output'</span>,<span class=\"hljs-string\">'='</span>);<br>\t\tmsg.Warning(<span class=\"hljs-string\">'Testing interpolation by &lt;%=fname %&gt; &lt;%=lname %&gt;'</span>, {fname: <span class=\"hljs-string\">'Mike'</span>, lname: <span class=\"hljs-string\">'Erickson'</span>});<br>\t\tmsg.Info({fname: <span class=\"hljs-string\">'Mike'</span>, lname: <span class=\"hljs-string\">'Erickson'</span>});<br>\t\tmsg.Line();<br>\t\texpect(<span class=\"hljs-literal\">true</span>).to.be.equal(<span class=\"hljs-literal\">true</span>);<br>\t\tdone();",
                "isRoot": false,
                "uuid": "34fae4b3-8c4f-486e-90ed-f0a3ef9cd3cc",
                "parentUUID": "1dd8407f-c213-4d24-bbb4-98c99841b294",
                "skipped": false
              },
              {
                "title": "should test all logging routines",
                "fullTitle": "Messenger (Console / Logger) for Browser and Server, including `gulp` pipeline support should test all logging routines",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect(<span class=\"hljs-literal\">true</span>).to.be.equal(<span class=\"hljs-literal\">true</span>);<br>done();",
                "isRoot": false,
                "uuid": "0954a84e-38e0-449e-9fa6-329a722b3677",
                "parentUUID": "1dd8407f-c213-4d24-bbb4-98c99841b294",
                "skipped": false
              },
              {
                "title": "should test `gulp` methods",
                "fullTitle": "Messenger (Console / Logger) for Browser and Server, including `gulp` pipeline support should test `gulp` methods",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect(<span class=\"hljs-literal\">true</span>).to.be.equal(<span class=\"hljs-literal\">true</span>);<br>done();",
                "isRoot": false,
                "uuid": "9c4f7450-7e7f-41c9-9657-ffe87194b739",
                "parentUUID": "1dd8407f-c213-4d24-bbb4-98c99841b294",
                "skipped": false
              },
              {
                "title": "should support all optional params",
                "fullTitle": "Messenger (Console / Logger) for Browser and Server, including `gulp` pipeline support should support all optional params",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "msg.Info(chalk.magenta(<span class=\"hljs-string\">'Note:  These are not working correctly yet...'</span>));<br>\t\tmsg.Line(<span class=\"hljs-string\">'#'</span>);<br>\t\tmsg.Line(<span class=\"hljs-string\">'-'</span>,<span class=\"hljs-number\">40</span>);<br>\t\tdone();",
                "isRoot": false,
                "uuid": "c1a34ee0-e50d-45af-8ddf-0f8f6beea88e",
                "parentUUID": "1dd8407f-c213-4d24-bbb4-98c99841b294",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/spec/MessengerSpec.js",
            "uuid": "1dd8407f-c213-4d24-bbb4-98c99841b294",
            "fullFile": "/Users/mikee/Documents/Projects/gulp-messenger/spec/MessengerSpec.js",
            "passes": [
              {
                "title": "should interpolate string",
                "fullTitle": "Messenger (Console / Logger) for Browser and Server, including `gulp` pipeline support should interpolate string",
                "timedOut": false,
                "duration": 13,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "msg.Info(user);<br>msg.Success(<span class=\"hljs-string\">'Hello there &lt;%= fname %&gt; &lt;%= lname %&gt;:'</span>, user);<br>msg.Success(<span class=\"hljs-string\">'These are our kids &lt;%= kids %&gt;'</span>, user);<br>done();",
                "isRoot": false,
                "uuid": "27cda7ed-ff39-4c86-91ad-7f73f0c6b021",
                "parentUUID": "1dd8407f-c213-4d24-bbb4-98c99841b294",
                "skipped": false
              },
              {
                "title": "should test all messenger routines",
                "fullTitle": "Messenger (Console / Logger) for Browser and Server, including `gulp` pipeline support should test all messenger routines",
                "timedOut": false,
                "duration": 6,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "msg.Log(<span class=\"hljs-string\">'log'</span>);<br>\t\tmsg.Info(<span class=\"hljs-string\">'info'</span>);<br>\t\tmsg.Error(<span class=\"hljs-string\">'error'</span>);<br>\t\tmsg.Success(<span class=\"hljs-string\">'success'</span>);<br>\t\tmsg.Warning(<span class=\"hljs-string\">'warning'</span>);<br>\t\tmsg.Warn(<span class=\"hljs-string\">\"using `warn` shorthand\"</span>);<br>\t\tmsg.Note(chalk.gray(<span class=\"hljs-string\">'note, color supplied by `Chalk` instance'</span>));<br>\t\tmsg.Time(<span class=\"hljs-string\">'time'</span>);<br>\t\tmsg.Debug(<span class=\"hljs-string\">'debug'</span>);<br>\t\tmsg.Header(<span class=\"hljs-string\">'This should be underline'</span>);<br>\t\tmsg.Log(chalk.red.underline(<span class=\"hljs-string\">'You can perform any text customization with simple log and `chalk` library'</span>));<br>\t\tmsg.Info(<span class=\"hljs-string\">'*'</span>,<span class=\"hljs-string\">'Bordered Output'</span>,<span class=\"hljs-string\">'='</span>);<br>\t\tmsg.Warning(<span class=\"hljs-string\">'Testing interpolation by &lt;%=fname %&gt; &lt;%=lname %&gt;'</span>, {fname: <span class=\"hljs-string\">'Mike'</span>, lname: <span class=\"hljs-string\">'Erickson'</span>});<br>\t\tmsg.Info({fname: <span class=\"hljs-string\">'Mike'</span>, lname: <span class=\"hljs-string\">'Erickson'</span>});<br>\t\tmsg.Line();<br>\t\texpect(<span class=\"hljs-literal\">true</span>).to.be.equal(<span class=\"hljs-literal\">true</span>);<br>\t\tdone();",
                "isRoot": false,
                "uuid": "34fae4b3-8c4f-486e-90ed-f0a3ef9cd3cc",
                "parentUUID": "1dd8407f-c213-4d24-bbb4-98c99841b294",
                "skipped": false
              },
              {
                "title": "should test all logging routines",
                "fullTitle": "Messenger (Console / Logger) for Browser and Server, including `gulp` pipeline support should test all logging routines",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect(<span class=\"hljs-literal\">true</span>).to.be.equal(<span class=\"hljs-literal\">true</span>);<br>done();",
                "isRoot": false,
                "uuid": "0954a84e-38e0-449e-9fa6-329a722b3677",
                "parentUUID": "1dd8407f-c213-4d24-bbb4-98c99841b294",
                "skipped": false
              },
              {
                "title": "should test `gulp` methods",
                "fullTitle": "Messenger (Console / Logger) for Browser and Server, including `gulp` pipeline support should test `gulp` methods",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect(<span class=\"hljs-literal\">true</span>).to.be.equal(<span class=\"hljs-literal\">true</span>);<br>done();",
                "isRoot": false,
                "uuid": "9c4f7450-7e7f-41c9-9657-ffe87194b739",
                "parentUUID": "1dd8407f-c213-4d24-bbb4-98c99841b294",
                "skipped": false
              },
              {
                "title": "should support all optional params",
                "fullTitle": "Messenger (Console / Logger) for Browser and Server, including `gulp` pipeline support should support all optional params",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "msg.Info(chalk.magenta(<span class=\"hljs-string\">'Note:  These are not working correctly yet...'</span>));<br>\t\tmsg.Line(<span class=\"hljs-string\">'#'</span>);<br>\t\tmsg.Line(<span class=\"hljs-string\">'-'</span>,<span class=\"hljs-number\">40</span>);<br>\t\tdone();",
                "isRoot": false,
                "uuid": "c1a34ee0-e50d-45af-8ddf-0f8f6beea88e",
                "parentUUID": "1dd8407f-c213-4d24-bbb4-98c99841b294",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 5,
            "totalPasses": 5,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 21
          },
          "ctx": "[Circular ~.allHooks.3.ctx]",
          "_events": {},
          "timer": {
            "0": null,
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 23992211,
            "_onTimeout": null,
            "_repeat": false,
            "domain": {
              "domain": null,
              "_events": {},
              "members": []
            }
          },
          "duration": 2,
          "state": "passed",
          "speed": "fast"
        },
        "test": {
          "title": "should support all optional params",
          "async": 1,
          "sync": false,
          "_timeout": 2000,
          "_slow": 75,
          "_enableTimeouts": true,
          "timedOut": false,
          "_trace": {},
          "pending": false,
          "type": "test",
          "file": "/Users/mikee/Documents/Projects/gulp-messenger/spec/MessengerSpec.js",
          "parent": {
            "title": "Messenger (Console / Logger) for Browser and Server, including `gulp` pipeline support",
            "suites": [],
            "tests": [
              {
                "title": "should interpolate string",
                "fullTitle": "Messenger (Console / Logger) for Browser and Server, including `gulp` pipeline support should interpolate string",
                "timedOut": false,
                "duration": 13,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "msg.Info(user);<br>msg.Success(<span class=\"hljs-string\">'Hello there &lt;%= fname %&gt; &lt;%= lname %&gt;:'</span>, user);<br>msg.Success(<span class=\"hljs-string\">'These are our kids &lt;%= kids %&gt;'</span>, user);<br>done();",
                "isRoot": false,
                "uuid": "27cda7ed-ff39-4c86-91ad-7f73f0c6b021",
                "parentUUID": "1dd8407f-c213-4d24-bbb4-98c99841b294",
                "skipped": false
              },
              {
                "title": "should test all messenger routines",
                "fullTitle": "Messenger (Console / Logger) for Browser and Server, including `gulp` pipeline support should test all messenger routines",
                "timedOut": false,
                "duration": 6,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "msg.Log(<span class=\"hljs-string\">'log'</span>);<br>\t\tmsg.Info(<span class=\"hljs-string\">'info'</span>);<br>\t\tmsg.Error(<span class=\"hljs-string\">'error'</span>);<br>\t\tmsg.Success(<span class=\"hljs-string\">'success'</span>);<br>\t\tmsg.Warning(<span class=\"hljs-string\">'warning'</span>);<br>\t\tmsg.Warn(<span class=\"hljs-string\">\"using `warn` shorthand\"</span>);<br>\t\tmsg.Note(chalk.gray(<span class=\"hljs-string\">'note, color supplied by `Chalk` instance'</span>));<br>\t\tmsg.Time(<span class=\"hljs-string\">'time'</span>);<br>\t\tmsg.Debug(<span class=\"hljs-string\">'debug'</span>);<br>\t\tmsg.Header(<span class=\"hljs-string\">'This should be underline'</span>);<br>\t\tmsg.Log(chalk.red.underline(<span class=\"hljs-string\">'You can perform any text customization with simple log and `chalk` library'</span>));<br>\t\tmsg.Info(<span class=\"hljs-string\">'*'</span>,<span class=\"hljs-string\">'Bordered Output'</span>,<span class=\"hljs-string\">'='</span>);<br>\t\tmsg.Warning(<span class=\"hljs-string\">'Testing interpolation by &lt;%=fname %&gt; &lt;%=lname %&gt;'</span>, {fname: <span class=\"hljs-string\">'Mike'</span>, lname: <span class=\"hljs-string\">'Erickson'</span>});<br>\t\tmsg.Info({fname: <span class=\"hljs-string\">'Mike'</span>, lname: <span class=\"hljs-string\">'Erickson'</span>});<br>\t\tmsg.Line();<br>\t\texpect(<span class=\"hljs-literal\">true</span>).to.be.equal(<span class=\"hljs-literal\">true</span>);<br>\t\tdone();",
                "isRoot": false,
                "uuid": "34fae4b3-8c4f-486e-90ed-f0a3ef9cd3cc",
                "parentUUID": "1dd8407f-c213-4d24-bbb4-98c99841b294",
                "skipped": false
              },
              {
                "title": "should test all logging routines",
                "fullTitle": "Messenger (Console / Logger) for Browser and Server, including `gulp` pipeline support should test all logging routines",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect(<span class=\"hljs-literal\">true</span>).to.be.equal(<span class=\"hljs-literal\">true</span>);<br>done();",
                "isRoot": false,
                "uuid": "0954a84e-38e0-449e-9fa6-329a722b3677",
                "parentUUID": "1dd8407f-c213-4d24-bbb4-98c99841b294",
                "skipped": false
              },
              {
                "title": "should test `gulp` methods",
                "fullTitle": "Messenger (Console / Logger) for Browser and Server, including `gulp` pipeline support should test `gulp` methods",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect(<span class=\"hljs-literal\">true</span>).to.be.equal(<span class=\"hljs-literal\">true</span>);<br>done();",
                "isRoot": false,
                "uuid": "9c4f7450-7e7f-41c9-9657-ffe87194b739",
                "parentUUID": "1dd8407f-c213-4d24-bbb4-98c99841b294",
                "skipped": false
              },
              {
                "title": "should support all optional params",
                "fullTitle": "Messenger (Console / Logger) for Browser and Server, including `gulp` pipeline support should support all optional params",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "msg.Info(chalk.magenta(<span class=\"hljs-string\">'Note:  These are not working correctly yet...'</span>));<br>\t\tmsg.Line(<span class=\"hljs-string\">'#'</span>);<br>\t\tmsg.Line(<span class=\"hljs-string\">'-'</span>,<span class=\"hljs-number\">40</span>);<br>\t\tdone();",
                "isRoot": false,
                "uuid": "c1a34ee0-e50d-45af-8ddf-0f8f6beea88e",
                "parentUUID": "1dd8407f-c213-4d24-bbb4-98c99841b294",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/spec/MessengerSpec.js",
            "uuid": "1dd8407f-c213-4d24-bbb4-98c99841b294",
            "fullFile": "/Users/mikee/Documents/Projects/gulp-messenger/spec/MessengerSpec.js",
            "passes": [
              {
                "title": "should interpolate string",
                "fullTitle": "Messenger (Console / Logger) for Browser and Server, including `gulp` pipeline support should interpolate string",
                "timedOut": false,
                "duration": 13,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "msg.Info(user);<br>msg.Success(<span class=\"hljs-string\">'Hello there &lt;%= fname %&gt; &lt;%= lname %&gt;:'</span>, user);<br>msg.Success(<span class=\"hljs-string\">'These are our kids &lt;%= kids %&gt;'</span>, user);<br>done();",
                "isRoot": false,
                "uuid": "27cda7ed-ff39-4c86-91ad-7f73f0c6b021",
                "parentUUID": "1dd8407f-c213-4d24-bbb4-98c99841b294",
                "skipped": false
              },
              {
                "title": "should test all messenger routines",
                "fullTitle": "Messenger (Console / Logger) for Browser and Server, including `gulp` pipeline support should test all messenger routines",
                "timedOut": false,
                "duration": 6,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "msg.Log(<span class=\"hljs-string\">'log'</span>);<br>\t\tmsg.Info(<span class=\"hljs-string\">'info'</span>);<br>\t\tmsg.Error(<span class=\"hljs-string\">'error'</span>);<br>\t\tmsg.Success(<span class=\"hljs-string\">'success'</span>);<br>\t\tmsg.Warning(<span class=\"hljs-string\">'warning'</span>);<br>\t\tmsg.Warn(<span class=\"hljs-string\">\"using `warn` shorthand\"</span>);<br>\t\tmsg.Note(chalk.gray(<span class=\"hljs-string\">'note, color supplied by `Chalk` instance'</span>));<br>\t\tmsg.Time(<span class=\"hljs-string\">'time'</span>);<br>\t\tmsg.Debug(<span class=\"hljs-string\">'debug'</span>);<br>\t\tmsg.Header(<span class=\"hljs-string\">'This should be underline'</span>);<br>\t\tmsg.Log(chalk.red.underline(<span class=\"hljs-string\">'You can perform any text customization with simple log and `chalk` library'</span>));<br>\t\tmsg.Info(<span class=\"hljs-string\">'*'</span>,<span class=\"hljs-string\">'Bordered Output'</span>,<span class=\"hljs-string\">'='</span>);<br>\t\tmsg.Warning(<span class=\"hljs-string\">'Testing interpolation by &lt;%=fname %&gt; &lt;%=lname %&gt;'</span>, {fname: <span class=\"hljs-string\">'Mike'</span>, lname: <span class=\"hljs-string\">'Erickson'</span>});<br>\t\tmsg.Info({fname: <span class=\"hljs-string\">'Mike'</span>, lname: <span class=\"hljs-string\">'Erickson'</span>});<br>\t\tmsg.Line();<br>\t\texpect(<span class=\"hljs-literal\">true</span>).to.be.equal(<span class=\"hljs-literal\">true</span>);<br>\t\tdone();",
                "isRoot": false,
                "uuid": "34fae4b3-8c4f-486e-90ed-f0a3ef9cd3cc",
                "parentUUID": "1dd8407f-c213-4d24-bbb4-98c99841b294",
                "skipped": false
              },
              {
                "title": "should test all logging routines",
                "fullTitle": "Messenger (Console / Logger) for Browser and Server, including `gulp` pipeline support should test all logging routines",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect(<span class=\"hljs-literal\">true</span>).to.be.equal(<span class=\"hljs-literal\">true</span>);<br>done();",
                "isRoot": false,
                "uuid": "0954a84e-38e0-449e-9fa6-329a722b3677",
                "parentUUID": "1dd8407f-c213-4d24-bbb4-98c99841b294",
                "skipped": false
              },
              {
                "title": "should test `gulp` methods",
                "fullTitle": "Messenger (Console / Logger) for Browser and Server, including `gulp` pipeline support should test `gulp` methods",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect(<span class=\"hljs-literal\">true</span>).to.be.equal(<span class=\"hljs-literal\">true</span>);<br>done();",
                "isRoot": false,
                "uuid": "9c4f7450-7e7f-41c9-9657-ffe87194b739",
                "parentUUID": "1dd8407f-c213-4d24-bbb4-98c99841b294",
                "skipped": false
              },
              {
                "title": "should support all optional params",
                "fullTitle": "Messenger (Console / Logger) for Browser and Server, including `gulp` pipeline support should support all optional params",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "msg.Info(chalk.magenta(<span class=\"hljs-string\">'Note:  These are not working correctly yet...'</span>));<br>\t\tmsg.Line(<span class=\"hljs-string\">'#'</span>);<br>\t\tmsg.Line(<span class=\"hljs-string\">'-'</span>,<span class=\"hljs-number\">40</span>);<br>\t\tdone();",
                "isRoot": false,
                "uuid": "c1a34ee0-e50d-45af-8ddf-0f8f6beea88e",
                "parentUUID": "1dd8407f-c213-4d24-bbb4-98c99841b294",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 5,
            "totalPasses": 5,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 21
          },
          "ctx": "[Circular ~.allHooks.3.ctx]",
          "_events": {},
          "timer": {
            "0": null,
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 23992211,
            "_onTimeout": null,
            "_repeat": false,
            "domain": {
              "domain": null,
              "_events": {},
              "members": []
            }
          },
          "duration": 2,
          "state": "passed",
          "speed": "fast"
        }
      },
      "_events": {},
      "duration": 0,
      "_error": null
    },
    {
      "title": "\"before each\" hook",
      "async": 0,
      "sync": true,
      "_timeout": 2000,
      "_slow": 75,
      "_enableTimeouts": true,
      "timedOut": false,
      "_trace": {},
      "type": "hook",
      "parent": {
        "title": "Messenger (Console / Logger) for Browser and Server, including `gulp` pipeline support",
        "suites": [],
        "tests": [
          {
            "title": "should interpolate string",
            "fullTitle": "Messenger (Console / Logger) for Browser and Server, including `gulp` pipeline support should interpolate string",
            "timedOut": false,
            "duration": 13,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "msg.Info(user);<br>msg.Success(<span class=\"hljs-string\">'Hello there &lt;%= fname %&gt; &lt;%= lname %&gt;:'</span>, user);<br>msg.Success(<span class=\"hljs-string\">'These are our kids &lt;%= kids %&gt;'</span>, user);<br>done();",
            "isRoot": false,
            "uuid": "27cda7ed-ff39-4c86-91ad-7f73f0c6b021",
            "parentUUID": "1dd8407f-c213-4d24-bbb4-98c99841b294",
            "skipped": false
          },
          {
            "title": "should test all messenger routines",
            "fullTitle": "Messenger (Console / Logger) for Browser and Server, including `gulp` pipeline support should test all messenger routines",
            "timedOut": false,
            "duration": 6,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "msg.Log(<span class=\"hljs-string\">'log'</span>);<br>\t\tmsg.Info(<span class=\"hljs-string\">'info'</span>);<br>\t\tmsg.Error(<span class=\"hljs-string\">'error'</span>);<br>\t\tmsg.Success(<span class=\"hljs-string\">'success'</span>);<br>\t\tmsg.Warning(<span class=\"hljs-string\">'warning'</span>);<br>\t\tmsg.Warn(<span class=\"hljs-string\">\"using `warn` shorthand\"</span>);<br>\t\tmsg.Note(chalk.gray(<span class=\"hljs-string\">'note, color supplied by `Chalk` instance'</span>));<br>\t\tmsg.Time(<span class=\"hljs-string\">'time'</span>);<br>\t\tmsg.Debug(<span class=\"hljs-string\">'debug'</span>);<br>\t\tmsg.Header(<span class=\"hljs-string\">'This should be underline'</span>);<br>\t\tmsg.Log(chalk.red.underline(<span class=\"hljs-string\">'You can perform any text customization with simple log and `chalk` library'</span>));<br>\t\tmsg.Info(<span class=\"hljs-string\">'*'</span>,<span class=\"hljs-string\">'Bordered Output'</span>,<span class=\"hljs-string\">'='</span>);<br>\t\tmsg.Warning(<span class=\"hljs-string\">'Testing interpolation by &lt;%=fname %&gt; &lt;%=lname %&gt;'</span>, {fname: <span class=\"hljs-string\">'Mike'</span>, lname: <span class=\"hljs-string\">'Erickson'</span>});<br>\t\tmsg.Info({fname: <span class=\"hljs-string\">'Mike'</span>, lname: <span class=\"hljs-string\">'Erickson'</span>});<br>\t\tmsg.Line();<br>\t\texpect(<span class=\"hljs-literal\">true</span>).to.be.equal(<span class=\"hljs-literal\">true</span>);<br>\t\tdone();",
            "isRoot": false,
            "uuid": "34fae4b3-8c4f-486e-90ed-f0a3ef9cd3cc",
            "parentUUID": "1dd8407f-c213-4d24-bbb4-98c99841b294",
            "skipped": false
          },
          {
            "title": "should test all logging routines",
            "fullTitle": "Messenger (Console / Logger) for Browser and Server, including `gulp` pipeline support should test all logging routines",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(<span class=\"hljs-literal\">true</span>).to.be.equal(<span class=\"hljs-literal\">true</span>);<br>done();",
            "isRoot": false,
            "uuid": "0954a84e-38e0-449e-9fa6-329a722b3677",
            "parentUUID": "1dd8407f-c213-4d24-bbb4-98c99841b294",
            "skipped": false
          },
          {
            "title": "should test `gulp` methods",
            "fullTitle": "Messenger (Console / Logger) for Browser and Server, including `gulp` pipeline support should test `gulp` methods",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(<span class=\"hljs-literal\">true</span>).to.be.equal(<span class=\"hljs-literal\">true</span>);<br>done();",
            "isRoot": false,
            "uuid": "9c4f7450-7e7f-41c9-9657-ffe87194b739",
            "parentUUID": "1dd8407f-c213-4d24-bbb4-98c99841b294",
            "skipped": false
          },
          {
            "title": "should support all optional params",
            "fullTitle": "Messenger (Console / Logger) for Browser and Server, including `gulp` pipeline support should support all optional params",
            "timedOut": false,
            "duration": 2,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "msg.Info(chalk.magenta(<span class=\"hljs-string\">'Note:  These are not working correctly yet...'</span>));<br>\t\tmsg.Line(<span class=\"hljs-string\">'#'</span>);<br>\t\tmsg.Line(<span class=\"hljs-string\">'-'</span>,<span class=\"hljs-number\">40</span>);<br>\t\tdone();",
            "isRoot": false,
            "uuid": "c1a34ee0-e50d-45af-8ddf-0f8f6beea88e",
            "parentUUID": "1dd8407f-c213-4d24-bbb4-98c99841b294",
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/spec/MessengerSpec.js",
        "uuid": "1dd8407f-c213-4d24-bbb4-98c99841b294",
        "fullFile": "/Users/mikee/Documents/Projects/gulp-messenger/spec/MessengerSpec.js",
        "passes": [
          {
            "title": "should interpolate string",
            "fullTitle": "Messenger (Console / Logger) for Browser and Server, including `gulp` pipeline support should interpolate string",
            "timedOut": false,
            "duration": 13,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "msg.Info(user);<br>msg.Success(<span class=\"hljs-string\">'Hello there &lt;%= fname %&gt; &lt;%= lname %&gt;:'</span>, user);<br>msg.Success(<span class=\"hljs-string\">'These are our kids &lt;%= kids %&gt;'</span>, user);<br>done();",
            "isRoot": false,
            "uuid": "27cda7ed-ff39-4c86-91ad-7f73f0c6b021",
            "parentUUID": "1dd8407f-c213-4d24-bbb4-98c99841b294",
            "skipped": false
          },
          {
            "title": "should test all messenger routines",
            "fullTitle": "Messenger (Console / Logger) for Browser and Server, including `gulp` pipeline support should test all messenger routines",
            "timedOut": false,
            "duration": 6,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "msg.Log(<span class=\"hljs-string\">'log'</span>);<br>\t\tmsg.Info(<span class=\"hljs-string\">'info'</span>);<br>\t\tmsg.Error(<span class=\"hljs-string\">'error'</span>);<br>\t\tmsg.Success(<span class=\"hljs-string\">'success'</span>);<br>\t\tmsg.Warning(<span class=\"hljs-string\">'warning'</span>);<br>\t\tmsg.Warn(<span class=\"hljs-string\">\"using `warn` shorthand\"</span>);<br>\t\tmsg.Note(chalk.gray(<span class=\"hljs-string\">'note, color supplied by `Chalk` instance'</span>));<br>\t\tmsg.Time(<span class=\"hljs-string\">'time'</span>);<br>\t\tmsg.Debug(<span class=\"hljs-string\">'debug'</span>);<br>\t\tmsg.Header(<span class=\"hljs-string\">'This should be underline'</span>);<br>\t\tmsg.Log(chalk.red.underline(<span class=\"hljs-string\">'You can perform any text customization with simple log and `chalk` library'</span>));<br>\t\tmsg.Info(<span class=\"hljs-string\">'*'</span>,<span class=\"hljs-string\">'Bordered Output'</span>,<span class=\"hljs-string\">'='</span>);<br>\t\tmsg.Warning(<span class=\"hljs-string\">'Testing interpolation by &lt;%=fname %&gt; &lt;%=lname %&gt;'</span>, {fname: <span class=\"hljs-string\">'Mike'</span>, lname: <span class=\"hljs-string\">'Erickson'</span>});<br>\t\tmsg.Info({fname: <span class=\"hljs-string\">'Mike'</span>, lname: <span class=\"hljs-string\">'Erickson'</span>});<br>\t\tmsg.Line();<br>\t\texpect(<span class=\"hljs-literal\">true</span>).to.be.equal(<span class=\"hljs-literal\">true</span>);<br>\t\tdone();",
            "isRoot": false,
            "uuid": "34fae4b3-8c4f-486e-90ed-f0a3ef9cd3cc",
            "parentUUID": "1dd8407f-c213-4d24-bbb4-98c99841b294",
            "skipped": false
          },
          {
            "title": "should test all logging routines",
            "fullTitle": "Messenger (Console / Logger) for Browser and Server, including `gulp` pipeline support should test all logging routines",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(<span class=\"hljs-literal\">true</span>).to.be.equal(<span class=\"hljs-literal\">true</span>);<br>done();",
            "isRoot": false,
            "uuid": "0954a84e-38e0-449e-9fa6-329a722b3677",
            "parentUUID": "1dd8407f-c213-4d24-bbb4-98c99841b294",
            "skipped": false
          },
          {
            "title": "should test `gulp` methods",
            "fullTitle": "Messenger (Console / Logger) for Browser and Server, including `gulp` pipeline support should test `gulp` methods",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(<span class=\"hljs-literal\">true</span>).to.be.equal(<span class=\"hljs-literal\">true</span>);<br>done();",
            "isRoot": false,
            "uuid": "9c4f7450-7e7f-41c9-9657-ffe87194b739",
            "parentUUID": "1dd8407f-c213-4d24-bbb4-98c99841b294",
            "skipped": false
          },
          {
            "title": "should support all optional params",
            "fullTitle": "Messenger (Console / Logger) for Browser and Server, including `gulp` pipeline support should support all optional params",
            "timedOut": false,
            "duration": 2,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "msg.Info(chalk.magenta(<span class=\"hljs-string\">'Note:  These are not working correctly yet...'</span>));<br>\t\tmsg.Line(<span class=\"hljs-string\">'#'</span>);<br>\t\tmsg.Line(<span class=\"hljs-string\">'-'</span>,<span class=\"hljs-number\">40</span>);<br>\t\tdone();",
            "isRoot": false,
            "uuid": "c1a34ee0-e50d-45af-8ddf-0f8f6beea88e",
            "parentUUID": "1dd8407f-c213-4d24-bbb4-98c99841b294",
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 5,
        "totalPasses": 5,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 21
      },
      "ctx": {
        "_runnable": {
          "title": "should support all optional params",
          "async": 1,
          "sync": false,
          "_timeout": 2000,
          "_slow": 75,
          "_enableTimeouts": true,
          "timedOut": false,
          "_trace": {},
          "pending": false,
          "type": "test",
          "file": "/Users/mikee/Documents/Projects/gulp-messenger/spec/MessengerSpec.js",
          "parent": {
            "title": "Messenger (Console / Logger) for Browser and Server, including `gulp` pipeline support",
            "suites": [],
            "tests": [
              {
                "title": "should interpolate string",
                "fullTitle": "Messenger (Console / Logger) for Browser and Server, including `gulp` pipeline support should interpolate string",
                "timedOut": false,
                "duration": 13,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "msg.Info(user);<br>msg.Success(<span class=\"hljs-string\">'Hello there &lt;%= fname %&gt; &lt;%= lname %&gt;:'</span>, user);<br>msg.Success(<span class=\"hljs-string\">'These are our kids &lt;%= kids %&gt;'</span>, user);<br>done();",
                "isRoot": false,
                "uuid": "27cda7ed-ff39-4c86-91ad-7f73f0c6b021",
                "parentUUID": "1dd8407f-c213-4d24-bbb4-98c99841b294",
                "skipped": false
              },
              {
                "title": "should test all messenger routines",
                "fullTitle": "Messenger (Console / Logger) for Browser and Server, including `gulp` pipeline support should test all messenger routines",
                "timedOut": false,
                "duration": 6,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "msg.Log(<span class=\"hljs-string\">'log'</span>);<br>\t\tmsg.Info(<span class=\"hljs-string\">'info'</span>);<br>\t\tmsg.Error(<span class=\"hljs-string\">'error'</span>);<br>\t\tmsg.Success(<span class=\"hljs-string\">'success'</span>);<br>\t\tmsg.Warning(<span class=\"hljs-string\">'warning'</span>);<br>\t\tmsg.Warn(<span class=\"hljs-string\">\"using `warn` shorthand\"</span>);<br>\t\tmsg.Note(chalk.gray(<span class=\"hljs-string\">'note, color supplied by `Chalk` instance'</span>));<br>\t\tmsg.Time(<span class=\"hljs-string\">'time'</span>);<br>\t\tmsg.Debug(<span class=\"hljs-string\">'debug'</span>);<br>\t\tmsg.Header(<span class=\"hljs-string\">'This should be underline'</span>);<br>\t\tmsg.Log(chalk.red.underline(<span class=\"hljs-string\">'You can perform any text customization with simple log and `chalk` library'</span>));<br>\t\tmsg.Info(<span class=\"hljs-string\">'*'</span>,<span class=\"hljs-string\">'Bordered Output'</span>,<span class=\"hljs-string\">'='</span>);<br>\t\tmsg.Warning(<span class=\"hljs-string\">'Testing interpolation by &lt;%=fname %&gt; &lt;%=lname %&gt;'</span>, {fname: <span class=\"hljs-string\">'Mike'</span>, lname: <span class=\"hljs-string\">'Erickson'</span>});<br>\t\tmsg.Info({fname: <span class=\"hljs-string\">'Mike'</span>, lname: <span class=\"hljs-string\">'Erickson'</span>});<br>\t\tmsg.Line();<br>\t\texpect(<span class=\"hljs-literal\">true</span>).to.be.equal(<span class=\"hljs-literal\">true</span>);<br>\t\tdone();",
                "isRoot": false,
                "uuid": "34fae4b3-8c4f-486e-90ed-f0a3ef9cd3cc",
                "parentUUID": "1dd8407f-c213-4d24-bbb4-98c99841b294",
                "skipped": false
              },
              {
                "title": "should test all logging routines",
                "fullTitle": "Messenger (Console / Logger) for Browser and Server, including `gulp` pipeline support should test all logging routines",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect(<span class=\"hljs-literal\">true</span>).to.be.equal(<span class=\"hljs-literal\">true</span>);<br>done();",
                "isRoot": false,
                "uuid": "0954a84e-38e0-449e-9fa6-329a722b3677",
                "parentUUID": "1dd8407f-c213-4d24-bbb4-98c99841b294",
                "skipped": false
              },
              {
                "title": "should test `gulp` methods",
                "fullTitle": "Messenger (Console / Logger) for Browser and Server, including `gulp` pipeline support should test `gulp` methods",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect(<span class=\"hljs-literal\">true</span>).to.be.equal(<span class=\"hljs-literal\">true</span>);<br>done();",
                "isRoot": false,
                "uuid": "9c4f7450-7e7f-41c9-9657-ffe87194b739",
                "parentUUID": "1dd8407f-c213-4d24-bbb4-98c99841b294",
                "skipped": false
              },
              {
                "title": "should support all optional params",
                "fullTitle": "Messenger (Console / Logger) for Browser and Server, including `gulp` pipeline support should support all optional params",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "msg.Info(chalk.magenta(<span class=\"hljs-string\">'Note:  These are not working correctly yet...'</span>));<br>\t\tmsg.Line(<span class=\"hljs-string\">'#'</span>);<br>\t\tmsg.Line(<span class=\"hljs-string\">'-'</span>,<span class=\"hljs-number\">40</span>);<br>\t\tdone();",
                "isRoot": false,
                "uuid": "c1a34ee0-e50d-45af-8ddf-0f8f6beea88e",
                "parentUUID": "1dd8407f-c213-4d24-bbb4-98c99841b294",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/spec/MessengerSpec.js",
            "uuid": "1dd8407f-c213-4d24-bbb4-98c99841b294",
            "fullFile": "/Users/mikee/Documents/Projects/gulp-messenger/spec/MessengerSpec.js",
            "passes": [
              {
                "title": "should interpolate string",
                "fullTitle": "Messenger (Console / Logger) for Browser and Server, including `gulp` pipeline support should interpolate string",
                "timedOut": false,
                "duration": 13,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "msg.Info(user);<br>msg.Success(<span class=\"hljs-string\">'Hello there &lt;%= fname %&gt; &lt;%= lname %&gt;:'</span>, user);<br>msg.Success(<span class=\"hljs-string\">'These are our kids &lt;%= kids %&gt;'</span>, user);<br>done();",
                "isRoot": false,
                "uuid": "27cda7ed-ff39-4c86-91ad-7f73f0c6b021",
                "parentUUID": "1dd8407f-c213-4d24-bbb4-98c99841b294",
                "skipped": false
              },
              {
                "title": "should test all messenger routines",
                "fullTitle": "Messenger (Console / Logger) for Browser and Server, including `gulp` pipeline support should test all messenger routines",
                "timedOut": false,
                "duration": 6,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "msg.Log(<span class=\"hljs-string\">'log'</span>);<br>\t\tmsg.Info(<span class=\"hljs-string\">'info'</span>);<br>\t\tmsg.Error(<span class=\"hljs-string\">'error'</span>);<br>\t\tmsg.Success(<span class=\"hljs-string\">'success'</span>);<br>\t\tmsg.Warning(<span class=\"hljs-string\">'warning'</span>);<br>\t\tmsg.Warn(<span class=\"hljs-string\">\"using `warn` shorthand\"</span>);<br>\t\tmsg.Note(chalk.gray(<span class=\"hljs-string\">'note, color supplied by `Chalk` instance'</span>));<br>\t\tmsg.Time(<span class=\"hljs-string\">'time'</span>);<br>\t\tmsg.Debug(<span class=\"hljs-string\">'debug'</span>);<br>\t\tmsg.Header(<span class=\"hljs-string\">'This should be underline'</span>);<br>\t\tmsg.Log(chalk.red.underline(<span class=\"hljs-string\">'You can perform any text customization with simple log and `chalk` library'</span>));<br>\t\tmsg.Info(<span class=\"hljs-string\">'*'</span>,<span class=\"hljs-string\">'Bordered Output'</span>,<span class=\"hljs-string\">'='</span>);<br>\t\tmsg.Warning(<span class=\"hljs-string\">'Testing interpolation by &lt;%=fname %&gt; &lt;%=lname %&gt;'</span>, {fname: <span class=\"hljs-string\">'Mike'</span>, lname: <span class=\"hljs-string\">'Erickson'</span>});<br>\t\tmsg.Info({fname: <span class=\"hljs-string\">'Mike'</span>, lname: <span class=\"hljs-string\">'Erickson'</span>});<br>\t\tmsg.Line();<br>\t\texpect(<span class=\"hljs-literal\">true</span>).to.be.equal(<span class=\"hljs-literal\">true</span>);<br>\t\tdone();",
                "isRoot": false,
                "uuid": "34fae4b3-8c4f-486e-90ed-f0a3ef9cd3cc",
                "parentUUID": "1dd8407f-c213-4d24-bbb4-98c99841b294",
                "skipped": false
              },
              {
                "title": "should test all logging routines",
                "fullTitle": "Messenger (Console / Logger) for Browser and Server, including `gulp` pipeline support should test all logging routines",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect(<span class=\"hljs-literal\">true</span>).to.be.equal(<span class=\"hljs-literal\">true</span>);<br>done();",
                "isRoot": false,
                "uuid": "0954a84e-38e0-449e-9fa6-329a722b3677",
                "parentUUID": "1dd8407f-c213-4d24-bbb4-98c99841b294",
                "skipped": false
              },
              {
                "title": "should test `gulp` methods",
                "fullTitle": "Messenger (Console / Logger) for Browser and Server, including `gulp` pipeline support should test `gulp` methods",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect(<span class=\"hljs-literal\">true</span>).to.be.equal(<span class=\"hljs-literal\">true</span>);<br>done();",
                "isRoot": false,
                "uuid": "9c4f7450-7e7f-41c9-9657-ffe87194b739",
                "parentUUID": "1dd8407f-c213-4d24-bbb4-98c99841b294",
                "skipped": false
              },
              {
                "title": "should support all optional params",
                "fullTitle": "Messenger (Console / Logger) for Browser and Server, including `gulp` pipeline support should support all optional params",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "msg.Info(chalk.magenta(<span class=\"hljs-string\">'Note:  These are not working correctly yet...'</span>));<br>\t\tmsg.Line(<span class=\"hljs-string\">'#'</span>);<br>\t\tmsg.Line(<span class=\"hljs-string\">'-'</span>,<span class=\"hljs-number\">40</span>);<br>\t\tdone();",
                "isRoot": false,
                "uuid": "c1a34ee0-e50d-45af-8ddf-0f8f6beea88e",
                "parentUUID": "1dd8407f-c213-4d24-bbb4-98c99841b294",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 5,
            "totalPasses": 5,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 21
          },
          "ctx": "[Circular ~.allHooks.4.ctx]",
          "_events": {},
          "timer": {
            "0": null,
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 23992211,
            "_onTimeout": null,
            "_repeat": false,
            "domain": {
              "domain": null,
              "_events": {},
              "members": []
            }
          },
          "duration": 2,
          "state": "passed",
          "speed": "fast"
        },
        "test": {
          "title": "should support all optional params",
          "async": 1,
          "sync": false,
          "_timeout": 2000,
          "_slow": 75,
          "_enableTimeouts": true,
          "timedOut": false,
          "_trace": {},
          "pending": false,
          "type": "test",
          "file": "/Users/mikee/Documents/Projects/gulp-messenger/spec/MessengerSpec.js",
          "parent": {
            "title": "Messenger (Console / Logger) for Browser and Server, including `gulp` pipeline support",
            "suites": [],
            "tests": [
              {
                "title": "should interpolate string",
                "fullTitle": "Messenger (Console / Logger) for Browser and Server, including `gulp` pipeline support should interpolate string",
                "timedOut": false,
                "duration": 13,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "msg.Info(user);<br>msg.Success(<span class=\"hljs-string\">'Hello there &lt;%= fname %&gt; &lt;%= lname %&gt;:'</span>, user);<br>msg.Success(<span class=\"hljs-string\">'These are our kids &lt;%= kids %&gt;'</span>, user);<br>done();",
                "isRoot": false,
                "uuid": "27cda7ed-ff39-4c86-91ad-7f73f0c6b021",
                "parentUUID": "1dd8407f-c213-4d24-bbb4-98c99841b294",
                "skipped": false
              },
              {
                "title": "should test all messenger routines",
                "fullTitle": "Messenger (Console / Logger) for Browser and Server, including `gulp` pipeline support should test all messenger routines",
                "timedOut": false,
                "duration": 6,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "msg.Log(<span class=\"hljs-string\">'log'</span>);<br>\t\tmsg.Info(<span class=\"hljs-string\">'info'</span>);<br>\t\tmsg.Error(<span class=\"hljs-string\">'error'</span>);<br>\t\tmsg.Success(<span class=\"hljs-string\">'success'</span>);<br>\t\tmsg.Warning(<span class=\"hljs-string\">'warning'</span>);<br>\t\tmsg.Warn(<span class=\"hljs-string\">\"using `warn` shorthand\"</span>);<br>\t\tmsg.Note(chalk.gray(<span class=\"hljs-string\">'note, color supplied by `Chalk` instance'</span>));<br>\t\tmsg.Time(<span class=\"hljs-string\">'time'</span>);<br>\t\tmsg.Debug(<span class=\"hljs-string\">'debug'</span>);<br>\t\tmsg.Header(<span class=\"hljs-string\">'This should be underline'</span>);<br>\t\tmsg.Log(chalk.red.underline(<span class=\"hljs-string\">'You can perform any text customization with simple log and `chalk` library'</span>));<br>\t\tmsg.Info(<span class=\"hljs-string\">'*'</span>,<span class=\"hljs-string\">'Bordered Output'</span>,<span class=\"hljs-string\">'='</span>);<br>\t\tmsg.Warning(<span class=\"hljs-string\">'Testing interpolation by &lt;%=fname %&gt; &lt;%=lname %&gt;'</span>, {fname: <span class=\"hljs-string\">'Mike'</span>, lname: <span class=\"hljs-string\">'Erickson'</span>});<br>\t\tmsg.Info({fname: <span class=\"hljs-string\">'Mike'</span>, lname: <span class=\"hljs-string\">'Erickson'</span>});<br>\t\tmsg.Line();<br>\t\texpect(<span class=\"hljs-literal\">true</span>).to.be.equal(<span class=\"hljs-literal\">true</span>);<br>\t\tdone();",
                "isRoot": false,
                "uuid": "34fae4b3-8c4f-486e-90ed-f0a3ef9cd3cc",
                "parentUUID": "1dd8407f-c213-4d24-bbb4-98c99841b294",
                "skipped": false
              },
              {
                "title": "should test all logging routines",
                "fullTitle": "Messenger (Console / Logger) for Browser and Server, including `gulp` pipeline support should test all logging routines",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect(<span class=\"hljs-literal\">true</span>).to.be.equal(<span class=\"hljs-literal\">true</span>);<br>done();",
                "isRoot": false,
                "uuid": "0954a84e-38e0-449e-9fa6-329a722b3677",
                "parentUUID": "1dd8407f-c213-4d24-bbb4-98c99841b294",
                "skipped": false
              },
              {
                "title": "should test `gulp` methods",
                "fullTitle": "Messenger (Console / Logger) for Browser and Server, including `gulp` pipeline support should test `gulp` methods",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect(<span class=\"hljs-literal\">true</span>).to.be.equal(<span class=\"hljs-literal\">true</span>);<br>done();",
                "isRoot": false,
                "uuid": "9c4f7450-7e7f-41c9-9657-ffe87194b739",
                "parentUUID": "1dd8407f-c213-4d24-bbb4-98c99841b294",
                "skipped": false
              },
              {
                "title": "should support all optional params",
                "fullTitle": "Messenger (Console / Logger) for Browser and Server, including `gulp` pipeline support should support all optional params",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "msg.Info(chalk.magenta(<span class=\"hljs-string\">'Note:  These are not working correctly yet...'</span>));<br>\t\tmsg.Line(<span class=\"hljs-string\">'#'</span>);<br>\t\tmsg.Line(<span class=\"hljs-string\">'-'</span>,<span class=\"hljs-number\">40</span>);<br>\t\tdone();",
                "isRoot": false,
                "uuid": "c1a34ee0-e50d-45af-8ddf-0f8f6beea88e",
                "parentUUID": "1dd8407f-c213-4d24-bbb4-98c99841b294",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/spec/MessengerSpec.js",
            "uuid": "1dd8407f-c213-4d24-bbb4-98c99841b294",
            "fullFile": "/Users/mikee/Documents/Projects/gulp-messenger/spec/MessengerSpec.js",
            "passes": [
              {
                "title": "should interpolate string",
                "fullTitle": "Messenger (Console / Logger) for Browser and Server, including `gulp` pipeline support should interpolate string",
                "timedOut": false,
                "duration": 13,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "msg.Info(user);<br>msg.Success(<span class=\"hljs-string\">'Hello there &lt;%= fname %&gt; &lt;%= lname %&gt;:'</span>, user);<br>msg.Success(<span class=\"hljs-string\">'These are our kids &lt;%= kids %&gt;'</span>, user);<br>done();",
                "isRoot": false,
                "uuid": "27cda7ed-ff39-4c86-91ad-7f73f0c6b021",
                "parentUUID": "1dd8407f-c213-4d24-bbb4-98c99841b294",
                "skipped": false
              },
              {
                "title": "should test all messenger routines",
                "fullTitle": "Messenger (Console / Logger) for Browser and Server, including `gulp` pipeline support should test all messenger routines",
                "timedOut": false,
                "duration": 6,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "msg.Log(<span class=\"hljs-string\">'log'</span>);<br>\t\tmsg.Info(<span class=\"hljs-string\">'info'</span>);<br>\t\tmsg.Error(<span class=\"hljs-string\">'error'</span>);<br>\t\tmsg.Success(<span class=\"hljs-string\">'success'</span>);<br>\t\tmsg.Warning(<span class=\"hljs-string\">'warning'</span>);<br>\t\tmsg.Warn(<span class=\"hljs-string\">\"using `warn` shorthand\"</span>);<br>\t\tmsg.Note(chalk.gray(<span class=\"hljs-string\">'note, color supplied by `Chalk` instance'</span>));<br>\t\tmsg.Time(<span class=\"hljs-string\">'time'</span>);<br>\t\tmsg.Debug(<span class=\"hljs-string\">'debug'</span>);<br>\t\tmsg.Header(<span class=\"hljs-string\">'This should be underline'</span>);<br>\t\tmsg.Log(chalk.red.underline(<span class=\"hljs-string\">'You can perform any text customization with simple log and `chalk` library'</span>));<br>\t\tmsg.Info(<span class=\"hljs-string\">'*'</span>,<span class=\"hljs-string\">'Bordered Output'</span>,<span class=\"hljs-string\">'='</span>);<br>\t\tmsg.Warning(<span class=\"hljs-string\">'Testing interpolation by &lt;%=fname %&gt; &lt;%=lname %&gt;'</span>, {fname: <span class=\"hljs-string\">'Mike'</span>, lname: <span class=\"hljs-string\">'Erickson'</span>});<br>\t\tmsg.Info({fname: <span class=\"hljs-string\">'Mike'</span>, lname: <span class=\"hljs-string\">'Erickson'</span>});<br>\t\tmsg.Line();<br>\t\texpect(<span class=\"hljs-literal\">true</span>).to.be.equal(<span class=\"hljs-literal\">true</span>);<br>\t\tdone();",
                "isRoot": false,
                "uuid": "34fae4b3-8c4f-486e-90ed-f0a3ef9cd3cc",
                "parentUUID": "1dd8407f-c213-4d24-bbb4-98c99841b294",
                "skipped": false
              },
              {
                "title": "should test all logging routines",
                "fullTitle": "Messenger (Console / Logger) for Browser and Server, including `gulp` pipeline support should test all logging routines",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect(<span class=\"hljs-literal\">true</span>).to.be.equal(<span class=\"hljs-literal\">true</span>);<br>done();",
                "isRoot": false,
                "uuid": "0954a84e-38e0-449e-9fa6-329a722b3677",
                "parentUUID": "1dd8407f-c213-4d24-bbb4-98c99841b294",
                "skipped": false
              },
              {
                "title": "should test `gulp` methods",
                "fullTitle": "Messenger (Console / Logger) for Browser and Server, including `gulp` pipeline support should test `gulp` methods",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect(<span class=\"hljs-literal\">true</span>).to.be.equal(<span class=\"hljs-literal\">true</span>);<br>done();",
                "isRoot": false,
                "uuid": "9c4f7450-7e7f-41c9-9657-ffe87194b739",
                "parentUUID": "1dd8407f-c213-4d24-bbb4-98c99841b294",
                "skipped": false
              },
              {
                "title": "should support all optional params",
                "fullTitle": "Messenger (Console / Logger) for Browser and Server, including `gulp` pipeline support should support all optional params",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "msg.Info(chalk.magenta(<span class=\"hljs-string\">'Note:  These are not working correctly yet...'</span>));<br>\t\tmsg.Line(<span class=\"hljs-string\">'#'</span>);<br>\t\tmsg.Line(<span class=\"hljs-string\">'-'</span>,<span class=\"hljs-number\">40</span>);<br>\t\tdone();",
                "isRoot": false,
                "uuid": "c1a34ee0-e50d-45af-8ddf-0f8f6beea88e",
                "parentUUID": "1dd8407f-c213-4d24-bbb4-98c99841b294",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 5,
            "totalPasses": 5,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 21
          },
          "ctx": "[Circular ~.allHooks.4.ctx]",
          "_events": {},
          "timer": {
            "0": null,
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 23992211,
            "_onTimeout": null,
            "_repeat": false,
            "domain": {
              "domain": null,
              "_events": {},
              "members": []
            }
          },
          "duration": 2,
          "state": "passed",
          "speed": "fast"
        }
      },
      "_events": {},
      "duration": 0,
      "_error": null
    }
  ],
  "allPending": [],
  "allPasses": [
    {
      "title": "should interpolate string",
      "fullTitle": "Messenger (Console / Logger) for Browser and Server, including `gulp` pipeline support should interpolate string",
      "timedOut": false,
      "duration": 13,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "msg.Info(user);<br>msg.Success(<span class=\"hljs-string\">'Hello there &lt;%= fname %&gt; &lt;%= lname %&gt;:'</span>, user);<br>msg.Success(<span class=\"hljs-string\">'These are our kids &lt;%= kids %&gt;'</span>, user);<br>done();",
      "isRoot": false,
      "uuid": "ea26e783-0bba-462a-b694-fda558add71b",
      "parentUUID": "1dd8407f-c213-4d24-bbb4-98c99841b294",
      "skipped": false
    },
    {
      "title": "should test all messenger routines",
      "fullTitle": "Messenger (Console / Logger) for Browser and Server, including `gulp` pipeline support should test all messenger routines",
      "timedOut": false,
      "duration": 6,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "msg.Log(<span class=\"hljs-string\">'log'</span>);<br>\t\tmsg.Info(<span class=\"hljs-string\">'info'</span>);<br>\t\tmsg.Error(<span class=\"hljs-string\">'error'</span>);<br>\t\tmsg.Success(<span class=\"hljs-string\">'success'</span>);<br>\t\tmsg.Warning(<span class=\"hljs-string\">'warning'</span>);<br>\t\tmsg.Warn(<span class=\"hljs-string\">\"using `warn` shorthand\"</span>);<br>\t\tmsg.Note(chalk.gray(<span class=\"hljs-string\">'note, color supplied by `Chalk` instance'</span>));<br>\t\tmsg.Time(<span class=\"hljs-string\">'time'</span>);<br>\t\tmsg.Debug(<span class=\"hljs-string\">'debug'</span>);<br>\t\tmsg.Header(<span class=\"hljs-string\">'This should be underline'</span>);<br>\t\tmsg.Log(chalk.red.underline(<span class=\"hljs-string\">'You can perform any text customization with simple log and `chalk` library'</span>));<br>\t\tmsg.Info(<span class=\"hljs-string\">'*'</span>,<span class=\"hljs-string\">'Bordered Output'</span>,<span class=\"hljs-string\">'='</span>);<br>\t\tmsg.Warning(<span class=\"hljs-string\">'Testing interpolation by &lt;%=fname %&gt; &lt;%=lname %&gt;'</span>, {fname: <span class=\"hljs-string\">'Mike'</span>, lname: <span class=\"hljs-string\">'Erickson'</span>});<br>\t\tmsg.Info({fname: <span class=\"hljs-string\">'Mike'</span>, lname: <span class=\"hljs-string\">'Erickson'</span>});<br>\t\tmsg.Line();<br>\t\texpect(<span class=\"hljs-literal\">true</span>).to.be.equal(<span class=\"hljs-literal\">true</span>);<br>\t\tdone();",
      "isRoot": false,
      "uuid": "d7ecbf5b-f775-42c4-a9d7-76d81ce165f5",
      "parentUUID": "1dd8407f-c213-4d24-bbb4-98c99841b294",
      "skipped": false
    },
    {
      "title": "should test all logging routines",
      "fullTitle": "Messenger (Console / Logger) for Browser and Server, including `gulp` pipeline support should test all logging routines",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect(<span class=\"hljs-literal\">true</span>).to.be.equal(<span class=\"hljs-literal\">true</span>);<br>done();",
      "isRoot": false,
      "uuid": "478e9f3a-1bca-4b93-9565-2371dfd16fbc",
      "parentUUID": "1dd8407f-c213-4d24-bbb4-98c99841b294",
      "skipped": false
    },
    {
      "title": "should test `gulp` methods",
      "fullTitle": "Messenger (Console / Logger) for Browser and Server, including `gulp` pipeline support should test `gulp` methods",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect(<span class=\"hljs-literal\">true</span>).to.be.equal(<span class=\"hljs-literal\">true</span>);<br>done();",
      "isRoot": false,
      "uuid": "a0bd9a4e-033d-44b2-b321-4e1a56706fcb",
      "parentUUID": "1dd8407f-c213-4d24-bbb4-98c99841b294",
      "skipped": false
    },
    {
      "title": "should support all optional params",
      "fullTitle": "Messenger (Console / Logger) for Browser and Server, including `gulp` pipeline support should support all optional params",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "msg.Info(chalk.magenta(<span class=\"hljs-string\">'Note:  These are not working correctly yet...'</span>));<br>\t\tmsg.Line(<span class=\"hljs-string\">'#'</span>);<br>\t\tmsg.Line(<span class=\"hljs-string\">'-'</span>,<span class=\"hljs-number\">40</span>);<br>\t\tdone();",
      "isRoot": false,
      "uuid": "008664e5-5e35-4cdf-a50f-113e4824ca79",
      "parentUUID": "1dd8407f-c213-4d24-bbb4-98c99841b294",
      "skipped": false
    },
    {
      "title": "should print lines before and after",
      "fullTitle": "Messenger Line Test should print lines before and after",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "msg.Warn(<span class=\"hljs-string\">'='</span>, <span class=\"hljs-string\">'Testing `Warn` message'</span>, <span class=\"hljs-string\">'*'</span>);<br>msg.Warning(<span class=\"hljs-string\">'='</span>, <span class=\"hljs-string\">'This is from `Warning` routine'</span>, <span class=\"hljs-string\">'*'</span>);<br>expect(<span class=\"hljs-literal\">true</span>).to.be.equal(<span class=\"hljs-literal\">true</span>);<br>done();",
      "isRoot": false,
      "uuid": "136ad83c-4246-4d17-a82c-a4f0ca12c6b0",
      "parentUUID": "d9778bcd-7fbe-4196-b2d5-209177311207",
      "skipped": false
    },
    {
      "title": "should print lines before and after",
      "fullTitle": "Messenger Line Test should print lines before and after",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "msg.Error(<span class=\"hljs-string\">'='</span>, <span class=\"hljs-string\">'Now trying `Error containing `=` '</span>);<br>expect(<span class=\"hljs-literal\">true</span>).to.be.equal(<span class=\"hljs-literal\">true</span>);<br>done();",
      "isRoot": false,
      "uuid": "2f6e1e28-e0ab-48b6-87bd-d7d8d3d864fd",
      "parentUUID": "d9778bcd-7fbe-4196-b2d5-209177311207",
      "skipped": false
    },
    {
      "title": "should print lines before and after",
      "fullTitle": "Messenger Line Test should print lines before and after",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "msg.Success(<span class=\"hljs-string\">''</span>, <span class=\"hljs-string\">'A `Success` line after this message containing `x` '</span>, <span class=\"hljs-string\">'x'</span>);<br>expect(<span class=\"hljs-literal\">true</span>).to.be.equal(<span class=\"hljs-literal\">true</span>);<br>done();",
      "isRoot": false,
      "uuid": "2c0959fb-5cfd-4f32-a8af-14b513359f36",
      "parentUUID": "d9778bcd-7fbe-4196-b2d5-209177311207",
      "skipped": false
    },
    {
      "title": "should work with all messenger methods",
      "fullTitle": "Test Using Console Override should work with all messenger methods",
      "timedOut": false,
      "duration": 5,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "msg.log(<span class=\"hljs-string\">'log'</span>);<br>\t\tmsg.info(<span class=\"hljs-string\">'info'</span>);<br>\t\tmsg.error(<span class=\"hljs-string\">'error'</span>);<br>\t\tmsg.success(<span class=\"hljs-string\">'success'</span>);<br>\t\tmsg.warning(<span class=\"hljs-string\">'warning'</span>);<br>\t\tmsg.warn(<span class=\"hljs-string\">\"using `warn` shorthand\"</span>);<br>\t\tmsg.note(chalk.gray(<span class=\"hljs-string\">'note, color supplied by `Chalk` instance'</span>));<br>\t\tmsg.time(<span class=\"hljs-string\">'time'</span>);<br>\t\tmsg.debug(<span class=\"hljs-string\">'debug'</span>);<br>\t\tmsg.header(<span class=\"hljs-string\">'This should be underline'</span>);<br>\t\tmsg.log(chalk.red.underline(<span class=\"hljs-string\">'You can perform any text customization with simple log and `chalk` library'</span>));<br>\t\tmsg.info(<span class=\"hljs-string\">'*'</span>,<span class=\"hljs-string\">'Bordered Output'</span>,<span class=\"hljs-string\">'='</span>);<br>\t\tmsg.warning(<span class=\"hljs-string\">'Testing interpolation by &lt;%=fname %&gt; &lt;%=lname %&gt;'</span>, {fname: <span class=\"hljs-string\">'Mike'</span>, lname: <span class=\"hljs-string\">'Erickson'</span>});<br>\t\tmsg.info({fname: <span class=\"hljs-string\">'Mike'</span>, lname: <span class=\"hljs-string\">'Erickson'</span>});<br>\t\tmsg.line();<br>\t\texpect(<span class=\"hljs-literal\">true</span>).to.be.equal(<span class=\"hljs-literal\">true</span>);<br>\t\tdone();",
      "isRoot": false,
      "uuid": "06d8bcfd-6618-4657-b2db-7524c549b85b",
      "parentUUID": "38f3ac12-d170-41cb-ac5e-653670ee19d8",
      "skipped": false
    },
    {
      "title": "should return -1 when the value is not present",
      "fullTitle": "#indexOf() should return -1 when the value is not present",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "assert.equal(-1, [1,2,3].indexOf(5));<br>assert.equal(-1, [1,2,3].indexOf(0));",
      "isRoot": false,
      "uuid": "bb8de2d2-507b-44af-83e3-80098a605a4a",
      "parentUUID": "a08e7c19-95f5-472e-91da-f2ca01c09410",
      "skipped": false
    },
    {
      "title": "should return index when value is present",
      "fullTitle": "#indexOf() should return index when value is present",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "assert.equal(1, [1,2,3].indexOf(2));<br>assert.equal(2, [1,2,3].indexOf(3));",
      "isRoot": false,
      "uuid": "15b9c024-12f0-4b41-89ff-daf6dd80db10",
      "parentUUID": "a08e7c19-95f5-472e-91da-f2ca01c09410",
      "skipped": false
    },
    {
      "title": "should work with all messenger methods",
      "fullTitle": "Test Using Console Override should work with all messenger methods",
      "timedOut": false,
      "duration": 5,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'log'</span>);<br>\t\t<span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'test my conbsole'</span>);<br>\t\t<span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'test my conbsole'</span>);<br>\t\t<span class=\"hljs-built_in\">console</span>.info(<span class=\"hljs-string\">'info'</span>);<br>\t\t<span class=\"hljs-built_in\">console</span>.error(<span class=\"hljs-string\">'error'</span>);<br>\t\t<span class=\"hljs-built_in\">console</span>.success(<span class=\"hljs-string\">'success'</span>);<br>\t\t<span class=\"hljs-built_in\">console</span>.warning(<span class=\"hljs-string\">'warning'</span>);<br>\t\t<span class=\"hljs-built_in\">console</span>.warn(<span class=\"hljs-string\">\"using `warn` shorthand\"</span>);<br>\t\t<span class=\"hljs-built_in\">console</span>.note(chalk.gray(<span class=\"hljs-string\">'note, color supplied by `Chalk` instance'</span>));<br>\t\t<span class=\"hljs-built_in\">console</span>.time(<span class=\"hljs-string\">'time'</span>);<br>\t\t<span class=\"hljs-built_in\">console</span>.debug(<span class=\"hljs-string\">'debug'</span>);<br>\t\t<span class=\"hljs-built_in\">console</span>.header(<span class=\"hljs-string\">'This should be underline'</span>);<br>\t\t<span class=\"hljs-built_in\">console</span>.log(chalk.red.underline(<span class=\"hljs-string\">'You can perform any text customization with simple log and `chalk` library'</span>));<br>\t\t<span class=\"hljs-built_in\">console</span>.info(<span class=\"hljs-string\">'*'</span>,<span class=\"hljs-string\">'Bordered Output'</span>,<span class=\"hljs-string\">'='</span>);<br>\t\t<span class=\"hljs-built_in\">console</span>.warning(<span class=\"hljs-string\">'Testing interpolation by &lt;%=fname %&gt; &lt;%=lname %&gt;'</span>, {fname: <span class=\"hljs-string\">'Mike'</span>, lname: <span class=\"hljs-string\">'Erickson'</span>});<br>\t\t<span class=\"hljs-built_in\">console</span>.info({fname: <span class=\"hljs-string\">'Mike'</span>, lname: <span class=\"hljs-string\">'Erickson'</span>});<br>\t\t<span class=\"hljs-built_in\">console</span>.line();<br>\t\texpect(<span class=\"hljs-literal\">true</span>).to.be.equal(<span class=\"hljs-literal\">true</span>);<br>\t\tdone();",
      "isRoot": false,
      "uuid": "efbacf64-b864-42a0-ab38-fd3634c1832d",
      "parentUUID": "685e220d-c556-4a6a-8e9c-230ab01205aa",
      "skipped": false
    }
  ],
  "allFailures": []
}